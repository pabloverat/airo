Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list func_list cuerpo
Rule 2     program -> encabezamiento var_list cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     calcula_globales -> <empty>
Rule 6     encabezamiento -> PROGRAM ID
Rule 7     context_to_global -> <empty>
Rule 8     cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
Rule 9     variable -> VAR ID COLON var_typ
Rule 10    variable -> VAR ID COLON var_typ declare_dims
Rule 11    var_list -> variable var_list
Rule 12    var_list -> variable
Rule 13    func_list -> func func_list
Rule 14    func_list -> func
Rule 15    estat_list -> estat estat_list
Rule 16    estat_list -> estat
Rule 17    param_list -> param COMMA param_list
Rule 18    param_list -> param
Rule 19    save_array_size -> <empty>
Rule 20    save_matrix_size -> <empty>
Rule 21    declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size
Rule 22    declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size
Rule 23    save_array_index -> <empty>
Rule 24    dims -> OPBRACKET aritm save_array_index CLBRACKET
Rule 25    dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET
Rule 26    save_global_func -> <empty>
Rule 27    func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
Rule 28    func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
Rule 29    context_to_local -> <empty>
Rule 30    ciclo_q1 -> <empty>
Rule 31    ciclo_q2 -> <empty>
Rule 32    ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
Rule 33    conditional_q1 -> <empty>
Rule 34    conditional_q2 -> <empty>
Rule 35    conditional_q3 -> <empty>
Rule 36    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
Rule 37    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
Rule 38    save_return_value -> <empty>
Rule 39    func_cont -> var_list estat_list RETURN aritm save_return_value
Rule 40    func_cont -> estat_list RETURN aritm save_return_value
Rule 41    func_cont -> var_list estat_list
Rule 42    func_cont -> estat_list
Rule 43    estat -> asign
Rule 44    estat -> llam_void
Rule 45    estat -> lectura
Rule 46    estat -> escritura
Rule 47    estat -> carga_dt
Rule 48    estat -> decision
Rule 49    estat -> ciclo
Rule 50    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 51    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
Rule 52    param -> ID COLON var_typ
Rule 53    param -> ID COLON var_typ dims
Rule 54    var_typ -> INT
Rule 55    var_typ -> FLOAT
Rule 56    var_typ -> CHAR
Rule 57    var_typ -> BOOL
Rule 58    var_typ -> FRAME
Rule 59    func_typ -> INT
Rule 60    func_typ -> FLOAT
Rule 61    func_typ -> CHAR
Rule 62    func_typ -> BOOL
Rule 63    func_typ -> FRAME
Rule 64    func_typ -> VOID
Rule 65    check_aritm_operation -> <empty>
Rule 66    check_aritm -> <empty>
Rule 67    aritm -> term check_aritm PLUS check_aritm_operation aritm
Rule 68    aritm -> term check_aritm MINUS check_aritm_operation aritm
Rule 69    aritm -> term check_aritm
Rule 70    check_term_operation -> <empty>
Rule 71    check_term -> <empty>
Rule 72    term -> factor check_term TIMES check_term_operation term
Rule 73    term -> factor check_term DIVIDE check_term_operation term
Rule 74    term -> factor check_term
Rule 75    factortype_const_int -> <empty>
Rule 76    factortype_const_float -> <empty>
Rule 77    factor_const -> CONST_INT factortype_const_int
Rule 78    factor_const -> CONST_FLOAT factortype_const_float
Rule 79    factor_var -> ID
Rule 80    factor_var -> ID dims
Rule 81    function_call_q1 -> <empty>
Rule 82    function_call_q2 -> <empty>
Rule 83    factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
Rule 84    factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
Rule 85    check_parenth -> <empty>
Rule 86    factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth
Rule 87    factor -> factor_function_call
Rule 88    factor -> factor_var
Rule 89    factor -> factor_const
Rule 90    relac -> aritm EQUAL aritm
Rule 91    relac -> aritm UNEQUAL aritm
Rule 92    relac -> aritm LESS aritm
Rule 93    relac -> aritm LESSEQ aritm
Rule 94    relac -> aritm GREATER aritm
Rule 95    relac -> aritm GREATEREQ aritm
Rule 96    arg_q1 -> <empty>
Rule 97    arg_q2 -> <empty>
Rule 98    args -> aritm arg_q1 COMMA arg_q2 args
Rule 99    args -> aritm arg_q1
Rule 100   lectura -> READ OPPARENTH CLPARENTH
Rule 101   escritura -> WRITE OPPARENTH aritm CLPARENTH
Rule 102   escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
Rule 103   llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
Rule 104   llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
Rule 105   add_string_const -> <empty>
Rule 106   asign -> ID ASGNMNT lectura
Rule 107   asign -> ID ASGNMNT aritm
Rule 108   asign -> ID ASGNMNT CONST_STRING add_string_const
Rule 109   asign -> ID dims ASGNMNT lectura
Rule 110   asign -> ID dims ASGNMNT aritm
Rule 111   asign -> ID dims ASGNMNT CONST_STRING add_string_const

Terminals, with rules where they appear

ASGNMNT              : 50 51 106 107 108 109 110 111
BOOL                 : 57 62
CHAR                 : 56 61
CLBRACE              : 8 27 28 32 36 37 37
CLBRACKET            : 21 22 22 24 25 25
CLPARENTH            : 8 27 28 32 36 37 50 51 83 84 86 100 101 102 103 104
COLON                : 9 10 21 22 22 27 28 52 53
COMMA                : 17 98
CONST_FLOAT          : 78
CONST_INT            : 21 21 22 22 22 22 77
CONST_STRING         : 51 102 108 111
DIVIDE               : 73
ELSE                 : 37
EQUAL                : 90
FLOAT                : 55 60
FRAME                : 58 63
FUNC                 : 27 28
GREATER              : 94
GREATEREQ            : 95
ID                   : 6 9 10 27 28 50 50 51 52 53 79 80 83 84 103 104 106 107 108 109 110 111
INT                  : 54 59
LESS                 : 92
LESSEQ               : 93
LOAD                 : 50 51
MAIN                 : 8
MINUS                : 68
OPBRACE              : 8 27 28 32 36 37 37
OPBRACKET            : 21 22 22 24 25 25
OPPARENTH            : 8 27 28 32 36 37 50 51 83 84 86 100 101 102 103 104
PLUS                 : 67
PROGRAM              : 6
READ                 : 100
RETURN               : 39 40
THEN                 : 32 36 37
TIMES                : 72
UNEQUAL              : 91
VAR                  : 9 10
VOID                 : 64
WHEN                 : 36 37
WHILE                : 32
WRITE                : 101 102
error                : 

Nonterminals, with rules where they appear

add_string_const     : 51 102 108 111
arg_q1               : 98 99
arg_q2               : 98
args                 : 84 98 104
aritm                : 24 25 25 39 40 67 68 86 90 90 91 91 92 92 93 93 94 94 95 95 98 99 101 107 110
asign                : 43
calcula_globales     : 8
carga_dt             : 47
check_aritm          : 67 68 69
check_aritm_operation : 67 68
check_parenth        : 86 86
check_term           : 72 73 74
check_term_operation : 72 73
ciclo                : 49
ciclo_q1             : 32
ciclo_q2             : 32
conditional_q1       : 32 36 37
conditional_q2       : 36 37
conditional_q3       : 37
context_to_global    : 8
context_to_local     : 27 28
cuerpo               : 1 2 3 4
decision             : 48
declare_dims         : 10
dims                 : 53 80 109 110 111
encabezamiento       : 1 2 3 4
escritura            : 46
estat                : 15 16
estat_list           : 8 15 32 36 37 37 39 40 41 42
factor               : 72 73 74
factor_const         : 89
factor_function_call : 87
factor_var           : 88
factortype_const_float : 78
factortype_const_int : 77
func                 : 13 14
func_cont            : 27 28
func_list            : 1 3 13
func_typ             : 27 28
function_call_q1     : 83 84 103 104
function_call_q2     : 83 84 103 104
lectura              : 45 106 109
llam_void            : 44
param                : 17 18
param_list           : 17 28
program              : 0
relac                : 32 36 37
save_array_index     : 24 25 25
save_array_size      : 21
save_global_func     : 27 28
save_matrix_size     : 22
save_return_value    : 39 40
term                 : 67 68 69 72 73
var_list             : 1 2 11 39 41
var_typ              : 9 10 52 53
variable             : 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list func_list cuerpo
    (2) program -> . encabezamiento var_list cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (6) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list func_list cuerpo
    (2) program -> encabezamiento . var_list cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (27) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (6) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . func_list cuerpo
    (2) program -> encabezamiento var_list . cuerpo
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (27) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 13
    cuerpo                         shift and go to state 14
    func                           shift and go to state 8

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 15

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (11) var_list -> variable . var_list
    (12) var_list -> variable .
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims

    MAIN            reduce using rule 12 (var_list -> variable .)
    FUNC            reduce using rule 12 (var_list -> variable .)
    ID              reduce using rule 12 (var_list -> variable .)
    READ            reduce using rule 12 (var_list -> variable .)
    WRITE           reduce using rule 12 (var_list -> variable .)
    WHEN            reduce using rule 12 (var_list -> variable .)
    WHILE           reduce using rule 12 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 16

state 8

    (13) func_list -> func . func_list
    (14) func_list -> func .
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (27) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 14 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 17

state 9

    (8) cuerpo -> MAIN . context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (7) context_to_global -> .

    OPPARENTH       reduce using rule 7 (context_to_global -> .)

    context_to_global              shift and go to state 18

state 10

    (9) variable -> VAR . ID COLON var_typ
    (10) variable -> VAR . ID COLON var_typ declare_dims

    ID              shift and go to state 19


state 11

    (27) func -> FUNC . ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> FUNC . ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    ID              shift and go to state 20


state 12

    (6) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 6 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 21

state 14

    (2) program -> encabezamiento var_list cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list cuerpo .)


state 15

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 16

    (11) var_list -> variable var_list .

    MAIN            reduce using rule 11 (var_list -> variable var_list .)
    FUNC            reduce using rule 11 (var_list -> variable var_list .)
    ID              reduce using rule 11 (var_list -> variable var_list .)
    READ            reduce using rule 11 (var_list -> variable var_list .)
    WRITE           reduce using rule 11 (var_list -> variable var_list .)
    WHEN            reduce using rule 11 (var_list -> variable var_list .)
    WHILE           reduce using rule 11 (var_list -> variable var_list .)


state 17

    (13) func_list -> func func_list .

    MAIN            reduce using rule 13 (func_list -> func func_list .)


state 18

    (8) cuerpo -> MAIN context_to_global . OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    OPPARENTH       shift and go to state 22


state 19

    (9) variable -> VAR ID . COLON var_typ
    (10) variable -> VAR ID . COLON var_typ declare_dims

    COLON           shift and go to state 23


state 20

    (27) func -> FUNC ID . context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> FUNC ID . context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (29) context_to_local -> .

    OPPARENTH       reduce using rule 29 (context_to_local -> .)

    context_to_local               shift and go to state 24

state 21

    (1) program -> encabezamiento var_list func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list func_list cuerpo .)


state 22

    (8) cuerpo -> MAIN context_to_global OPPARENTH . CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    CLPARENTH       shift and go to state 25


state 23

    (9) variable -> VAR ID COLON . var_typ
    (10) variable -> VAR ID COLON . var_typ declare_dims
    (54) var_typ -> . INT
    (55) var_typ -> . FLOAT
    (56) var_typ -> . CHAR
    (57) var_typ -> . BOOL
    (58) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 26

state 24

    (27) func -> FUNC ID context_to_local . OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> FUNC ID context_to_local . OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 32


state 25

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH . OPBRACE estat_list calcula_globales CLBRACE

    OPBRACE         shift and go to state 33


state 26

    (9) variable -> VAR ID COLON var_typ .
    (10) variable -> VAR ID COLON var_typ . declare_dims
    (21) declare_dims -> . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    VAR             reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 35

    declare_dims                   shift and go to state 34

state 27

    (54) var_typ -> INT .

    OPBRACKET       reduce using rule 54 (var_typ -> INT .)
    VAR             reduce using rule 54 (var_typ -> INT .)
    MAIN            reduce using rule 54 (var_typ -> INT .)
    FUNC            reduce using rule 54 (var_typ -> INT .)
    ID              reduce using rule 54 (var_typ -> INT .)
    READ            reduce using rule 54 (var_typ -> INT .)
    WRITE           reduce using rule 54 (var_typ -> INT .)
    WHEN            reduce using rule 54 (var_typ -> INT .)
    WHILE           reduce using rule 54 (var_typ -> INT .)
    COMMA           reduce using rule 54 (var_typ -> INT .)
    CLPARENTH       reduce using rule 54 (var_typ -> INT .)


state 28

    (55) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 55 (var_typ -> FLOAT .)
    VAR             reduce using rule 55 (var_typ -> FLOAT .)
    MAIN            reduce using rule 55 (var_typ -> FLOAT .)
    FUNC            reduce using rule 55 (var_typ -> FLOAT .)
    ID              reduce using rule 55 (var_typ -> FLOAT .)
    READ            reduce using rule 55 (var_typ -> FLOAT .)
    WRITE           reduce using rule 55 (var_typ -> FLOAT .)
    WHEN            reduce using rule 55 (var_typ -> FLOAT .)
    WHILE           reduce using rule 55 (var_typ -> FLOAT .)
    COMMA           reduce using rule 55 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 55 (var_typ -> FLOAT .)


state 29

    (56) var_typ -> CHAR .

    OPBRACKET       reduce using rule 56 (var_typ -> CHAR .)
    VAR             reduce using rule 56 (var_typ -> CHAR .)
    MAIN            reduce using rule 56 (var_typ -> CHAR .)
    FUNC            reduce using rule 56 (var_typ -> CHAR .)
    ID              reduce using rule 56 (var_typ -> CHAR .)
    READ            reduce using rule 56 (var_typ -> CHAR .)
    WRITE           reduce using rule 56 (var_typ -> CHAR .)
    WHEN            reduce using rule 56 (var_typ -> CHAR .)
    WHILE           reduce using rule 56 (var_typ -> CHAR .)
    COMMA           reduce using rule 56 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 56 (var_typ -> CHAR .)


state 30

    (57) var_typ -> BOOL .

    OPBRACKET       reduce using rule 57 (var_typ -> BOOL .)
    VAR             reduce using rule 57 (var_typ -> BOOL .)
    MAIN            reduce using rule 57 (var_typ -> BOOL .)
    FUNC            reduce using rule 57 (var_typ -> BOOL .)
    ID              reduce using rule 57 (var_typ -> BOOL .)
    READ            reduce using rule 57 (var_typ -> BOOL .)
    WRITE           reduce using rule 57 (var_typ -> BOOL .)
    WHEN            reduce using rule 57 (var_typ -> BOOL .)
    WHILE           reduce using rule 57 (var_typ -> BOOL .)
    COMMA           reduce using rule 57 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 57 (var_typ -> BOOL .)


state 31

    (58) var_typ -> FRAME .

    OPBRACKET       reduce using rule 58 (var_typ -> FRAME .)
    VAR             reduce using rule 58 (var_typ -> FRAME .)
    MAIN            reduce using rule 58 (var_typ -> FRAME .)
    FUNC            reduce using rule 58 (var_typ -> FRAME .)
    ID              reduce using rule 58 (var_typ -> FRAME .)
    READ            reduce using rule 58 (var_typ -> FRAME .)
    WRITE           reduce using rule 58 (var_typ -> FRAME .)
    WHEN            reduce using rule 58 (var_typ -> FRAME .)
    WHILE           reduce using rule 58 (var_typ -> FRAME .)
    COMMA           reduce using rule 58 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 58 (var_typ -> FRAME .)


state 32

    (27) func -> FUNC ID context_to_local OPPARENTH . CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (28) func -> FUNC ID context_to_local OPPARENTH . param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (52) param -> . ID COLON var_typ
    (53) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 37
    ID              shift and go to state 36

    param_list                     shift and go to state 38
    param                          shift and go to state 39

state 33

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE . estat_list calcula_globales CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 40
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 34

    (10) variable -> VAR ID COLON var_typ declare_dims .

    VAR             reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    MAIN            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    FUNC            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    ID              reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    READ            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WRITE           reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WHEN            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WHILE           reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)


state 35

    (21) declare_dims -> OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 54


state 36

    (52) param -> ID . COLON var_typ
    (53) param -> ID . COLON var_typ dims

    COLON           shift and go to state 55


state 37

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH . COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    COLON           shift and go to state 56


state 38

    (28) func -> FUNC ID context_to_local OPPARENTH param_list . CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 57


state 39

    (17) param_list -> param . COMMA param_list
    (18) param_list -> param .

    COMMA           shift and go to state 58
    CLPARENTH       reduce using rule 18 (param_list -> param .)


state 40

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list . calcula_globales CLBRACE
    (5) calcula_globales -> .

    CLBRACE         reduce using rule 5 (calcula_globales -> .)

    calcula_globales               shift and go to state 59

state 41

    (15) estat_list -> estat . estat_list
    (16) estat_list -> estat .
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    CLBRACE         reduce using rule 16 (estat_list -> estat .)
    RETURN          reduce using rule 16 (estat_list -> estat .)
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat                          shift and go to state 41
    estat_list                     shift and go to state 60
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 42

    (43) estat -> asign .

    ID              reduce using rule 43 (estat -> asign .)
    READ            reduce using rule 43 (estat -> asign .)
    WRITE           reduce using rule 43 (estat -> asign .)
    WHEN            reduce using rule 43 (estat -> asign .)
    WHILE           reduce using rule 43 (estat -> asign .)
    CLBRACE         reduce using rule 43 (estat -> asign .)
    RETURN          reduce using rule 43 (estat -> asign .)


state 43

    (44) estat -> llam_void .

    ID              reduce using rule 44 (estat -> llam_void .)
    READ            reduce using rule 44 (estat -> llam_void .)
    WRITE           reduce using rule 44 (estat -> llam_void .)
    WHEN            reduce using rule 44 (estat -> llam_void .)
    WHILE           reduce using rule 44 (estat -> llam_void .)
    CLBRACE         reduce using rule 44 (estat -> llam_void .)
    RETURN          reduce using rule 44 (estat -> llam_void .)


state 44

    (45) estat -> lectura .

    ID              reduce using rule 45 (estat -> lectura .)
    READ            reduce using rule 45 (estat -> lectura .)
    WRITE           reduce using rule 45 (estat -> lectura .)
    WHEN            reduce using rule 45 (estat -> lectura .)
    WHILE           reduce using rule 45 (estat -> lectura .)
    CLBRACE         reduce using rule 45 (estat -> lectura .)
    RETURN          reduce using rule 45 (estat -> lectura .)


state 45

    (46) estat -> escritura .

    ID              reduce using rule 46 (estat -> escritura .)
    READ            reduce using rule 46 (estat -> escritura .)
    WRITE           reduce using rule 46 (estat -> escritura .)
    WHEN            reduce using rule 46 (estat -> escritura .)
    WHILE           reduce using rule 46 (estat -> escritura .)
    CLBRACE         reduce using rule 46 (estat -> escritura .)
    RETURN          reduce using rule 46 (estat -> escritura .)


state 46

    (47) estat -> carga_dt .

    ID              reduce using rule 47 (estat -> carga_dt .)
    READ            reduce using rule 47 (estat -> carga_dt .)
    WRITE           reduce using rule 47 (estat -> carga_dt .)
    WHEN            reduce using rule 47 (estat -> carga_dt .)
    WHILE           reduce using rule 47 (estat -> carga_dt .)
    CLBRACE         reduce using rule 47 (estat -> carga_dt .)
    RETURN          reduce using rule 47 (estat -> carga_dt .)


state 47

    (48) estat -> decision .

    ID              reduce using rule 48 (estat -> decision .)
    READ            reduce using rule 48 (estat -> decision .)
    WRITE           reduce using rule 48 (estat -> decision .)
    WHEN            reduce using rule 48 (estat -> decision .)
    WHILE           reduce using rule 48 (estat -> decision .)
    CLBRACE         reduce using rule 48 (estat -> decision .)
    RETURN          reduce using rule 48 (estat -> decision .)


state 48

    (49) estat -> ciclo .

    ID              reduce using rule 49 (estat -> ciclo .)
    READ            reduce using rule 49 (estat -> ciclo .)
    WRITE           reduce using rule 49 (estat -> ciclo .)
    WHEN            reduce using rule 49 (estat -> ciclo .)
    WHILE           reduce using rule 49 (estat -> ciclo .)
    CLBRACE         reduce using rule 49 (estat -> ciclo .)
    RETURN          reduce using rule 49 (estat -> ciclo .)


state 49

    (106) asign -> ID . ASGNMNT lectura
    (107) asign -> ID . ASGNMNT aritm
    (108) asign -> ID . ASGNMNT CONST_STRING add_string_const
    (109) asign -> ID . dims ASGNMNT lectura
    (110) asign -> ID . dims ASGNMNT aritm
    (111) asign -> ID . dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> ID . OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> ID . OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (50) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (24) dims -> . OPBRACKET aritm save_array_index CLBRACKET
    (25) dims -> . OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET

    ASGNMNT         shift and go to state 61
    OPPARENTH       shift and go to state 63
    OPBRACKET       shift and go to state 64

    dims                           shift and go to state 62

state 50

    (100) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 65


state 51

    (101) escritura -> WRITE . OPPARENTH aritm CLPARENTH
    (102) escritura -> WRITE . OPPARENTH CONST_STRING add_string_const CLPARENTH

    OPPARENTH       shift and go to state 66


state 52

    (36) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPPARENTH       shift and go to state 67


state 53

    (32) ciclo -> WHILE . ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (30) ciclo_q1 -> .

    OPPARENTH       reduce using rule 30 (ciclo_q1 -> .)

    ciclo_q1                       shift and go to state 68

state 54

    (21) declare_dims -> OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    COLON           shift and go to state 69


state 55

    (52) param -> ID COLON . var_typ
    (53) param -> ID COLON . var_typ dims
    (54) var_typ -> . INT
    (55) var_typ -> . FLOAT
    (56) var_typ -> . CHAR
    (57) var_typ -> . BOOL
    (58) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 70

state 56

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON . func_typ save_global_func OPBRACE func_cont CLBRACE
    (59) func_typ -> . INT
    (60) func_typ -> . FLOAT
    (61) func_typ -> . CHAR
    (62) func_typ -> . BOOL
    (63) func_typ -> . FRAME
    (64) func_typ -> . VOID

    INT             shift and go to state 72
    FLOAT           shift and go to state 73
    CHAR            shift and go to state 74
    BOOL            shift and go to state 75
    FRAME           shift and go to state 76
    VOID            shift and go to state 77

    func_typ                       shift and go to state 71

state 57

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH . COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    COLON           shift and go to state 78


state 58

    (17) param_list -> param COMMA . param_list
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (52) param -> . ID COLON var_typ
    (53) param -> . ID COLON var_typ dims

    ID              shift and go to state 36

    param                          shift and go to state 39
    param_list                     shift and go to state 79

state 59

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales . CLBRACE

    CLBRACE         shift and go to state 80


state 60

    (15) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 15 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 15 (estat_list -> estat estat_list .)


state 61

    (106) asign -> ID ASGNMNT . lectura
    (107) asign -> ID ASGNMNT . aritm
    (108) asign -> ID ASGNMNT . CONST_STRING add_string_const
    (50) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 84
    LOAD            shift and go to state 85
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    lectura                        shift and go to state 82
    aritm                          shift and go to state 83
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 62

    (109) asign -> ID dims . ASGNMNT lectura
    (110) asign -> ID dims . ASGNMNT aritm
    (111) asign -> ID dims . ASGNMNT CONST_STRING add_string_const

    ASGNMNT         shift and go to state 94


state 63

    (103) llam_void -> ID OPPARENTH . function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> ID OPPARENTH . function_call_q1 args CLPARENTH function_call_q2
    (81) function_call_q1 -> .

    CLPARENTH       reduce using rule 81 (function_call_q1 -> .)
    OPPARENTH       reduce using rule 81 (function_call_q1 -> .)
    ID              reduce using rule 81 (function_call_q1 -> .)
    CONST_INT       reduce using rule 81 (function_call_q1 -> .)
    CONST_FLOAT     reduce using rule 81 (function_call_q1 -> .)

    function_call_q1               shift and go to state 95

state 64

    (24) dims -> OPBRACKET . aritm save_array_index CLBRACKET
    (25) dims -> OPBRACKET . aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 96
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 65

    (100) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 97


state 66

    (101) escritura -> WRITE OPPARENTH . aritm CLPARENTH
    (102) escritura -> WRITE OPPARENTH . CONST_STRING add_string_const CLPARENTH
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 99
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 98
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 67

    (36) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (90) relac -> . aritm EQUAL aritm
    (91) relac -> . aritm UNEQUAL aritm
    (92) relac -> . aritm LESS aritm
    (93) relac -> . aritm LESSEQ aritm
    (94) relac -> . aritm GREATER aritm
    (95) relac -> . aritm GREATEREQ aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    relac                          shift and go to state 100
    aritm                          shift and go to state 101
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 68

    (32) ciclo -> WHILE ciclo_q1 . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    OPPARENTH       shift and go to state 102


state 69

    (21) declare_dims -> OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 103


state 70

    (52) param -> ID COLON var_typ .
    (53) param -> ID COLON var_typ . dims
    (24) dims -> . OPBRACKET aritm save_array_index CLBRACKET
    (25) dims -> . OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET

    COMMA           reduce using rule 52 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 52 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 64

    dims                           shift and go to state 104

state 71

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ . save_global_func OPBRACE func_cont CLBRACE
    (26) save_global_func -> .

    OPBRACE         reduce using rule 26 (save_global_func -> .)

    save_global_func               shift and go to state 105

state 72

    (59) func_typ -> INT .

    OPBRACE         reduce using rule 59 (func_typ -> INT .)


state 73

    (60) func_typ -> FLOAT .

    OPBRACE         reduce using rule 60 (func_typ -> FLOAT .)


state 74

    (61) func_typ -> CHAR .

    OPBRACE         reduce using rule 61 (func_typ -> CHAR .)


state 75

    (62) func_typ -> BOOL .

    OPBRACE         reduce using rule 62 (func_typ -> BOOL .)


state 76

    (63) func_typ -> FRAME .

    OPBRACE         reduce using rule 63 (func_typ -> FRAME .)


state 77

    (64) func_typ -> VOID .

    OPBRACE         reduce using rule 64 (func_typ -> VOID .)


state 78

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON . func_typ save_global_func OPBRACE func_cont CLBRACE
    (59) func_typ -> . INT
    (60) func_typ -> . FLOAT
    (61) func_typ -> . CHAR
    (62) func_typ -> . BOOL
    (63) func_typ -> . FRAME
    (64) func_typ -> . VOID

    INT             shift and go to state 72
    FLOAT           shift and go to state 73
    CHAR            shift and go to state 74
    BOOL            shift and go to state 75
    FRAME           shift and go to state 76
    VOID            shift and go to state 77

    func_typ                       shift and go to state 106

state 79

    (17) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 17 (param_list -> param COMMA param_list .)


state 80

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .

    $end            reduce using rule 8 (cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .)


state 81

    (83) factor_function_call -> ID . OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> ID . OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> ID .
    (80) factor_var -> ID . dims
    (24) dims -> . OPBRACKET aritm save_array_index CLBRACKET
    (25) dims -> . OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET

    OPPARENTH       shift and go to state 107
    TIMES           reduce using rule 79 (factor_var -> ID .)
    DIVIDE          reduce using rule 79 (factor_var -> ID .)
    PLUS            reduce using rule 79 (factor_var -> ID .)
    MINUS           reduce using rule 79 (factor_var -> ID .)
    ID              reduce using rule 79 (factor_var -> ID .)
    READ            reduce using rule 79 (factor_var -> ID .)
    WRITE           reduce using rule 79 (factor_var -> ID .)
    WHEN            reduce using rule 79 (factor_var -> ID .)
    WHILE           reduce using rule 79 (factor_var -> ID .)
    CLBRACE         reduce using rule 79 (factor_var -> ID .)
    RETURN          reduce using rule 79 (factor_var -> ID .)
    CLBRACKET       reduce using rule 79 (factor_var -> ID .)
    CLPARENTH       reduce using rule 79 (factor_var -> ID .)
    EQUAL           reduce using rule 79 (factor_var -> ID .)
    UNEQUAL         reduce using rule 79 (factor_var -> ID .)
    LESS            reduce using rule 79 (factor_var -> ID .)
    LESSEQ          reduce using rule 79 (factor_var -> ID .)
    GREATER         reduce using rule 79 (factor_var -> ID .)
    GREATEREQ       reduce using rule 79 (factor_var -> ID .)
    COMMA           reduce using rule 79 (factor_var -> ID .)
    OPBRACKET       shift and go to state 64

    dims                           shift and go to state 108

state 82

    (106) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 106 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 106 (asign -> ID ASGNMNT lectura .)


state 83

    (107) asign -> ID ASGNMNT aritm .

    ID              reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    READ            reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    WRITE           reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    WHEN            reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    WHILE           reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    CLBRACE         reduce using rule 107 (asign -> ID ASGNMNT aritm .)
    RETURN          reduce using rule 107 (asign -> ID ASGNMNT aritm .)


state 84

    (108) asign -> ID ASGNMNT CONST_STRING . add_string_const
    (105) add_string_const -> .

    ID              reduce using rule 105 (add_string_const -> .)
    READ            reduce using rule 105 (add_string_const -> .)
    WRITE           reduce using rule 105 (add_string_const -> .)
    WHEN            reduce using rule 105 (add_string_const -> .)
    WHILE           reduce using rule 105 (add_string_const -> .)
    CLBRACE         reduce using rule 105 (add_string_const -> .)
    RETURN          reduce using rule 105 (add_string_const -> .)

    add_string_const               shift and go to state 109

state 85

    (50) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (51) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING add_string_const CLPARENTH

    OPPARENTH       shift and go to state 110


state 86

    (86) factor -> OPPARENTH . check_parenth aritm CLPARENTH check_parenth
    (85) check_parenth -> .

    OPPARENTH       reduce using rule 85 (check_parenth -> .)
    ID              reduce using rule 85 (check_parenth -> .)
    CONST_INT       reduce using rule 85 (check_parenth -> .)
    CONST_FLOAT     reduce using rule 85 (check_parenth -> .)

    check_parenth                  shift and go to state 111

state 87

    (67) aritm -> term . check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> term . check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> term . check_aritm
    (66) check_aritm -> .

    PLUS            reduce using rule 66 (check_aritm -> .)
    MINUS           reduce using rule 66 (check_aritm -> .)
    ID              reduce using rule 66 (check_aritm -> .)
    READ            reduce using rule 66 (check_aritm -> .)
    WRITE           reduce using rule 66 (check_aritm -> .)
    WHEN            reduce using rule 66 (check_aritm -> .)
    WHILE           reduce using rule 66 (check_aritm -> .)
    CLBRACE         reduce using rule 66 (check_aritm -> .)
    RETURN          reduce using rule 66 (check_aritm -> .)
    CLBRACKET       reduce using rule 66 (check_aritm -> .)
    CLPARENTH       reduce using rule 66 (check_aritm -> .)
    EQUAL           reduce using rule 66 (check_aritm -> .)
    UNEQUAL         reduce using rule 66 (check_aritm -> .)
    LESS            reduce using rule 66 (check_aritm -> .)
    LESSEQ          reduce using rule 66 (check_aritm -> .)
    GREATER         reduce using rule 66 (check_aritm -> .)
    GREATEREQ       reduce using rule 66 (check_aritm -> .)
    COMMA           reduce using rule 66 (check_aritm -> .)

    check_aritm                    shift and go to state 112

state 88

    (72) term -> factor . check_term TIMES check_term_operation term
    (73) term -> factor . check_term DIVIDE check_term_operation term
    (74) term -> factor . check_term
    (71) check_term -> .

    TIMES           reduce using rule 71 (check_term -> .)
    DIVIDE          reduce using rule 71 (check_term -> .)
    PLUS            reduce using rule 71 (check_term -> .)
    MINUS           reduce using rule 71 (check_term -> .)
    ID              reduce using rule 71 (check_term -> .)
    READ            reduce using rule 71 (check_term -> .)
    WRITE           reduce using rule 71 (check_term -> .)
    WHEN            reduce using rule 71 (check_term -> .)
    WHILE           reduce using rule 71 (check_term -> .)
    CLBRACE         reduce using rule 71 (check_term -> .)
    RETURN          reduce using rule 71 (check_term -> .)
    CLBRACKET       reduce using rule 71 (check_term -> .)
    CLPARENTH       reduce using rule 71 (check_term -> .)
    EQUAL           reduce using rule 71 (check_term -> .)
    UNEQUAL         reduce using rule 71 (check_term -> .)
    LESS            reduce using rule 71 (check_term -> .)
    LESSEQ          reduce using rule 71 (check_term -> .)
    GREATER         reduce using rule 71 (check_term -> .)
    GREATEREQ       reduce using rule 71 (check_term -> .)
    COMMA           reduce using rule 71 (check_term -> .)

    check_term                     shift and go to state 113

state 89

    (87) factor -> factor_function_call .

    TIMES           reduce using rule 87 (factor -> factor_function_call .)
    DIVIDE          reduce using rule 87 (factor -> factor_function_call .)
    PLUS            reduce using rule 87 (factor -> factor_function_call .)
    MINUS           reduce using rule 87 (factor -> factor_function_call .)
    ID              reduce using rule 87 (factor -> factor_function_call .)
    READ            reduce using rule 87 (factor -> factor_function_call .)
    WRITE           reduce using rule 87 (factor -> factor_function_call .)
    WHEN            reduce using rule 87 (factor -> factor_function_call .)
    WHILE           reduce using rule 87 (factor -> factor_function_call .)
    CLBRACE         reduce using rule 87 (factor -> factor_function_call .)
    RETURN          reduce using rule 87 (factor -> factor_function_call .)
    CLBRACKET       reduce using rule 87 (factor -> factor_function_call .)
    CLPARENTH       reduce using rule 87 (factor -> factor_function_call .)
    EQUAL           reduce using rule 87 (factor -> factor_function_call .)
    UNEQUAL         reduce using rule 87 (factor -> factor_function_call .)
    LESS            reduce using rule 87 (factor -> factor_function_call .)
    LESSEQ          reduce using rule 87 (factor -> factor_function_call .)
    GREATER         reduce using rule 87 (factor -> factor_function_call .)
    GREATEREQ       reduce using rule 87 (factor -> factor_function_call .)
    COMMA           reduce using rule 87 (factor -> factor_function_call .)


state 90

    (88) factor -> factor_var .

    TIMES           reduce using rule 88 (factor -> factor_var .)
    DIVIDE          reduce using rule 88 (factor -> factor_var .)
    PLUS            reduce using rule 88 (factor -> factor_var .)
    MINUS           reduce using rule 88 (factor -> factor_var .)
    ID              reduce using rule 88 (factor -> factor_var .)
    READ            reduce using rule 88 (factor -> factor_var .)
    WRITE           reduce using rule 88 (factor -> factor_var .)
    WHEN            reduce using rule 88 (factor -> factor_var .)
    WHILE           reduce using rule 88 (factor -> factor_var .)
    CLBRACE         reduce using rule 88 (factor -> factor_var .)
    RETURN          reduce using rule 88 (factor -> factor_var .)
    CLBRACKET       reduce using rule 88 (factor -> factor_var .)
    CLPARENTH       reduce using rule 88 (factor -> factor_var .)
    EQUAL           reduce using rule 88 (factor -> factor_var .)
    UNEQUAL         reduce using rule 88 (factor -> factor_var .)
    LESS            reduce using rule 88 (factor -> factor_var .)
    LESSEQ          reduce using rule 88 (factor -> factor_var .)
    GREATER         reduce using rule 88 (factor -> factor_var .)
    GREATEREQ       reduce using rule 88 (factor -> factor_var .)
    COMMA           reduce using rule 88 (factor -> factor_var .)


state 91

    (89) factor -> factor_const .

    TIMES           reduce using rule 89 (factor -> factor_const .)
    DIVIDE          reduce using rule 89 (factor -> factor_const .)
    PLUS            reduce using rule 89 (factor -> factor_const .)
    MINUS           reduce using rule 89 (factor -> factor_const .)
    ID              reduce using rule 89 (factor -> factor_const .)
    READ            reduce using rule 89 (factor -> factor_const .)
    WRITE           reduce using rule 89 (factor -> factor_const .)
    WHEN            reduce using rule 89 (factor -> factor_const .)
    WHILE           reduce using rule 89 (factor -> factor_const .)
    CLBRACE         reduce using rule 89 (factor -> factor_const .)
    RETURN          reduce using rule 89 (factor -> factor_const .)
    CLBRACKET       reduce using rule 89 (factor -> factor_const .)
    CLPARENTH       reduce using rule 89 (factor -> factor_const .)
    EQUAL           reduce using rule 89 (factor -> factor_const .)
    UNEQUAL         reduce using rule 89 (factor -> factor_const .)
    LESS            reduce using rule 89 (factor -> factor_const .)
    LESSEQ          reduce using rule 89 (factor -> factor_const .)
    GREATER         reduce using rule 89 (factor -> factor_const .)
    GREATEREQ       reduce using rule 89 (factor -> factor_const .)
    COMMA           reduce using rule 89 (factor -> factor_const .)


state 92

    (77) factor_const -> CONST_INT . factortype_const_int
    (75) factortype_const_int -> .

    TIMES           reduce using rule 75 (factortype_const_int -> .)
    DIVIDE          reduce using rule 75 (factortype_const_int -> .)
    PLUS            reduce using rule 75 (factortype_const_int -> .)
    MINUS           reduce using rule 75 (factortype_const_int -> .)
    ID              reduce using rule 75 (factortype_const_int -> .)
    READ            reduce using rule 75 (factortype_const_int -> .)
    WRITE           reduce using rule 75 (factortype_const_int -> .)
    WHEN            reduce using rule 75 (factortype_const_int -> .)
    WHILE           reduce using rule 75 (factortype_const_int -> .)
    CLBRACE         reduce using rule 75 (factortype_const_int -> .)
    RETURN          reduce using rule 75 (factortype_const_int -> .)
    CLBRACKET       reduce using rule 75 (factortype_const_int -> .)
    CLPARENTH       reduce using rule 75 (factortype_const_int -> .)
    EQUAL           reduce using rule 75 (factortype_const_int -> .)
    UNEQUAL         reduce using rule 75 (factortype_const_int -> .)
    LESS            reduce using rule 75 (factortype_const_int -> .)
    LESSEQ          reduce using rule 75 (factortype_const_int -> .)
    GREATER         reduce using rule 75 (factortype_const_int -> .)
    GREATEREQ       reduce using rule 75 (factortype_const_int -> .)
    COMMA           reduce using rule 75 (factortype_const_int -> .)

    factortype_const_int           shift and go to state 114

state 93

    (78) factor_const -> CONST_FLOAT . factortype_const_float
    (76) factortype_const_float -> .

    TIMES           reduce using rule 76 (factortype_const_float -> .)
    DIVIDE          reduce using rule 76 (factortype_const_float -> .)
    PLUS            reduce using rule 76 (factortype_const_float -> .)
    MINUS           reduce using rule 76 (factortype_const_float -> .)
    ID              reduce using rule 76 (factortype_const_float -> .)
    READ            reduce using rule 76 (factortype_const_float -> .)
    WRITE           reduce using rule 76 (factortype_const_float -> .)
    WHEN            reduce using rule 76 (factortype_const_float -> .)
    WHILE           reduce using rule 76 (factortype_const_float -> .)
    CLBRACE         reduce using rule 76 (factortype_const_float -> .)
    RETURN          reduce using rule 76 (factortype_const_float -> .)
    CLBRACKET       reduce using rule 76 (factortype_const_float -> .)
    CLPARENTH       reduce using rule 76 (factortype_const_float -> .)
    EQUAL           reduce using rule 76 (factortype_const_float -> .)
    UNEQUAL         reduce using rule 76 (factortype_const_float -> .)
    LESS            reduce using rule 76 (factortype_const_float -> .)
    LESSEQ          reduce using rule 76 (factortype_const_float -> .)
    GREATER         reduce using rule 76 (factortype_const_float -> .)
    GREATEREQ       reduce using rule 76 (factortype_const_float -> .)
    COMMA           reduce using rule 76 (factortype_const_float -> .)

    factortype_const_float         shift and go to state 115

state 94

    (109) asign -> ID dims ASGNMNT . lectura
    (110) asign -> ID dims ASGNMNT . aritm
    (111) asign -> ID dims ASGNMNT . CONST_STRING add_string_const
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 118
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    lectura                        shift and go to state 116
    aritm                          shift and go to state 117
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 95

    (103) llam_void -> ID OPPARENTH function_call_q1 . CLPARENTH function_call_q2
    (104) llam_void -> ID OPPARENTH function_call_q1 . args CLPARENTH function_call_q2
    (98) args -> . aritm arg_q1 COMMA arg_q2 args
    (99) args -> . aritm arg_q1
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 119
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    args                           shift and go to state 120
    aritm                          shift and go to state 121
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 96

    (24) dims -> OPBRACKET aritm . save_array_index CLBRACKET
    (25) dims -> OPBRACKET aritm . save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET
    (23) save_array_index -> .

    CLBRACKET       reduce using rule 23 (save_array_index -> .)

    save_array_index               shift and go to state 122

state 97

    (100) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 100 (lectura -> READ OPPARENTH CLPARENTH .)


state 98

    (101) escritura -> WRITE OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 123


state 99

    (102) escritura -> WRITE OPPARENTH CONST_STRING . add_string_const CLPARENTH
    (105) add_string_const -> .

    CLPARENTH       reduce using rule 105 (add_string_const -> .)

    add_string_const               shift and go to state 124

state 100

    (36) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (33) conditional_q1 -> .

    CLPARENTH       reduce using rule 33 (conditional_q1 -> .)

    conditional_q1                 shift and go to state 125

state 101

    (90) relac -> aritm . EQUAL aritm
    (91) relac -> aritm . UNEQUAL aritm
    (92) relac -> aritm . LESS aritm
    (93) relac -> aritm . LESSEQ aritm
    (94) relac -> aritm . GREATER aritm
    (95) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 126
    UNEQUAL         shift and go to state 127
    LESS            shift and go to state 128
    LESSEQ          shift and go to state 129
    GREATER         shift and go to state 130
    GREATEREQ       shift and go to state 131


state 102

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (90) relac -> . aritm EQUAL aritm
    (91) relac -> . aritm UNEQUAL aritm
    (92) relac -> . aritm LESS aritm
    (93) relac -> . aritm LESSEQ aritm
    (94) relac -> . aritm GREATER aritm
    (95) relac -> . aritm GREATEREQ aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    relac                          shift and go to state 132
    aritm                          shift and go to state 101
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 103

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CLBRACKET       shift and go to state 133


state 104

    (53) param -> ID COLON var_typ dims .

    COMMA           reduce using rule 53 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 53 (param -> ID COLON var_typ dims .)


state 105

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 134


state 106

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ . save_global_func OPBRACE func_cont CLBRACE
    (26) save_global_func -> .

    OPBRACE         reduce using rule 26 (save_global_func -> .)

    save_global_func               shift and go to state 135

state 107

    (83) factor_function_call -> ID OPPARENTH . function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> ID OPPARENTH . function_call_q1 args CLPARENTH function_call_q2
    (81) function_call_q1 -> .

    CLPARENTH       reduce using rule 81 (function_call_q1 -> .)
    OPPARENTH       reduce using rule 81 (function_call_q1 -> .)
    ID              reduce using rule 81 (function_call_q1 -> .)
    CONST_INT       reduce using rule 81 (function_call_q1 -> .)
    CONST_FLOAT     reduce using rule 81 (function_call_q1 -> .)

    function_call_q1               shift and go to state 136

state 108

    (80) factor_var -> ID dims .

    TIMES           reduce using rule 80 (factor_var -> ID dims .)
    DIVIDE          reduce using rule 80 (factor_var -> ID dims .)
    PLUS            reduce using rule 80 (factor_var -> ID dims .)
    MINUS           reduce using rule 80 (factor_var -> ID dims .)
    ID              reduce using rule 80 (factor_var -> ID dims .)
    READ            reduce using rule 80 (factor_var -> ID dims .)
    WRITE           reduce using rule 80 (factor_var -> ID dims .)
    WHEN            reduce using rule 80 (factor_var -> ID dims .)
    WHILE           reduce using rule 80 (factor_var -> ID dims .)
    CLBRACE         reduce using rule 80 (factor_var -> ID dims .)
    RETURN          reduce using rule 80 (factor_var -> ID dims .)
    CLBRACKET       reduce using rule 80 (factor_var -> ID dims .)
    CLPARENTH       reduce using rule 80 (factor_var -> ID dims .)
    EQUAL           reduce using rule 80 (factor_var -> ID dims .)
    UNEQUAL         reduce using rule 80 (factor_var -> ID dims .)
    LESS            reduce using rule 80 (factor_var -> ID dims .)
    LESSEQ          reduce using rule 80 (factor_var -> ID dims .)
    GREATER         reduce using rule 80 (factor_var -> ID dims .)
    GREATEREQ       reduce using rule 80 (factor_var -> ID dims .)
    COMMA           reduce using rule 80 (factor_var -> ID dims .)


state 109

    (108) asign -> ID ASGNMNT CONST_STRING add_string_const .

    ID              reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    READ            reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WRITE           reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WHEN            reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WHILE           reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    CLBRACE         reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    RETURN          reduce using rule 108 (asign -> ID ASGNMNT CONST_STRING add_string_const .)


state 110

    (50) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (51) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING add_string_const CLPARENTH

    ID              shift and go to state 137
    CONST_STRING    shift and go to state 138


state 111

    (86) factor -> OPPARENTH check_parenth . aritm CLPARENTH check_parenth
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 139
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 112

    (67) aritm -> term check_aritm . PLUS check_aritm_operation aritm
    (68) aritm -> term check_aritm . MINUS check_aritm_operation aritm
    (69) aritm -> term check_aritm .

    PLUS            shift and go to state 140
    MINUS           shift and go to state 141
    ID              reduce using rule 69 (aritm -> term check_aritm .)
    READ            reduce using rule 69 (aritm -> term check_aritm .)
    WRITE           reduce using rule 69 (aritm -> term check_aritm .)
    WHEN            reduce using rule 69 (aritm -> term check_aritm .)
    WHILE           reduce using rule 69 (aritm -> term check_aritm .)
    CLBRACE         reduce using rule 69 (aritm -> term check_aritm .)
    RETURN          reduce using rule 69 (aritm -> term check_aritm .)
    CLBRACKET       reduce using rule 69 (aritm -> term check_aritm .)
    CLPARENTH       reduce using rule 69 (aritm -> term check_aritm .)
    EQUAL           reduce using rule 69 (aritm -> term check_aritm .)
    UNEQUAL         reduce using rule 69 (aritm -> term check_aritm .)
    LESS            reduce using rule 69 (aritm -> term check_aritm .)
    LESSEQ          reduce using rule 69 (aritm -> term check_aritm .)
    GREATER         reduce using rule 69 (aritm -> term check_aritm .)
    GREATEREQ       reduce using rule 69 (aritm -> term check_aritm .)
    COMMA           reduce using rule 69 (aritm -> term check_aritm .)


state 113

    (72) term -> factor check_term . TIMES check_term_operation term
    (73) term -> factor check_term . DIVIDE check_term_operation term
    (74) term -> factor check_term .

    TIMES           shift and go to state 142
    DIVIDE          shift and go to state 143
    PLUS            reduce using rule 74 (term -> factor check_term .)
    MINUS           reduce using rule 74 (term -> factor check_term .)
    ID              reduce using rule 74 (term -> factor check_term .)
    READ            reduce using rule 74 (term -> factor check_term .)
    WRITE           reduce using rule 74 (term -> factor check_term .)
    WHEN            reduce using rule 74 (term -> factor check_term .)
    WHILE           reduce using rule 74 (term -> factor check_term .)
    CLBRACE         reduce using rule 74 (term -> factor check_term .)
    RETURN          reduce using rule 74 (term -> factor check_term .)
    CLBRACKET       reduce using rule 74 (term -> factor check_term .)
    CLPARENTH       reduce using rule 74 (term -> factor check_term .)
    EQUAL           reduce using rule 74 (term -> factor check_term .)
    UNEQUAL         reduce using rule 74 (term -> factor check_term .)
    LESS            reduce using rule 74 (term -> factor check_term .)
    LESSEQ          reduce using rule 74 (term -> factor check_term .)
    GREATER         reduce using rule 74 (term -> factor check_term .)
    GREATEREQ       reduce using rule 74 (term -> factor check_term .)
    COMMA           reduce using rule 74 (term -> factor check_term .)


state 114

    (77) factor_const -> CONST_INT factortype_const_int .

    TIMES           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    DIVIDE          reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    PLUS            reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    MINUS           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    ID              reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    READ            reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    WRITE           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    WHEN            reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    WHILE           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACE         reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    RETURN          reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACKET       reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    CLPARENTH       reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    EQUAL           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    UNEQUAL         reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    LESS            reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    LESSEQ          reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    GREATER         reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    GREATEREQ       reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)
    COMMA           reduce using rule 77 (factor_const -> CONST_INT factortype_const_int .)


state 115

    (78) factor_const -> CONST_FLOAT factortype_const_float .

    TIMES           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    DIVIDE          reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    PLUS            reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    MINUS           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    ID              reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    READ            reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    WRITE           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHEN            reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHILE           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACE         reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    RETURN          reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACKET       reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLPARENTH       reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    EQUAL           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    UNEQUAL         reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESS            reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESSEQ          reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATER         reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATEREQ       reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)
    COMMA           reduce using rule 78 (factor_const -> CONST_FLOAT factortype_const_float .)


state 116

    (109) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 109 (asign -> ID dims ASGNMNT lectura .)


state 117

    (110) asign -> ID dims ASGNMNT aritm .

    ID              reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    READ            reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    WRITE           reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    WHEN            reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    WHILE           reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    CLBRACE         reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)
    RETURN          reduce using rule 110 (asign -> ID dims ASGNMNT aritm .)


state 118

    (111) asign -> ID dims ASGNMNT CONST_STRING . add_string_const
    (105) add_string_const -> .

    ID              reduce using rule 105 (add_string_const -> .)
    READ            reduce using rule 105 (add_string_const -> .)
    WRITE           reduce using rule 105 (add_string_const -> .)
    WHEN            reduce using rule 105 (add_string_const -> .)
    WHILE           reduce using rule 105 (add_string_const -> .)
    CLBRACE         reduce using rule 105 (add_string_const -> .)
    RETURN          reduce using rule 105 (add_string_const -> .)

    add_string_const               shift and go to state 144

state 119

    (103) llam_void -> ID OPPARENTH function_call_q1 CLPARENTH . function_call_q2
    (82) function_call_q2 -> .

    ID              reduce using rule 82 (function_call_q2 -> .)
    READ            reduce using rule 82 (function_call_q2 -> .)
    WRITE           reduce using rule 82 (function_call_q2 -> .)
    WHEN            reduce using rule 82 (function_call_q2 -> .)
    WHILE           reduce using rule 82 (function_call_q2 -> .)
    CLBRACE         reduce using rule 82 (function_call_q2 -> .)
    RETURN          reduce using rule 82 (function_call_q2 -> .)

    function_call_q2               shift and go to state 145

state 120

    (104) llam_void -> ID OPPARENTH function_call_q1 args . CLPARENTH function_call_q2

    CLPARENTH       shift and go to state 146


state 121

    (98) args -> aritm . arg_q1 COMMA arg_q2 args
    (99) args -> aritm . arg_q1
    (96) arg_q1 -> .

    COMMA           reduce using rule 96 (arg_q1 -> .)
    CLPARENTH       reduce using rule 96 (arg_q1 -> .)

    arg_q1                         shift and go to state 147

state 122

    (24) dims -> OPBRACKET aritm save_array_index . CLBRACKET
    (25) dims -> OPBRACKET aritm save_array_index . CLBRACKET OPBRACKET aritm save_array_index CLBRACKET

    CLBRACKET       shift and go to state 148


state 123

    (101) escritura -> WRITE OPPARENTH aritm CLPARENTH .

    ID              reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 101 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)


state 124

    (102) escritura -> WRITE OPPARENTH CONST_STRING add_string_const . CLPARENTH

    CLPARENTH       shift and go to state 149


state 125

    (36) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLPARENTH       shift and go to state 150


state 126

    (90) relac -> aritm EQUAL . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 151
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 127

    (91) relac -> aritm UNEQUAL . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 152
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 128

    (92) relac -> aritm LESS . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 153
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 129

    (93) relac -> aritm LESSEQ . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 154
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 130

    (94) relac -> aritm GREATER . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 155
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 131

    (95) relac -> aritm GREATEREQ . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 156
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 132

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (33) conditional_q1 -> .

    CLPARENTH       reduce using rule 33 (conditional_q1 -> .)

    conditional_q1                 shift and go to state 157

state 133

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size
    (19) save_array_size -> .

    OPBRACKET       shift and go to state 158
    VAR             reduce using rule 19 (save_array_size -> .)
    MAIN            reduce using rule 19 (save_array_size -> .)
    FUNC            reduce using rule 19 (save_array_size -> .)
    ID              reduce using rule 19 (save_array_size -> .)
    READ            reduce using rule 19 (save_array_size -> .)
    WRITE           reduce using rule 19 (save_array_size -> .)
    WHEN            reduce using rule 19 (save_array_size -> .)
    WHILE           reduce using rule 19 (save_array_size -> .)

    save_array_size                shift and go to state 159

state 134

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE . func_cont CLBRACE
    (39) func_cont -> . var_list estat_list RETURN aritm save_return_value
    (40) func_cont -> . estat_list RETURN aritm save_return_value
    (41) func_cont -> . var_list estat_list
    (42) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 160
    var_list                       shift and go to state 161
    estat_list                     shift and go to state 162
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 135

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 163


state 136

    (83) factor_function_call -> ID OPPARENTH function_call_q1 . CLPARENTH function_call_q2
    (84) factor_function_call -> ID OPPARENTH function_call_q1 . args CLPARENTH function_call_q2
    (98) args -> . aritm arg_q1 COMMA arg_q2 args
    (99) args -> . aritm arg_q1
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 164
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    args                           shift and go to state 165
    aritm                          shift and go to state 121
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 137

    (50) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 166


state 138

    (51) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . add_string_const CLPARENTH
    (105) add_string_const -> .

    CLPARENTH       reduce using rule 105 (add_string_const -> .)

    add_string_const               shift and go to state 167

state 139

    (86) factor -> OPPARENTH check_parenth aritm . CLPARENTH check_parenth

    CLPARENTH       shift and go to state 168


state 140

    (67) aritm -> term check_aritm PLUS . check_aritm_operation aritm
    (65) check_aritm_operation -> .

    OPPARENTH       reduce using rule 65 (check_aritm_operation -> .)
    ID              reduce using rule 65 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 65 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 65 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 169

state 141

    (68) aritm -> term check_aritm MINUS . check_aritm_operation aritm
    (65) check_aritm_operation -> .

    OPPARENTH       reduce using rule 65 (check_aritm_operation -> .)
    ID              reduce using rule 65 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 65 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 65 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 170

state 142

    (72) term -> factor check_term TIMES . check_term_operation term
    (70) check_term_operation -> .

    OPPARENTH       reduce using rule 70 (check_term_operation -> .)
    ID              reduce using rule 70 (check_term_operation -> .)
    CONST_INT       reduce using rule 70 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 70 (check_term_operation -> .)

    check_term_operation           shift and go to state 171

state 143

    (73) term -> factor check_term DIVIDE . check_term_operation term
    (70) check_term_operation -> .

    OPPARENTH       reduce using rule 70 (check_term_operation -> .)
    ID              reduce using rule 70 (check_term_operation -> .)
    CONST_INT       reduce using rule 70 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 70 (check_term_operation -> .)

    check_term_operation           shift and go to state 172

state 144

    (111) asign -> ID dims ASGNMNT CONST_STRING add_string_const .

    ID              reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    READ            reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    WRITE           reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    WHEN            reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    WHILE           reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    CLBRACE         reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)
    RETURN          reduce using rule 111 (asign -> ID dims ASGNMNT CONST_STRING add_string_const .)


state 145

    (103) llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .

    ID              reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    READ            reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 103 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)


state 146

    (104) llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH . function_call_q2
    (82) function_call_q2 -> .

    ID              reduce using rule 82 (function_call_q2 -> .)
    READ            reduce using rule 82 (function_call_q2 -> .)
    WRITE           reduce using rule 82 (function_call_q2 -> .)
    WHEN            reduce using rule 82 (function_call_q2 -> .)
    WHILE           reduce using rule 82 (function_call_q2 -> .)
    CLBRACE         reduce using rule 82 (function_call_q2 -> .)
    RETURN          reduce using rule 82 (function_call_q2 -> .)

    function_call_q2               shift and go to state 173

state 147

    (98) args -> aritm arg_q1 . COMMA arg_q2 args
    (99) args -> aritm arg_q1 .

    COMMA           shift and go to state 174
    CLPARENTH       reduce using rule 99 (args -> aritm arg_q1 .)


state 148

    (24) dims -> OPBRACKET aritm save_array_index CLBRACKET .
    (25) dims -> OPBRACKET aritm save_array_index CLBRACKET . OPBRACKET aritm save_array_index CLBRACKET

    ASGNMNT         reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    COMMA           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    CLPARENTH       reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    TIMES           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    DIVIDE          reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    PLUS            reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    MINUS           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    ID              reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    READ            reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    WRITE           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    WHEN            reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    WHILE           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    CLBRACE         reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    RETURN          reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    CLBRACKET       reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    EQUAL           reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    UNEQUAL         reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    LESS            reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    LESSEQ          reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    GREATER         reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    GREATEREQ       reduce using rule 24 (dims -> OPBRACKET aritm save_array_index CLBRACKET .)
    OPBRACKET       shift and go to state 175


state 149

    (102) escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .

    ID              reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    READ            reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WRITE           reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHEN            reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHILE           reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    CLBRACE         reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    RETURN          reduce using rule 102 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)


state 150

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    THEN            shift and go to state 176


state 151

    (90) relac -> aritm EQUAL aritm .

    CLPARENTH       reduce using rule 90 (relac -> aritm EQUAL aritm .)


state 152

    (91) relac -> aritm UNEQUAL aritm .

    CLPARENTH       reduce using rule 91 (relac -> aritm UNEQUAL aritm .)


state 153

    (92) relac -> aritm LESS aritm .

    CLPARENTH       reduce using rule 92 (relac -> aritm LESS aritm .)


state 154

    (93) relac -> aritm LESSEQ aritm .

    CLPARENTH       reduce using rule 93 (relac -> aritm LESSEQ aritm .)


state 155

    (94) relac -> aritm GREATER aritm .

    CLPARENTH       reduce using rule 94 (relac -> aritm GREATER aritm .)


state 156

    (95) relac -> aritm GREATEREQ aritm .

    CLPARENTH       reduce using rule 95 (relac -> aritm GREATEREQ aritm .)


state 157

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    CLPARENTH       shift and go to state 177


state 158

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 178


state 159

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .

    VAR             reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    MAIN            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    FUNC            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    ID              reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    READ            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WRITE           reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WHEN            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WHILE           reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)


state 160

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 179


state 161

    (39) func_cont -> var_list . estat_list RETURN aritm save_return_value
    (41) func_cont -> var_list . estat_list
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 180
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 162

    (40) func_cont -> estat_list . RETURN aritm save_return_value
    (42) func_cont -> estat_list .

    RETURN          shift and go to state 181
    CLBRACE         reduce using rule 42 (func_cont -> estat_list .)


state 163

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE . func_cont CLBRACE
    (39) func_cont -> . var_list estat_list RETURN aritm save_return_value
    (40) func_cont -> . estat_list RETURN aritm save_return_value
    (41) func_cont -> . var_list estat_list
    (42) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 182
    var_list                       shift and go to state 161
    estat_list                     shift and go to state 162
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 164

    (83) factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH . function_call_q2
    (82) function_call_q2 -> .

    TIMES           reduce using rule 82 (function_call_q2 -> .)
    DIVIDE          reduce using rule 82 (function_call_q2 -> .)
    PLUS            reduce using rule 82 (function_call_q2 -> .)
    MINUS           reduce using rule 82 (function_call_q2 -> .)
    ID              reduce using rule 82 (function_call_q2 -> .)
    READ            reduce using rule 82 (function_call_q2 -> .)
    WRITE           reduce using rule 82 (function_call_q2 -> .)
    WHEN            reduce using rule 82 (function_call_q2 -> .)
    WHILE           reduce using rule 82 (function_call_q2 -> .)
    CLBRACE         reduce using rule 82 (function_call_q2 -> .)
    RETURN          reduce using rule 82 (function_call_q2 -> .)
    CLBRACKET       reduce using rule 82 (function_call_q2 -> .)
    CLPARENTH       reduce using rule 82 (function_call_q2 -> .)
    EQUAL           reduce using rule 82 (function_call_q2 -> .)
    UNEQUAL         reduce using rule 82 (function_call_q2 -> .)
    LESS            reduce using rule 82 (function_call_q2 -> .)
    LESSEQ          reduce using rule 82 (function_call_q2 -> .)
    GREATER         reduce using rule 82 (function_call_q2 -> .)
    GREATEREQ       reduce using rule 82 (function_call_q2 -> .)
    COMMA           reduce using rule 82 (function_call_q2 -> .)

    function_call_q2               shift and go to state 183

state 165

    (84) factor_function_call -> ID OPPARENTH function_call_q1 args . CLPARENTH function_call_q2

    CLPARENTH       shift and go to state 184


state 166

    (50) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 50 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 167

    (51) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const . CLPARENTH

    CLPARENTH       shift and go to state 185


state 168

    (86) factor -> OPPARENTH check_parenth aritm CLPARENTH . check_parenth
    (85) check_parenth -> .

    TIMES           reduce using rule 85 (check_parenth -> .)
    DIVIDE          reduce using rule 85 (check_parenth -> .)
    PLUS            reduce using rule 85 (check_parenth -> .)
    MINUS           reduce using rule 85 (check_parenth -> .)
    ID              reduce using rule 85 (check_parenth -> .)
    READ            reduce using rule 85 (check_parenth -> .)
    WRITE           reduce using rule 85 (check_parenth -> .)
    WHEN            reduce using rule 85 (check_parenth -> .)
    WHILE           reduce using rule 85 (check_parenth -> .)
    CLBRACE         reduce using rule 85 (check_parenth -> .)
    RETURN          reduce using rule 85 (check_parenth -> .)
    CLBRACKET       reduce using rule 85 (check_parenth -> .)
    CLPARENTH       reduce using rule 85 (check_parenth -> .)
    EQUAL           reduce using rule 85 (check_parenth -> .)
    UNEQUAL         reduce using rule 85 (check_parenth -> .)
    LESS            reduce using rule 85 (check_parenth -> .)
    LESSEQ          reduce using rule 85 (check_parenth -> .)
    GREATER         reduce using rule 85 (check_parenth -> .)
    GREATEREQ       reduce using rule 85 (check_parenth -> .)
    COMMA           reduce using rule 85 (check_parenth -> .)

    check_parenth                  shift and go to state 186

state 169

    (67) aritm -> term check_aritm PLUS check_aritm_operation . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    term                           shift and go to state 87
    aritm                          shift and go to state 187
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 170

    (68) aritm -> term check_aritm MINUS check_aritm_operation . aritm
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    term                           shift and go to state 87
    aritm                          shift and go to state 188
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 171

    (72) term -> factor check_term TIMES check_term_operation . term
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    factor                         shift and go to state 88
    term                           shift and go to state 189
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 172

    (73) term -> factor check_term DIVIDE check_term_operation . term
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    factor                         shift and go to state 88
    term                           shift and go to state 190
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 173

    (104) llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .

    ID              reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    READ            reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 104 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)


state 174

    (98) args -> aritm arg_q1 COMMA . arg_q2 args
    (97) arg_q2 -> .

    OPPARENTH       reduce using rule 97 (arg_q2 -> .)
    ID              reduce using rule 97 (arg_q2 -> .)
    CONST_INT       reduce using rule 97 (arg_q2 -> .)
    CONST_FLOAT     reduce using rule 97 (arg_q2 -> .)

    arg_q2                         shift and go to state 191

state 175

    (25) dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET . aritm save_array_index CLBRACKET
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 192
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 176

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 193


state 177

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE ciclo_q2

    THEN            shift and go to state 194


state 178

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET save_matrix_size

    COLON           shift and go to state 195


state 179

    (27) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 27 (func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 27 (func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)


state 180

    (39) func_cont -> var_list estat_list . RETURN aritm save_return_value
    (41) func_cont -> var_list estat_list .

    RETURN          shift and go to state 196
    CLBRACE         reduce using rule 41 (func_cont -> var_list estat_list .)


state 181

    (40) func_cont -> estat_list RETURN . aritm save_return_value
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 197
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 182

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 198


state 183

    (83) factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .

    TIMES           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    DIVIDE          reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    PLUS            reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    MINUS           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    ID              reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    READ            reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACKET       reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLPARENTH       reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    EQUAL           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    UNEQUAL         reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    LESS            reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    LESSEQ          reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    GREATER         reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    GREATEREQ       reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    COMMA           reduce using rule 83 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)


state 184

    (84) factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH . function_call_q2
    (82) function_call_q2 -> .

    TIMES           reduce using rule 82 (function_call_q2 -> .)
    DIVIDE          reduce using rule 82 (function_call_q2 -> .)
    PLUS            reduce using rule 82 (function_call_q2 -> .)
    MINUS           reduce using rule 82 (function_call_q2 -> .)
    ID              reduce using rule 82 (function_call_q2 -> .)
    READ            reduce using rule 82 (function_call_q2 -> .)
    WRITE           reduce using rule 82 (function_call_q2 -> .)
    WHEN            reduce using rule 82 (function_call_q2 -> .)
    WHILE           reduce using rule 82 (function_call_q2 -> .)
    CLBRACE         reduce using rule 82 (function_call_q2 -> .)
    RETURN          reduce using rule 82 (function_call_q2 -> .)
    CLBRACKET       reduce using rule 82 (function_call_q2 -> .)
    CLPARENTH       reduce using rule 82 (function_call_q2 -> .)
    EQUAL           reduce using rule 82 (function_call_q2 -> .)
    UNEQUAL         reduce using rule 82 (function_call_q2 -> .)
    LESS            reduce using rule 82 (function_call_q2 -> .)
    LESSEQ          reduce using rule 82 (function_call_q2 -> .)
    GREATER         reduce using rule 82 (function_call_q2 -> .)
    GREATEREQ       reduce using rule 82 (function_call_q2 -> .)
    COMMA           reduce using rule 82 (function_call_q2 -> .)

    function_call_q2               shift and go to state 199

state 185

    (51) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .

    ID              reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    READ            reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WRITE           reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHEN            reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHILE           reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    CLBRACE         reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    RETURN          reduce using rule 51 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)


state 186

    (86) factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .

    TIMES           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    DIVIDE          reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    PLUS            reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    MINUS           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    ID              reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    READ            reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WRITE           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHEN            reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHILE           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACE         reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    RETURN          reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACKET       reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLPARENTH       reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    EQUAL           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    UNEQUAL         reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESS            reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESSEQ          reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATER         reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATEREQ       reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    COMMA           reduce using rule 86 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)


state 187

    (67) aritm -> term check_aritm PLUS check_aritm_operation aritm .

    ID              reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    READ            reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WRITE           reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHEN            reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHILE           reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    RETURN          reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLBRACKET       reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESS            reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATER         reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    COMMA           reduce using rule 67 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)


state 188

    (68) aritm -> term check_aritm MINUS check_aritm_operation aritm .

    ID              reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    READ            reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WRITE           reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHEN            reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHILE           reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    RETURN          reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLBRACKET       reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESS            reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATER         reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    COMMA           reduce using rule 68 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)


state 189

    (72) term -> factor check_term TIMES check_term_operation term .

    PLUS            reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    MINUS           reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    ID              reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    READ            reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    WRITE           reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    WHEN            reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    WHILE           reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACE         reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    RETURN          reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACKET       reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    CLPARENTH       reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    EQUAL           reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    UNEQUAL         reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    LESS            reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    LESSEQ          reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    GREATER         reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    GREATEREQ       reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)
    COMMA           reduce using rule 72 (term -> factor check_term TIMES check_term_operation term .)


state 190

    (73) term -> factor check_term DIVIDE check_term_operation term .

    PLUS            reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    MINUS           reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    ID              reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    READ            reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    WRITE           reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    WHEN            reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    WHILE           reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACE         reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    RETURN          reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACKET       reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    CLPARENTH       reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    EQUAL           reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    UNEQUAL         reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    LESS            reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    LESSEQ          reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATER         reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATEREQ       reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)
    COMMA           reduce using rule 73 (term -> factor check_term DIVIDE check_term_operation term .)


state 191

    (98) args -> aritm arg_q1 COMMA arg_q2 . args
    (98) args -> . aritm arg_q1 COMMA arg_q2 args
    (99) args -> . aritm arg_q1
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 121
    args                           shift and go to state 200
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 192

    (25) dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm . save_array_index CLBRACKET
    (23) save_array_index -> .

    CLBRACKET       reduce using rule 23 (save_array_index -> .)

    save_array_index               shift and go to state 201

state 193

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 202
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 194

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE ciclo_q2

    OPBRACE         shift and go to state 203


state 195

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 204


state 196

    (39) func_cont -> var_list estat_list RETURN . aritm save_return_value
    (67) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (68) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (69) aritm -> . term check_aritm
    (72) term -> . factor check_term TIMES check_term_operation term
    (73) term -> . factor check_term DIVIDE check_term_operation term
    (74) term -> . factor check_term
    (86) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (87) factor -> . factor_function_call
    (88) factor -> . factor_var
    (89) factor -> . factor_const
    (83) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (84) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (79) factor_var -> . ID
    (80) factor_var -> . ID dims
    (77) factor_const -> . CONST_INT factortype_const_int
    (78) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 86
    ID              shift and go to state 81
    CONST_INT       shift and go to state 92
    CONST_FLOAT     shift and go to state 93

    aritm                          shift and go to state 205
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_function_call           shift and go to state 89
    factor_var                     shift and go to state 90
    factor_const                   shift and go to state 91

state 197

    (40) func_cont -> estat_list RETURN aritm . save_return_value
    (38) save_return_value -> .

    CLBRACE         reduce using rule 38 (save_return_value -> .)

    save_return_value              shift and go to state 206

state 198

    (28) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 28 (func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 28 (func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)


state 199

    (84) factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .

    TIMES           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    DIVIDE          reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    PLUS            reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    MINUS           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    ID              reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    READ            reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACKET       reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLPARENTH       reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    EQUAL           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    UNEQUAL         reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    LESS            reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    LESSEQ          reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    GREATER         reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    GREATEREQ       reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    COMMA           reduce using rule 84 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)


state 200

    (98) args -> aritm arg_q1 COMMA arg_q2 args .

    CLPARENTH       reduce using rule 98 (args -> aritm arg_q1 COMMA arg_q2 args .)


state 201

    (25) dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index . CLBRACKET

    CLBRACKET       shift and go to state 207


state 202

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLBRACE         shift and go to state 208


state 203

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE ciclo_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 209
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 204

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET save_matrix_size

    CLBRACKET       shift and go to state 210


state 205

    (39) func_cont -> var_list estat_list RETURN aritm . save_return_value
    (38) save_return_value -> .

    CLBRACE         reduce using rule 38 (save_return_value -> .)

    save_return_value              shift and go to state 211

state 206

    (40) func_cont -> estat_list RETURN aritm save_return_value .

    CLBRACE         reduce using rule 40 (func_cont -> estat_list RETURN aritm save_return_value .)


state 207

    (25) dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .

    ASGNMNT         reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    COMMA           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    CLPARENTH       reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    TIMES           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    DIVIDE          reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    PLUS            reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    MINUS           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    ID              reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    READ            reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    WRITE           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    WHEN            reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    WHILE           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    CLBRACE         reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    RETURN          reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    CLBRACKET       reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    EQUAL           reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    UNEQUAL         reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    LESS            reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    LESSEQ          reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    GREATER         reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)
    GREATEREQ       reduce using rule 25 (dims -> OPBRACKET aritm save_array_index CLBRACKET OPBRACKET aritm save_array_index CLBRACKET .)


state 208

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . conditional_q2
    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) conditional_q2 -> .

    ELSE            shift and go to state 213
    ID              reduce using rule 34 (conditional_q2 -> .)
    READ            reduce using rule 34 (conditional_q2 -> .)
    WRITE           reduce using rule 34 (conditional_q2 -> .)
    WHEN            reduce using rule 34 (conditional_q2 -> .)
    WHILE           reduce using rule 34 (conditional_q2 -> .)
    CLBRACE         reduce using rule 34 (conditional_q2 -> .)
    RETURN          reduce using rule 34 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 212

state 209

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE ciclo_q2

    CLBRACE         shift and go to state 214


state 210

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . save_matrix_size
    (20) save_matrix_size -> .

    VAR             reduce using rule 20 (save_matrix_size -> .)
    MAIN            reduce using rule 20 (save_matrix_size -> .)
    FUNC            reduce using rule 20 (save_matrix_size -> .)
    ID              reduce using rule 20 (save_matrix_size -> .)
    READ            reduce using rule 20 (save_matrix_size -> .)
    WRITE           reduce using rule 20 (save_matrix_size -> .)
    WHEN            reduce using rule 20 (save_matrix_size -> .)
    WHILE           reduce using rule 20 (save_matrix_size -> .)

    save_matrix_size               shift and go to state 215

state 211

    (39) func_cont -> var_list estat_list RETURN aritm save_return_value .

    CLBRACE         reduce using rule 39 (func_cont -> var_list estat_list RETURN aritm save_return_value .)


state 212

    (36) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 36 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)


state 213

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (35) conditional_q3 -> .

    OPBRACE         reduce using rule 35 (conditional_q3 -> .)

    conditional_q3                 shift and go to state 216

state 214

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . ciclo_q2
    (31) ciclo_q2 -> .

    ID              reduce using rule 31 (ciclo_q2 -> .)
    READ            reduce using rule 31 (ciclo_q2 -> .)
    WRITE           reduce using rule 31 (ciclo_q2 -> .)
    WHEN            reduce using rule 31 (ciclo_q2 -> .)
    WHILE           reduce using rule 31 (ciclo_q2 -> .)
    CLBRACE         reduce using rule 31 (ciclo_q2 -> .)
    RETURN          reduce using rule 31 (ciclo_q2 -> .)

    ciclo_q2                       shift and go to state 217

state 215

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .

    VAR             reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    MAIN            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    FUNC            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    ID              reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    READ            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WRITE           reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WHEN            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WHILE           reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)


state 216

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 . OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 218


state 217

    (32) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .

    ID              reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    READ            reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WRITE           reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WHEN            reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WHILE           reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    CLBRACE         reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    RETURN          reduce using rule 32 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)


state 218

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE . estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (43) estat -> . asign
    (44) estat -> . llam_void
    (45) estat -> . lectura
    (46) estat -> . escritura
    (47) estat -> . carga_dt
    (48) estat -> . decision
    (49) estat -> . ciclo
    (106) asign -> . ID ASGNMNT lectura
    (107) asign -> . ID ASGNMNT aritm
    (108) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (109) asign -> . ID dims ASGNMNT lectura
    (110) asign -> . ID dims ASGNMNT aritm
    (111) asign -> . ID dims ASGNMNT CONST_STRING add_string_const
    (103) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (104) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (100) lectura -> . READ OPPARENTH CLPARENTH
    (101) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (102) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (50) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (51) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (36) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (37) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (32) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 219
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 219

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list . CLBRACE conditional_q2

    CLBRACE         shift and go to state 220


state 220

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE . conditional_q2
    (34) conditional_q2 -> .

    ID              reduce using rule 34 (conditional_q2 -> .)
    READ            reduce using rule 34 (conditional_q2 -> .)
    WRITE           reduce using rule 34 (conditional_q2 -> .)
    WHEN            reduce using rule 34 (conditional_q2 -> .)
    WHILE           reduce using rule 34 (conditional_q2 -> .)
    CLBRACE         reduce using rule 34 (conditional_q2 -> .)
    RETURN          reduce using rule 34 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 221

state 221

    (37) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 37 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)

