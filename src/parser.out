Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list func_list cuerpo
Rule 2     program -> encabezamiento var_list cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     encabezamiento -> PROGRAM ID
Rule 6     cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
Rule 7     variable -> VAR ID COLON var_typ
Rule 8     variable -> VAR ID COLON var_typ dims
Rule 9     var_list -> variable var_list
Rule 10    var_list -> variable
Rule 11    func_list -> func func_list
Rule 12    func_list -> func
Rule 13    estat_list -> estat estat_list
Rule 14    estat_list -> estat
Rule 15    param_list -> param param_list
Rule 16    param_list -> param
Rule 17    dims -> OPBRACKET CONST_INT CLBRACKET
Rule 18    dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET
Rule 19    func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
Rule 20    func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE
Rule 21    ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 22    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 23    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
Rule 24    func_cont -> var_list estat_list RETURN ID dims
Rule 25    func_cont -> var_list estat_list RETURN ID
Rule 26    func_cont -> estat_list RETURN ID dims
Rule 27    func_cont -> var_list RETURN ID dims
Rule 28    func_cont -> estat_list RETURN ID
Rule 29    func_cont -> var_list RETURN ID
Rule 30    func_cont -> RETURN ID dims
Rule 31    func_cont -> RETURN ID
Rule 32    estat -> asign
Rule 33    estat -> llam_void
Rule 34    estat -> lectura
Rule 35    estat -> escritura
Rule 36    estat -> carga_dt
Rule 37    estat -> decision
Rule 38    estat -> ciclo
Rule 39    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 40    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
Rule 41    param -> ID COLON var_typ
Rule 42    param -> ID COLON var_typ dims
Rule 43    var_typ -> INT
Rule 44    var_typ -> FLOAT
Rule 45    var_typ -> CHAR
Rule 46    var_typ -> BOOL
Rule 47    var_typ -> FRAME
Rule 48    func_typ -> INT
Rule 49    func_typ -> FLOAT
Rule 50    func_typ -> CHAR
Rule 51    func_typ -> BOOL
Rule 52    func_typ -> FRAME
Rule 53    func_typ -> VOID
Rule 54    aritm -> term PLUS aritm
Rule 55    aritm -> term MINUS aritm
Rule 56    aritm -> term
Rule 57    term -> factor TIMES term
Rule 58    term -> factor DIVIDE term
Rule 59    term -> factor
Rule 60    factor -> OPPARENTH aritm CLPARENTH
Rule 61    factor -> ID
Rule 62    factor -> ID dims
Rule 63    factor -> CONST_INT
Rule 64    factor -> CONST_FLOAT
Rule 65    logic -> oprnd AND logic
Rule 66    logic -> oprnd OR logic
Rule 67    logic -> NOT oprnd
Rule 68    logic -> oprnd
Rule 69    expr -> aritm
Rule 70    expr -> logic
Rule 71    oprnd -> FALSE
Rule 72    oprnd -> TRUE
Rule 73    oprnd -> relac
Rule 74    oprnd -> OPPARENTH logic CLPARENTH
Rule 75    relac -> aritm EQUAL aritm
Rule 76    relac -> aritm UNEQUAL aritm
Rule 77    relac -> aritm LESS aritm
Rule 78    relac -> aritm LESSEQ aritm
Rule 79    relac -> aritm GREATER aritm
Rule 80    relac -> aritm GREATEREQ aritm
Rule 81    args -> ID dims COMMA args
Rule 82    args -> ID COMMA args
Rule 83    args -> ID dims
Rule 84    args -> ID
Rule 85    lectura -> READ OPPARENTH CLPARENTH
Rule 86    escritura -> WRITE OPPARENTH ID CLPARENTH
Rule 87    escritura -> WRITE OPPARENTH ID dims CLPARENTH
Rule 88    escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH
Rule 89    llam_void -> OPPARENTH CLPARENTH
Rule 90    llam_void -> OPPARENTH args CLPARENTH
Rule 91    asign -> ID ASGNMNT expr
Rule 92    asign -> ID ASGNMNT CONST_STRING
Rule 93    asign -> ID ASGNMNT ID OPPARENTH CLPARENTH
Rule 94    asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH
Rule 95    asign -> ID ASGNMNT lectura
Rule 96    asign -> ID dims ASGNMNT expr
Rule 97    asign -> ID dims ASGNMNT CONST_STRING
Rule 98    asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH
Rule 99    asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH
Rule 100   asign -> ID dims ASGNMNT lectura

Terminals, with rules where they appear

AND                  : 65
ASGNMNT              : 39 40 91 92 93 94 95 96 97 98 99 100
BOOL                 : 46 51
CHAR                 : 45 50
CLBRACE              : 6 19 20 21 22 23 23
CLBRACKET            : 17 18 18
CLPARENTH            : 6 19 20 21 22 23 39 40 60 74 85 86 87 88 89 90 93 94 98 99
COLON                : 7 8 41 42
COMMA                : 81 82
CONST_FLOAT          : 64
CONST_INT            : 17 18 18 63
CONST_STRING         : 40 88 92 97
DIVIDE               : 58
ELSE                 : 23
EQUAL                : 75
FALSE                : 71
FLOAT                : 44 49
FRAME                : 47 52
FUNC                 : 19 20
GREATER              : 79
GREATEREQ            : 80
ID                   : 5 7 8 19 20 24 25 26 27 28 29 30 31 39 39 40 41 42 61 62 81 82 83 84 86 87 91 92 93 93 94 94 95 96 97 98 98 99 99 100
INT                  : 43 48
LESS                 : 77
LESSEQ               : 78
LOAD                 : 39 40
MAIN                 : 6
MINUS                : 55
NOT                  : 67
OPBRACE              : 6 19 20 21 22 23 23
OPBRACKET            : 17 18 18
OPPARENTH            : 6 19 20 21 22 23 39 40 60 74 85 86 87 88 89 90 93 94 98 99
OR                   : 66
PLUS                 : 54
PROGRAM              : 5
READ                 : 85
RETURN               : 24 25 26 27 28 29 30 31
THEN                 : 21 22 23
TIMES                : 57
TRUE                 : 72
UNEQUAL              : 76
VAR                  : 7 8
VOID                 : 53
WHEN                 : 22 23
WHILE                : 21
WRITE                : 86 87 88
error                : 

Nonterminals, with rules where they appear

args                 : 81 82 90 94 99
aritm                : 54 55 60 69 75 75 76 76 77 77 78 78 79 79 80 80
asign                : 32
carga_dt             : 36
ciclo                : 38
cuerpo               : 1 2 3 4
decision             : 37
dims                 : 8 24 26 27 30 42 62 81 83 87 96 97 98 99 100
encabezamiento       : 1 2 3 4
escritura            : 35
estat                : 13 14
estat_list           : 6 13 21 22 23 23 24 25 26 28
expr                 : 91 96
factor               : 57 58 59
func                 : 11 12
func_cont            : 19 20
func_list            : 1 3 11
func_typ             : 19 20
lectura              : 34 95 100
llam_void            : 33
logic                : 21 22 23 65 66 70 74
oprnd                : 65 66 67 68
param                : 15 16
param_list           : 15 20
program              : 0
relac                : 73
term                 : 54 55 56 57 58
var_list             : 1 2 9 24 25 27 29
var_typ              : 7 8 41 42
variable             : 9 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list func_list cuerpo
    (2) program -> . encabezamiento var_list cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (5) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list func_list cuerpo
    (2) program -> encabezamiento . var_list cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (19) func -> . FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (5) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . func_list cuerpo
    (2) program -> encabezamiento var_list . cuerpo
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (19) func -> . FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 13
    cuerpo                         shift and go to state 14
    func                           shift and go to state 8

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 15

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (9) var_list -> variable . var_list
    (10) var_list -> variable .
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims

    MAIN            reduce using rule 10 (var_list -> variable .)
    FUNC            reduce using rule 10 (var_list -> variable .)
    RETURN          reduce using rule 10 (var_list -> variable .)
    ID              reduce using rule 10 (var_list -> variable .)
    OPPARENTH       reduce using rule 10 (var_list -> variable .)
    READ            reduce using rule 10 (var_list -> variable .)
    WRITE           reduce using rule 10 (var_list -> variable .)
    WHEN            reduce using rule 10 (var_list -> variable .)
    WHILE           reduce using rule 10 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 16

state 8

    (11) func_list -> func . func_list
    (12) func_list -> func .
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (19) func -> . FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 12 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 17

state 9

    (6) cuerpo -> MAIN . OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 18


state 10

    (7) variable -> VAR . ID COLON var_typ
    (8) variable -> VAR . ID COLON var_typ dims

    ID              shift and go to state 19


state 11

    (19) func -> FUNC . ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC . ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE

    ID              shift and go to state 20


state 12

    (5) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 5 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 5 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 5 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list func_list . cuerpo
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 21

state 14

    (2) program -> encabezamiento var_list cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list cuerpo .)


state 15

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 16

    (9) var_list -> variable var_list .

    MAIN            reduce using rule 9 (var_list -> variable var_list .)
    FUNC            reduce using rule 9 (var_list -> variable var_list .)
    RETURN          reduce using rule 9 (var_list -> variable var_list .)
    ID              reduce using rule 9 (var_list -> variable var_list .)
    OPPARENTH       reduce using rule 9 (var_list -> variable var_list .)
    READ            reduce using rule 9 (var_list -> variable var_list .)
    WRITE           reduce using rule 9 (var_list -> variable var_list .)
    WHEN            reduce using rule 9 (var_list -> variable var_list .)
    WHILE           reduce using rule 9 (var_list -> variable var_list .)


state 17

    (11) func_list -> func func_list .

    MAIN            reduce using rule 11 (func_list -> func func_list .)


state 18

    (6) cuerpo -> MAIN OPPARENTH . CLPARENTH OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 22


state 19

    (7) variable -> VAR ID . COLON var_typ
    (8) variable -> VAR ID . COLON var_typ dims

    COLON           shift and go to state 23


state 20

    (19) func -> FUNC ID . OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC ID . OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 24


state 21

    (1) program -> encabezamiento var_list func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list func_list cuerpo .)


state 22

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 25


state 23

    (7) variable -> VAR ID COLON . var_typ
    (8) variable -> VAR ID COLON . var_typ dims
    (43) var_typ -> . INT
    (44) var_typ -> . FLOAT
    (45) var_typ -> . CHAR
    (46) var_typ -> . BOOL
    (47) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 26

state 24

    (19) func -> FUNC ID OPPARENTH . CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC ID OPPARENTH . param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE
    (15) param_list -> . param param_list
    (16) param_list -> . param
    (41) param -> . ID COLON var_typ
    (42) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 33
    ID              shift and go to state 32

    param_list                     shift and go to state 34
    param                          shift and go to state 35

state 25

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat_list                     shift and go to state 37
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 26

    (7) variable -> VAR ID COLON var_typ .
    (8) variable -> VAR ID COLON var_typ . dims
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    RETURN          reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    OPPARENTH       reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 51

state 27

    (43) var_typ -> INT .

    OPBRACKET       reduce using rule 43 (var_typ -> INT .)
    VAR             reduce using rule 43 (var_typ -> INT .)
    MAIN            reduce using rule 43 (var_typ -> INT .)
    FUNC            reduce using rule 43 (var_typ -> INT .)
    RETURN          reduce using rule 43 (var_typ -> INT .)
    ID              reduce using rule 43 (var_typ -> INT .)
    OPPARENTH       reduce using rule 43 (var_typ -> INT .)
    READ            reduce using rule 43 (var_typ -> INT .)
    WRITE           reduce using rule 43 (var_typ -> INT .)
    WHEN            reduce using rule 43 (var_typ -> INT .)
    WHILE           reduce using rule 43 (var_typ -> INT .)
    CLPARENTH       reduce using rule 43 (var_typ -> INT .)


state 28

    (44) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 44 (var_typ -> FLOAT .)
    VAR             reduce using rule 44 (var_typ -> FLOAT .)
    MAIN            reduce using rule 44 (var_typ -> FLOAT .)
    FUNC            reduce using rule 44 (var_typ -> FLOAT .)
    RETURN          reduce using rule 44 (var_typ -> FLOAT .)
    ID              reduce using rule 44 (var_typ -> FLOAT .)
    OPPARENTH       reduce using rule 44 (var_typ -> FLOAT .)
    READ            reduce using rule 44 (var_typ -> FLOAT .)
    WRITE           reduce using rule 44 (var_typ -> FLOAT .)
    WHEN            reduce using rule 44 (var_typ -> FLOAT .)
    WHILE           reduce using rule 44 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 44 (var_typ -> FLOAT .)


state 29

    (45) var_typ -> CHAR .

    OPBRACKET       reduce using rule 45 (var_typ -> CHAR .)
    VAR             reduce using rule 45 (var_typ -> CHAR .)
    MAIN            reduce using rule 45 (var_typ -> CHAR .)
    FUNC            reduce using rule 45 (var_typ -> CHAR .)
    RETURN          reduce using rule 45 (var_typ -> CHAR .)
    ID              reduce using rule 45 (var_typ -> CHAR .)
    OPPARENTH       reduce using rule 45 (var_typ -> CHAR .)
    READ            reduce using rule 45 (var_typ -> CHAR .)
    WRITE           reduce using rule 45 (var_typ -> CHAR .)
    WHEN            reduce using rule 45 (var_typ -> CHAR .)
    WHILE           reduce using rule 45 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 45 (var_typ -> CHAR .)


state 30

    (46) var_typ -> BOOL .

    OPBRACKET       reduce using rule 46 (var_typ -> BOOL .)
    VAR             reduce using rule 46 (var_typ -> BOOL .)
    MAIN            reduce using rule 46 (var_typ -> BOOL .)
    FUNC            reduce using rule 46 (var_typ -> BOOL .)
    RETURN          reduce using rule 46 (var_typ -> BOOL .)
    ID              reduce using rule 46 (var_typ -> BOOL .)
    OPPARENTH       reduce using rule 46 (var_typ -> BOOL .)
    READ            reduce using rule 46 (var_typ -> BOOL .)
    WRITE           reduce using rule 46 (var_typ -> BOOL .)
    WHEN            reduce using rule 46 (var_typ -> BOOL .)
    WHILE           reduce using rule 46 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 46 (var_typ -> BOOL .)


state 31

    (47) var_typ -> FRAME .

    OPBRACKET       reduce using rule 47 (var_typ -> FRAME .)
    VAR             reduce using rule 47 (var_typ -> FRAME .)
    MAIN            reduce using rule 47 (var_typ -> FRAME .)
    FUNC            reduce using rule 47 (var_typ -> FRAME .)
    RETURN          reduce using rule 47 (var_typ -> FRAME .)
    ID              reduce using rule 47 (var_typ -> FRAME .)
    OPPARENTH       reduce using rule 47 (var_typ -> FRAME .)
    READ            reduce using rule 47 (var_typ -> FRAME .)
    WRITE           reduce using rule 47 (var_typ -> FRAME .)
    WHEN            reduce using rule 47 (var_typ -> FRAME .)
    WHILE           reduce using rule 47 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 47 (var_typ -> FRAME .)


state 32

    (41) param -> ID . COLON var_typ
    (42) param -> ID . COLON var_typ dims

    COLON           shift and go to state 53


state 33

    (19) func -> FUNC ID OPPARENTH CLPARENTH . func_typ OPBRACE func_cont CLBRACE
    (48) func_typ -> . INT
    (49) func_typ -> . FLOAT
    (50) func_typ -> . CHAR
    (51) func_typ -> . BOOL
    (52) func_typ -> . FRAME
    (53) func_typ -> . VOID

    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57
    BOOL            shift and go to state 58
    FRAME           shift and go to state 59
    VOID            shift and go to state 60

    func_typ                       shift and go to state 54

state 34

    (20) func -> FUNC ID OPPARENTH param_list . CLPARENTH func_typ OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 61


state 35

    (15) param_list -> param . param_list
    (16) param_list -> param .
    (15) param_list -> . param param_list
    (16) param_list -> . param
    (41) param -> . ID COLON var_typ
    (42) param -> . ID COLON var_typ dims

    CLPARENTH       reduce using rule 16 (param_list -> param .)
    ID              shift and go to state 32

    param                          shift and go to state 35
    param_list                     shift and go to state 62

state 36

    (89) llam_void -> OPPARENTH . CLPARENTH
    (90) llam_void -> OPPARENTH . args CLPARENTH
    (81) args -> . ID dims COMMA args
    (82) args -> . ID COMMA args
    (83) args -> . ID dims
    (84) args -> . ID

    CLPARENTH       shift and go to state 63
    ID              shift and go to state 65

    args                           shift and go to state 64

state 37

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 66


state 38

    (13) estat_list -> estat . estat_list
    (14) estat_list -> estat .
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLBRACE         reduce using rule 14 (estat_list -> estat .)
    RETURN          reduce using rule 14 (estat_list -> estat .)
    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat                          shift and go to state 38
    estat_list                     shift and go to state 67
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 39

    (32) estat -> asign .

    ID              reduce using rule 32 (estat -> asign .)
    OPPARENTH       reduce using rule 32 (estat -> asign .)
    READ            reduce using rule 32 (estat -> asign .)
    WRITE           reduce using rule 32 (estat -> asign .)
    WHEN            reduce using rule 32 (estat -> asign .)
    WHILE           reduce using rule 32 (estat -> asign .)
    CLBRACE         reduce using rule 32 (estat -> asign .)
    RETURN          reduce using rule 32 (estat -> asign .)


state 40

    (33) estat -> llam_void .

    ID              reduce using rule 33 (estat -> llam_void .)
    OPPARENTH       reduce using rule 33 (estat -> llam_void .)
    READ            reduce using rule 33 (estat -> llam_void .)
    WRITE           reduce using rule 33 (estat -> llam_void .)
    WHEN            reduce using rule 33 (estat -> llam_void .)
    WHILE           reduce using rule 33 (estat -> llam_void .)
    CLBRACE         reduce using rule 33 (estat -> llam_void .)
    RETURN          reduce using rule 33 (estat -> llam_void .)


state 41

    (34) estat -> lectura .

    ID              reduce using rule 34 (estat -> lectura .)
    OPPARENTH       reduce using rule 34 (estat -> lectura .)
    READ            reduce using rule 34 (estat -> lectura .)
    WRITE           reduce using rule 34 (estat -> lectura .)
    WHEN            reduce using rule 34 (estat -> lectura .)
    WHILE           reduce using rule 34 (estat -> lectura .)
    CLBRACE         reduce using rule 34 (estat -> lectura .)
    RETURN          reduce using rule 34 (estat -> lectura .)


state 42

    (35) estat -> escritura .

    ID              reduce using rule 35 (estat -> escritura .)
    OPPARENTH       reduce using rule 35 (estat -> escritura .)
    READ            reduce using rule 35 (estat -> escritura .)
    WRITE           reduce using rule 35 (estat -> escritura .)
    WHEN            reduce using rule 35 (estat -> escritura .)
    WHILE           reduce using rule 35 (estat -> escritura .)
    CLBRACE         reduce using rule 35 (estat -> escritura .)
    RETURN          reduce using rule 35 (estat -> escritura .)


state 43

    (36) estat -> carga_dt .

    ID              reduce using rule 36 (estat -> carga_dt .)
    OPPARENTH       reduce using rule 36 (estat -> carga_dt .)
    READ            reduce using rule 36 (estat -> carga_dt .)
    WRITE           reduce using rule 36 (estat -> carga_dt .)
    WHEN            reduce using rule 36 (estat -> carga_dt .)
    WHILE           reduce using rule 36 (estat -> carga_dt .)
    CLBRACE         reduce using rule 36 (estat -> carga_dt .)
    RETURN          reduce using rule 36 (estat -> carga_dt .)


state 44

    (37) estat -> decision .

    ID              reduce using rule 37 (estat -> decision .)
    OPPARENTH       reduce using rule 37 (estat -> decision .)
    READ            reduce using rule 37 (estat -> decision .)
    WRITE           reduce using rule 37 (estat -> decision .)
    WHEN            reduce using rule 37 (estat -> decision .)
    WHILE           reduce using rule 37 (estat -> decision .)
    CLBRACE         reduce using rule 37 (estat -> decision .)
    RETURN          reduce using rule 37 (estat -> decision .)


state 45

    (38) estat -> ciclo .

    ID              reduce using rule 38 (estat -> ciclo .)
    OPPARENTH       reduce using rule 38 (estat -> ciclo .)
    READ            reduce using rule 38 (estat -> ciclo .)
    WRITE           reduce using rule 38 (estat -> ciclo .)
    WHEN            reduce using rule 38 (estat -> ciclo .)
    WHILE           reduce using rule 38 (estat -> ciclo .)
    CLBRACE         reduce using rule 38 (estat -> ciclo .)
    RETURN          reduce using rule 38 (estat -> ciclo .)


state 46

    (91) asign -> ID . ASGNMNT expr
    (92) asign -> ID . ASGNMNT CONST_STRING
    (93) asign -> ID . ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> ID . ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> ID . ASGNMNT lectura
    (96) asign -> ID . dims ASGNMNT expr
    (97) asign -> ID . dims ASGNMNT CONST_STRING
    (98) asign -> ID . dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> ID . dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> ID . dims ASGNMNT lectura
    (39) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    ASGNMNT         shift and go to state 68
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 69

state 47

    (85) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 70


state 48

    (86) escritura -> WRITE . OPPARENTH ID CLPARENTH
    (87) escritura -> WRITE . OPPARENTH ID dims CLPARENTH
    (88) escritura -> WRITE . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 71


state 49

    (22) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 72


state 50

    (21) ciclo -> WHILE . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 73


state 51

    (8) variable -> VAR ID COLON var_typ dims .

    VAR             reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    MAIN            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    FUNC            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    RETURN          reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    ID              reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    OPPARENTH       reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    READ            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WRITE           reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WHEN            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WHILE           reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)


state 52

    (17) dims -> OPBRACKET . CONST_INT CLBRACKET
    (18) dims -> OPBRACKET . CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CONST_INT       shift and go to state 74


state 53

    (41) param -> ID COLON . var_typ
    (42) param -> ID COLON . var_typ dims
    (43) var_typ -> . INT
    (44) var_typ -> . FLOAT
    (45) var_typ -> . CHAR
    (46) var_typ -> . BOOL
    (47) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 75

state 54

    (19) func -> FUNC ID OPPARENTH CLPARENTH func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 76


state 55

    (48) func_typ -> INT .

    OPBRACE         reduce using rule 48 (func_typ -> INT .)


state 56

    (49) func_typ -> FLOAT .

    OPBRACE         reduce using rule 49 (func_typ -> FLOAT .)


state 57

    (50) func_typ -> CHAR .

    OPBRACE         reduce using rule 50 (func_typ -> CHAR .)


state 58

    (51) func_typ -> BOOL .

    OPBRACE         reduce using rule 51 (func_typ -> BOOL .)


state 59

    (52) func_typ -> FRAME .

    OPBRACE         reduce using rule 52 (func_typ -> FRAME .)


state 60

    (53) func_typ -> VOID .

    OPBRACE         reduce using rule 53 (func_typ -> VOID .)


state 61

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH . func_typ OPBRACE func_cont CLBRACE
    (48) func_typ -> . INT
    (49) func_typ -> . FLOAT
    (50) func_typ -> . CHAR
    (51) func_typ -> . BOOL
    (52) func_typ -> . FRAME
    (53) func_typ -> . VOID

    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57
    BOOL            shift and go to state 58
    FRAME           shift and go to state 59
    VOID            shift and go to state 60

    func_typ                       shift and go to state 77

state 62

    (15) param_list -> param param_list .

    CLPARENTH       reduce using rule 15 (param_list -> param param_list .)


state 63

    (89) llam_void -> OPPARENTH CLPARENTH .

    ID              reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    OPPARENTH       reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    READ            reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 89 (llam_void -> OPPARENTH CLPARENTH .)


state 64

    (90) llam_void -> OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 78


state 65

    (81) args -> ID . dims COMMA args
    (82) args -> ID . COMMA args
    (83) args -> ID . dims
    (84) args -> ID .
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    COMMA           shift and go to state 80
    CLPARENTH       reduce using rule 84 (args -> ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 79

state 66

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .

    $end            reduce using rule 6 (cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .)


state 67

    (13) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 13 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 13 (estat_list -> estat estat_list .)


state 68

    (91) asign -> ID ASGNMNT . expr
    (92) asign -> ID ASGNMNT . CONST_STRING
    (93) asign -> ID ASGNMNT . ID OPPARENTH CLPARENTH
    (94) asign -> ID ASGNMNT . ID OPPARENTH args CLPARENTH
    (95) asign -> ID ASGNMNT . lectura
    (39) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING CLPARENTH
    (69) expr -> . aritm
    (70) expr -> . logic
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 83
    ID              shift and go to state 81
    LOAD            shift and go to state 86
    READ            shift and go to state 47
    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    expr                           shift and go to state 82
    lectura                        shift and go to state 85
    aritm                          shift and go to state 87
    logic                          shift and go to state 88
    term                           shift and go to state 89
    oprnd                          shift and go to state 90
    factor                         shift and go to state 92
    relac                          shift and go to state 95

state 69

    (96) asign -> ID dims . ASGNMNT expr
    (97) asign -> ID dims . ASGNMNT CONST_STRING
    (98) asign -> ID dims . ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> ID dims . ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> ID dims . ASGNMNT lectura

    ASGNMNT         shift and go to state 98


state 70

    (85) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 99


state 71

    (86) escritura -> WRITE OPPARENTH . ID CLPARENTH
    (87) escritura -> WRITE OPPARENTH . ID dims CLPARENTH
    (88) escritura -> WRITE OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 100
    CONST_STRING    shift and go to state 101


state 72

    (22) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    logic                          shift and go to state 102
    oprnd                          shift and go to state 90
    relac                          shift and go to state 95
    aritm                          shift and go to state 103
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 73

    (21) ciclo -> WHILE OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    logic                          shift and go to state 105
    oprnd                          shift and go to state 90
    relac                          shift and go to state 95
    aritm                          shift and go to state 103
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 74

    (17) dims -> OPBRACKET CONST_INT . CLBRACKET
    (18) dims -> OPBRACKET CONST_INT . CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACKET       shift and go to state 106


state 75

    (41) param -> ID COLON var_typ .
    (42) param -> ID COLON var_typ . dims
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    ID              reduce using rule 41 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 41 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 107

state 76

    (19) func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE . func_cont CLBRACE
    (24) func_cont -> . var_list estat_list RETURN ID dims
    (25) func_cont -> . var_list estat_list RETURN ID
    (26) func_cont -> . estat_list RETURN ID dims
    (27) func_cont -> . var_list RETURN ID dims
    (28) func_cont -> . estat_list RETURN ID
    (29) func_cont -> . var_list RETURN ID
    (30) func_cont -> . RETURN ID dims
    (31) func_cont -> . RETURN ID
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    RETURN          shift and go to state 111
    VAR             shift and go to state 10
    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    func_cont                      shift and go to state 108
    var_list                       shift and go to state 109
    estat_list                     shift and go to state 110
    variable                       shift and go to state 7
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 77

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 112


state 78

    (90) llam_void -> OPPARENTH args CLPARENTH .

    ID              reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    OPPARENTH       reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    READ            reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 90 (llam_void -> OPPARENTH args CLPARENTH .)


state 79

    (81) args -> ID dims . COMMA args
    (83) args -> ID dims .

    COMMA           shift and go to state 113
    CLPARENTH       reduce using rule 83 (args -> ID dims .)


state 80

    (82) args -> ID COMMA . args
    (81) args -> . ID dims COMMA args
    (82) args -> . ID COMMA args
    (83) args -> . ID dims
    (84) args -> . ID

    ID              shift and go to state 65

    args                           shift and go to state 114

state 81

    (93) asign -> ID ASGNMNT ID . OPPARENTH CLPARENTH
    (94) asign -> ID ASGNMNT ID . OPPARENTH args CLPARENTH
    (61) factor -> ID .
    (62) factor -> ID . dims
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

  ! shift/reduce conflict for OPPARENTH resolved as shift
    OPPARENTH       shift and go to state 115
    TIMES           reduce using rule 61 (factor -> ID .)
    DIVIDE          reduce using rule 61 (factor -> ID .)
    PLUS            reduce using rule 61 (factor -> ID .)
    MINUS           reduce using rule 61 (factor -> ID .)
    EQUAL           reduce using rule 61 (factor -> ID .)
    UNEQUAL         reduce using rule 61 (factor -> ID .)
    LESS            reduce using rule 61 (factor -> ID .)
    LESSEQ          reduce using rule 61 (factor -> ID .)
    GREATER         reduce using rule 61 (factor -> ID .)
    GREATEREQ       reduce using rule 61 (factor -> ID .)
    ID              reduce using rule 61 (factor -> ID .)
    READ            reduce using rule 61 (factor -> ID .)
    WRITE           reduce using rule 61 (factor -> ID .)
    WHEN            reduce using rule 61 (factor -> ID .)
    WHILE           reduce using rule 61 (factor -> ID .)
    CLBRACE         reduce using rule 61 (factor -> ID .)
    RETURN          reduce using rule 61 (factor -> ID .)
    OPBRACKET       shift and go to state 52

  ! OPPARENTH       [ reduce using rule 61 (factor -> ID .) ]

    dims                           shift and go to state 116

state 82

    (91) asign -> ID ASGNMNT expr .

    ID              reduce using rule 91 (asign -> ID ASGNMNT expr .)
    OPPARENTH       reduce using rule 91 (asign -> ID ASGNMNT expr .)
    READ            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WRITE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHEN            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHILE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    CLBRACE         reduce using rule 91 (asign -> ID ASGNMNT expr .)
    RETURN          reduce using rule 91 (asign -> ID ASGNMNT expr .)


state 83

    (92) asign -> ID ASGNMNT CONST_STRING .

    ID              reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    OPPARENTH       reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    READ            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)


state 84

    (74) oprnd -> OPPARENTH . logic CLPARENTH
    (60) factor -> OPPARENTH . aritm CLPARENTH
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    logic                          shift and go to state 117
    aritm                          shift and go to state 118
    oprnd                          shift and go to state 90
    term                           shift and go to state 89
    relac                          shift and go to state 95
    factor                         shift and go to state 92

state 85

    (95) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    OPPARENTH       reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 95 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 95 (asign -> ID ASGNMNT lectura .)


state 86

    (39) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (40) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 119


state 87

    (69) expr -> aritm .
    (75) relac -> aritm . EQUAL aritm
    (76) relac -> aritm . UNEQUAL aritm
    (77) relac -> aritm . LESS aritm
    (78) relac -> aritm . LESSEQ aritm
    (79) relac -> aritm . GREATER aritm
    (80) relac -> aritm . GREATEREQ aritm

    ID              reduce using rule 69 (expr -> aritm .)
    OPPARENTH       reduce using rule 69 (expr -> aritm .)
    READ            reduce using rule 69 (expr -> aritm .)
    WRITE           reduce using rule 69 (expr -> aritm .)
    WHEN            reduce using rule 69 (expr -> aritm .)
    WHILE           reduce using rule 69 (expr -> aritm .)
    CLBRACE         reduce using rule 69 (expr -> aritm .)
    RETURN          reduce using rule 69 (expr -> aritm .)
    EQUAL           shift and go to state 120
    UNEQUAL         shift and go to state 121
    LESS            shift and go to state 122
    LESSEQ          shift and go to state 123
    GREATER         shift and go to state 124
    GREATEREQ       shift and go to state 125


state 88

    (70) expr -> logic .

    ID              reduce using rule 70 (expr -> logic .)
    OPPARENTH       reduce using rule 70 (expr -> logic .)
    READ            reduce using rule 70 (expr -> logic .)
    WRITE           reduce using rule 70 (expr -> logic .)
    WHEN            reduce using rule 70 (expr -> logic .)
    WHILE           reduce using rule 70 (expr -> logic .)
    CLBRACE         reduce using rule 70 (expr -> logic .)
    RETURN          reduce using rule 70 (expr -> logic .)


state 89

    (54) aritm -> term . PLUS aritm
    (55) aritm -> term . MINUS aritm
    (56) aritm -> term .

    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    EQUAL           reduce using rule 56 (aritm -> term .)
    UNEQUAL         reduce using rule 56 (aritm -> term .)
    LESS            reduce using rule 56 (aritm -> term .)
    LESSEQ          reduce using rule 56 (aritm -> term .)
    GREATER         reduce using rule 56 (aritm -> term .)
    GREATEREQ       reduce using rule 56 (aritm -> term .)
    ID              reduce using rule 56 (aritm -> term .)
    OPPARENTH       reduce using rule 56 (aritm -> term .)
    READ            reduce using rule 56 (aritm -> term .)
    WRITE           reduce using rule 56 (aritm -> term .)
    WHEN            reduce using rule 56 (aritm -> term .)
    WHILE           reduce using rule 56 (aritm -> term .)
    CLBRACE         reduce using rule 56 (aritm -> term .)
    RETURN          reduce using rule 56 (aritm -> term .)
    CLPARENTH       reduce using rule 56 (aritm -> term .)
    AND             reduce using rule 56 (aritm -> term .)
    OR              reduce using rule 56 (aritm -> term .)


state 90

    (65) logic -> oprnd . AND logic
    (66) logic -> oprnd . OR logic
    (68) logic -> oprnd .

    AND             shift and go to state 128
    OR              shift and go to state 129
    ID              reduce using rule 68 (logic -> oprnd .)
    OPPARENTH       reduce using rule 68 (logic -> oprnd .)
    READ            reduce using rule 68 (logic -> oprnd .)
    WRITE           reduce using rule 68 (logic -> oprnd .)
    WHEN            reduce using rule 68 (logic -> oprnd .)
    WHILE           reduce using rule 68 (logic -> oprnd .)
    CLBRACE         reduce using rule 68 (logic -> oprnd .)
    RETURN          reduce using rule 68 (logic -> oprnd .)
    CLPARENTH       reduce using rule 68 (logic -> oprnd .)


state 91

    (67) logic -> NOT . oprnd
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    oprnd                          shift and go to state 130
    relac                          shift and go to state 95
    aritm                          shift and go to state 103
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 92

    (57) term -> factor . TIMES term
    (58) term -> factor . DIVIDE term
    (59) term -> factor .

    TIMES           shift and go to state 131
    DIVIDE          shift and go to state 132
    PLUS            reduce using rule 59 (term -> factor .)
    MINUS           reduce using rule 59 (term -> factor .)
    EQUAL           reduce using rule 59 (term -> factor .)
    UNEQUAL         reduce using rule 59 (term -> factor .)
    LESS            reduce using rule 59 (term -> factor .)
    LESSEQ          reduce using rule 59 (term -> factor .)
    GREATER         reduce using rule 59 (term -> factor .)
    GREATEREQ       reduce using rule 59 (term -> factor .)
    ID              reduce using rule 59 (term -> factor .)
    OPPARENTH       reduce using rule 59 (term -> factor .)
    READ            reduce using rule 59 (term -> factor .)
    WRITE           reduce using rule 59 (term -> factor .)
    WHEN            reduce using rule 59 (term -> factor .)
    WHILE           reduce using rule 59 (term -> factor .)
    CLBRACE         reduce using rule 59 (term -> factor .)
    RETURN          reduce using rule 59 (term -> factor .)
    CLPARENTH       reduce using rule 59 (term -> factor .)
    AND             reduce using rule 59 (term -> factor .)
    OR              reduce using rule 59 (term -> factor .)


state 93

    (71) oprnd -> FALSE .

    AND             reduce using rule 71 (oprnd -> FALSE .)
    OR              reduce using rule 71 (oprnd -> FALSE .)
    ID              reduce using rule 71 (oprnd -> FALSE .)
    OPPARENTH       reduce using rule 71 (oprnd -> FALSE .)
    READ            reduce using rule 71 (oprnd -> FALSE .)
    WRITE           reduce using rule 71 (oprnd -> FALSE .)
    WHEN            reduce using rule 71 (oprnd -> FALSE .)
    WHILE           reduce using rule 71 (oprnd -> FALSE .)
    CLBRACE         reduce using rule 71 (oprnd -> FALSE .)
    RETURN          reduce using rule 71 (oprnd -> FALSE .)
    CLPARENTH       reduce using rule 71 (oprnd -> FALSE .)


state 94

    (72) oprnd -> TRUE .

    AND             reduce using rule 72 (oprnd -> TRUE .)
    OR              reduce using rule 72 (oprnd -> TRUE .)
    ID              reduce using rule 72 (oprnd -> TRUE .)
    OPPARENTH       reduce using rule 72 (oprnd -> TRUE .)
    READ            reduce using rule 72 (oprnd -> TRUE .)
    WRITE           reduce using rule 72 (oprnd -> TRUE .)
    WHEN            reduce using rule 72 (oprnd -> TRUE .)
    WHILE           reduce using rule 72 (oprnd -> TRUE .)
    CLBRACE         reduce using rule 72 (oprnd -> TRUE .)
    RETURN          reduce using rule 72 (oprnd -> TRUE .)
    CLPARENTH       reduce using rule 72 (oprnd -> TRUE .)


state 95

    (73) oprnd -> relac .

    AND             reduce using rule 73 (oprnd -> relac .)
    OR              reduce using rule 73 (oprnd -> relac .)
    ID              reduce using rule 73 (oprnd -> relac .)
    OPPARENTH       reduce using rule 73 (oprnd -> relac .)
    READ            reduce using rule 73 (oprnd -> relac .)
    WRITE           reduce using rule 73 (oprnd -> relac .)
    WHEN            reduce using rule 73 (oprnd -> relac .)
    WHILE           reduce using rule 73 (oprnd -> relac .)
    CLBRACE         reduce using rule 73 (oprnd -> relac .)
    RETURN          reduce using rule 73 (oprnd -> relac .)
    CLPARENTH       reduce using rule 73 (oprnd -> relac .)


state 96

    (63) factor -> CONST_INT .

    TIMES           reduce using rule 63 (factor -> CONST_INT .)
    DIVIDE          reduce using rule 63 (factor -> CONST_INT .)
    PLUS            reduce using rule 63 (factor -> CONST_INT .)
    MINUS           reduce using rule 63 (factor -> CONST_INT .)
    EQUAL           reduce using rule 63 (factor -> CONST_INT .)
    UNEQUAL         reduce using rule 63 (factor -> CONST_INT .)
    LESS            reduce using rule 63 (factor -> CONST_INT .)
    LESSEQ          reduce using rule 63 (factor -> CONST_INT .)
    GREATER         reduce using rule 63 (factor -> CONST_INT .)
    GREATEREQ       reduce using rule 63 (factor -> CONST_INT .)
    ID              reduce using rule 63 (factor -> CONST_INT .)
    OPPARENTH       reduce using rule 63 (factor -> CONST_INT .)
    READ            reduce using rule 63 (factor -> CONST_INT .)
    WRITE           reduce using rule 63 (factor -> CONST_INT .)
    WHEN            reduce using rule 63 (factor -> CONST_INT .)
    WHILE           reduce using rule 63 (factor -> CONST_INT .)
    CLBRACE         reduce using rule 63 (factor -> CONST_INT .)
    RETURN          reduce using rule 63 (factor -> CONST_INT .)
    CLPARENTH       reduce using rule 63 (factor -> CONST_INT .)
    AND             reduce using rule 63 (factor -> CONST_INT .)
    OR              reduce using rule 63 (factor -> CONST_INT .)


state 97

    (64) factor -> CONST_FLOAT .

    TIMES           reduce using rule 64 (factor -> CONST_FLOAT .)
    DIVIDE          reduce using rule 64 (factor -> CONST_FLOAT .)
    PLUS            reduce using rule 64 (factor -> CONST_FLOAT .)
    MINUS           reduce using rule 64 (factor -> CONST_FLOAT .)
    EQUAL           reduce using rule 64 (factor -> CONST_FLOAT .)
    UNEQUAL         reduce using rule 64 (factor -> CONST_FLOAT .)
    LESS            reduce using rule 64 (factor -> CONST_FLOAT .)
    LESSEQ          reduce using rule 64 (factor -> CONST_FLOAT .)
    GREATER         reduce using rule 64 (factor -> CONST_FLOAT .)
    GREATEREQ       reduce using rule 64 (factor -> CONST_FLOAT .)
    ID              reduce using rule 64 (factor -> CONST_FLOAT .)
    OPPARENTH       reduce using rule 64 (factor -> CONST_FLOAT .)
    READ            reduce using rule 64 (factor -> CONST_FLOAT .)
    WRITE           reduce using rule 64 (factor -> CONST_FLOAT .)
    WHEN            reduce using rule 64 (factor -> CONST_FLOAT .)
    WHILE           reduce using rule 64 (factor -> CONST_FLOAT .)
    CLBRACE         reduce using rule 64 (factor -> CONST_FLOAT .)
    RETURN          reduce using rule 64 (factor -> CONST_FLOAT .)
    CLPARENTH       reduce using rule 64 (factor -> CONST_FLOAT .)
    AND             reduce using rule 64 (factor -> CONST_FLOAT .)
    OR              reduce using rule 64 (factor -> CONST_FLOAT .)


state 98

    (96) asign -> ID dims ASGNMNT . expr
    (97) asign -> ID dims ASGNMNT . CONST_STRING
    (98) asign -> ID dims ASGNMNT . ID OPPARENTH CLPARENTH
    (99) asign -> ID dims ASGNMNT . ID OPPARENTH args CLPARENTH
    (100) asign -> ID dims ASGNMNT . lectura
    (69) expr -> . aritm
    (70) expr -> . logic
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 135
    ID              shift and go to state 133
    READ            shift and go to state 47
    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    expr                           shift and go to state 134
    lectura                        shift and go to state 136
    aritm                          shift and go to state 87
    logic                          shift and go to state 88
    term                           shift and go to state 89
    oprnd                          shift and go to state 90
    factor                         shift and go to state 92
    relac                          shift and go to state 95

state 99

    (85) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    OPPARENTH       reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 85 (lectura -> READ OPPARENTH CLPARENTH .)


state 100

    (86) escritura -> WRITE OPPARENTH ID . CLPARENTH
    (87) escritura -> WRITE OPPARENTH ID . dims CLPARENTH
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLPARENTH       shift and go to state 137
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 138

state 101

    (88) escritura -> WRITE OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 139


state 102

    (22) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 140


state 103

    (75) relac -> aritm . EQUAL aritm
    (76) relac -> aritm . UNEQUAL aritm
    (77) relac -> aritm . LESS aritm
    (78) relac -> aritm . LESSEQ aritm
    (79) relac -> aritm . GREATER aritm
    (80) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 120
    UNEQUAL         shift and go to state 121
    LESS            shift and go to state 122
    LESSEQ          shift and go to state 123
    GREATER         shift and go to state 124
    GREATEREQ       shift and go to state 125


state 104

    (61) factor -> ID .
    (62) factor -> ID . dims
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    TIMES           reduce using rule 61 (factor -> ID .)
    DIVIDE          reduce using rule 61 (factor -> ID .)
    PLUS            reduce using rule 61 (factor -> ID .)
    MINUS           reduce using rule 61 (factor -> ID .)
    EQUAL           reduce using rule 61 (factor -> ID .)
    UNEQUAL         reduce using rule 61 (factor -> ID .)
    LESS            reduce using rule 61 (factor -> ID .)
    LESSEQ          reduce using rule 61 (factor -> ID .)
    GREATER         reduce using rule 61 (factor -> ID .)
    GREATEREQ       reduce using rule 61 (factor -> ID .)
    CLPARENTH       reduce using rule 61 (factor -> ID .)
    AND             reduce using rule 61 (factor -> ID .)
    OR              reduce using rule 61 (factor -> ID .)
    ID              reduce using rule 61 (factor -> ID .)
    OPPARENTH       reduce using rule 61 (factor -> ID .)
    READ            reduce using rule 61 (factor -> ID .)
    WRITE           reduce using rule 61 (factor -> ID .)
    WHEN            reduce using rule 61 (factor -> ID .)
    WHILE           reduce using rule 61 (factor -> ID .)
    CLBRACE         reduce using rule 61 (factor -> ID .)
    RETURN          reduce using rule 61 (factor -> ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 116

state 105

    (21) ciclo -> WHILE OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 141


state 106

    (17) dims -> OPBRACKET CONST_INT CLBRACKET .
    (18) dims -> OPBRACKET CONST_INT CLBRACKET . OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    MAIN            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    FUNC            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    RETURN          reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    ID              reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    OPPARENTH       reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    READ            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    WRITE           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    WHEN            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    WHILE           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    ASGNMNT         reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    COMMA           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    CLPARENTH       reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    TIMES           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    DIVIDE          reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    PLUS            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    MINUS           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    EQUAL           reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    UNEQUAL         reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    LESS            reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    LESSEQ          reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    GREATER         reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    GREATEREQ       reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    CLBRACE         reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    AND             reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    OR              reduce using rule 17 (dims -> OPBRACKET CONST_INT CLBRACKET .)
    OPBRACKET       shift and go to state 142


state 107

    (42) param -> ID COLON var_typ dims .

    ID              reduce using rule 42 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 42 (param -> ID COLON var_typ dims .)


state 108

    (19) func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 143


state 109

    (24) func_cont -> var_list . estat_list RETURN ID dims
    (25) func_cont -> var_list . estat_list RETURN ID
    (27) func_cont -> var_list . RETURN ID dims
    (29) func_cont -> var_list . RETURN ID
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    RETURN          shift and go to state 145
    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat_list                     shift and go to state 144
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 110

    (26) func_cont -> estat_list . RETURN ID dims
    (28) func_cont -> estat_list . RETURN ID

    RETURN          shift and go to state 146


state 111

    (30) func_cont -> RETURN . ID dims
    (31) func_cont -> RETURN . ID

    ID              shift and go to state 147


state 112

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE . func_cont CLBRACE
    (24) func_cont -> . var_list estat_list RETURN ID dims
    (25) func_cont -> . var_list estat_list RETURN ID
    (26) func_cont -> . estat_list RETURN ID dims
    (27) func_cont -> . var_list RETURN ID dims
    (28) func_cont -> . estat_list RETURN ID
    (29) func_cont -> . var_list RETURN ID
    (30) func_cont -> . RETURN ID dims
    (31) func_cont -> . RETURN ID
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    RETURN          shift and go to state 111
    VAR             shift and go to state 10
    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    func_cont                      shift and go to state 148
    var_list                       shift and go to state 109
    estat_list                     shift and go to state 110
    variable                       shift and go to state 7
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 113

    (81) args -> ID dims COMMA . args
    (81) args -> . ID dims COMMA args
    (82) args -> . ID COMMA args
    (83) args -> . ID dims
    (84) args -> . ID

    ID              shift and go to state 65

    args                           shift and go to state 149

state 114

    (82) args -> ID COMMA args .

    CLPARENTH       reduce using rule 82 (args -> ID COMMA args .)


state 115

    (93) asign -> ID ASGNMNT ID OPPARENTH . CLPARENTH
    (94) asign -> ID ASGNMNT ID OPPARENTH . args CLPARENTH
    (81) args -> . ID dims COMMA args
    (82) args -> . ID COMMA args
    (83) args -> . ID dims
    (84) args -> . ID

    CLPARENTH       shift and go to state 150
    ID              shift and go to state 65

    args                           shift and go to state 151

state 116

    (62) factor -> ID dims .

    TIMES           reduce using rule 62 (factor -> ID dims .)
    DIVIDE          reduce using rule 62 (factor -> ID dims .)
    PLUS            reduce using rule 62 (factor -> ID dims .)
    MINUS           reduce using rule 62 (factor -> ID dims .)
    EQUAL           reduce using rule 62 (factor -> ID dims .)
    UNEQUAL         reduce using rule 62 (factor -> ID dims .)
    LESS            reduce using rule 62 (factor -> ID dims .)
    LESSEQ          reduce using rule 62 (factor -> ID dims .)
    GREATER         reduce using rule 62 (factor -> ID dims .)
    GREATEREQ       reduce using rule 62 (factor -> ID dims .)
    ID              reduce using rule 62 (factor -> ID dims .)
    OPPARENTH       reduce using rule 62 (factor -> ID dims .)
    READ            reduce using rule 62 (factor -> ID dims .)
    WRITE           reduce using rule 62 (factor -> ID dims .)
    WHEN            reduce using rule 62 (factor -> ID dims .)
    WHILE           reduce using rule 62 (factor -> ID dims .)
    CLBRACE         reduce using rule 62 (factor -> ID dims .)
    RETURN          reduce using rule 62 (factor -> ID dims .)
    CLPARENTH       reduce using rule 62 (factor -> ID dims .)
    AND             reduce using rule 62 (factor -> ID dims .)
    OR              reduce using rule 62 (factor -> ID dims .)


state 117

    (74) oprnd -> OPPARENTH logic . CLPARENTH

    CLPARENTH       shift and go to state 152


state 118

    (60) factor -> OPPARENTH aritm . CLPARENTH
    (75) relac -> aritm . EQUAL aritm
    (76) relac -> aritm . UNEQUAL aritm
    (77) relac -> aritm . LESS aritm
    (78) relac -> aritm . LESSEQ aritm
    (79) relac -> aritm . GREATER aritm
    (80) relac -> aritm . GREATEREQ aritm

    CLPARENTH       shift and go to state 153
    EQUAL           shift and go to state 120
    UNEQUAL         shift and go to state 121
    LESS            shift and go to state 122
    LESSEQ          shift and go to state 123
    GREATER         shift and go to state 124
    GREATEREQ       shift and go to state 125


state 119

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (40) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 154
    CONST_STRING    shift and go to state 155


state 120

    (75) relac -> aritm EQUAL . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 156
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 121

    (76) relac -> aritm UNEQUAL . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 158
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 122

    (77) relac -> aritm LESS . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 159
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 123

    (78) relac -> aritm LESSEQ . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 160
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 124

    (79) relac -> aritm GREATER . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 161
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 125

    (80) relac -> aritm GREATEREQ . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 162
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 126

    (54) aritm -> term PLUS . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    term                           shift and go to state 89
    aritm                          shift and go to state 163
    factor                         shift and go to state 92

state 127

    (55) aritm -> term MINUS . aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    term                           shift and go to state 89
    aritm                          shift and go to state 164
    factor                         shift and go to state 92

state 128

    (65) logic -> oprnd AND . logic
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    oprnd                          shift and go to state 90
    logic                          shift and go to state 165
    relac                          shift and go to state 95
    aritm                          shift and go to state 103
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 129

    (66) logic -> oprnd OR . logic
    (65) logic -> . oprnd AND logic
    (66) logic -> . oprnd OR logic
    (67) logic -> . NOT oprnd
    (68) logic -> . oprnd
    (71) oprnd -> . FALSE
    (72) oprnd -> . TRUE
    (73) oprnd -> . relac
    (74) oprnd -> . OPPARENTH logic CLPARENTH
    (75) relac -> . aritm EQUAL aritm
    (76) relac -> . aritm UNEQUAL aritm
    (77) relac -> . aritm LESS aritm
    (78) relac -> . aritm LESSEQ aritm
    (79) relac -> . aritm GREATER aritm
    (80) relac -> . aritm GREATEREQ aritm
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 93
    TRUE            shift and go to state 94
    OPPARENTH       shift and go to state 84
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    oprnd                          shift and go to state 90
    logic                          shift and go to state 166
    relac                          shift and go to state 95
    aritm                          shift and go to state 103
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 130

    (67) logic -> NOT oprnd .

    ID              reduce using rule 67 (logic -> NOT oprnd .)
    OPPARENTH       reduce using rule 67 (logic -> NOT oprnd .)
    READ            reduce using rule 67 (logic -> NOT oprnd .)
    WRITE           reduce using rule 67 (logic -> NOT oprnd .)
    WHEN            reduce using rule 67 (logic -> NOT oprnd .)
    WHILE           reduce using rule 67 (logic -> NOT oprnd .)
    CLBRACE         reduce using rule 67 (logic -> NOT oprnd .)
    RETURN          reduce using rule 67 (logic -> NOT oprnd .)
    CLPARENTH       reduce using rule 67 (logic -> NOT oprnd .)


state 131

    (57) term -> factor TIMES . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    factor                         shift and go to state 92
    term                           shift and go to state 167

state 132

    (58) term -> factor DIVIDE . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    factor                         shift and go to state 92
    term                           shift and go to state 168

state 133

    (98) asign -> ID dims ASGNMNT ID . OPPARENTH CLPARENTH
    (99) asign -> ID dims ASGNMNT ID . OPPARENTH args CLPARENTH
    (61) factor -> ID .
    (62) factor -> ID . dims
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

  ! shift/reduce conflict for OPPARENTH resolved as shift
    OPPARENTH       shift and go to state 169
    TIMES           reduce using rule 61 (factor -> ID .)
    DIVIDE          reduce using rule 61 (factor -> ID .)
    PLUS            reduce using rule 61 (factor -> ID .)
    MINUS           reduce using rule 61 (factor -> ID .)
    EQUAL           reduce using rule 61 (factor -> ID .)
    UNEQUAL         reduce using rule 61 (factor -> ID .)
    LESS            reduce using rule 61 (factor -> ID .)
    LESSEQ          reduce using rule 61 (factor -> ID .)
    GREATER         reduce using rule 61 (factor -> ID .)
    GREATEREQ       reduce using rule 61 (factor -> ID .)
    ID              reduce using rule 61 (factor -> ID .)
    READ            reduce using rule 61 (factor -> ID .)
    WRITE           reduce using rule 61 (factor -> ID .)
    WHEN            reduce using rule 61 (factor -> ID .)
    WHILE           reduce using rule 61 (factor -> ID .)
    CLBRACE         reduce using rule 61 (factor -> ID .)
    RETURN          reduce using rule 61 (factor -> ID .)
    OPBRACKET       shift and go to state 52

  ! OPPARENTH       [ reduce using rule 61 (factor -> ID .) ]

    dims                           shift and go to state 116

state 134

    (96) asign -> ID dims ASGNMNT expr .

    ID              reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    OPPARENTH       reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    READ            reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WRITE           reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WHEN            reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WHILE           reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    CLBRACE         reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    RETURN          reduce using rule 96 (asign -> ID dims ASGNMNT expr .)


state 135

    (97) asign -> ID dims ASGNMNT CONST_STRING .

    ID              reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    OPPARENTH       reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    READ            reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)


state 136

    (100) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    OPPARENTH       reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 100 (asign -> ID dims ASGNMNT lectura .)


state 137

    (86) escritura -> WRITE OPPARENTH ID CLPARENTH .

    ID              reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    OPPARENTH       reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 86 (escritura -> WRITE OPPARENTH ID CLPARENTH .)


state 138

    (87) escritura -> WRITE OPPARENTH ID dims . CLPARENTH

    CLPARENTH       shift and go to state 170


state 139

    (88) escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    OPPARENTH       reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 88 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)


state 140

    (22) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    THEN            shift and go to state 171


state 141

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE

    THEN            shift and go to state 172


state 142

    (18) dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET . CONST_INT CLBRACKET

    CONST_INT       shift and go to state 173


state 143

    (19) func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 19 (func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 19 (func -> FUNC ID OPPARENTH CLPARENTH func_typ OPBRACE func_cont CLBRACE .)


state 144

    (24) func_cont -> var_list estat_list . RETURN ID dims
    (25) func_cont -> var_list estat_list . RETURN ID

    RETURN          shift and go to state 174


state 145

    (27) func_cont -> var_list RETURN . ID dims
    (29) func_cont -> var_list RETURN . ID

    ID              shift and go to state 175


state 146

    (26) func_cont -> estat_list RETURN . ID dims
    (28) func_cont -> estat_list RETURN . ID

    ID              shift and go to state 176


state 147

    (30) func_cont -> RETURN ID . dims
    (31) func_cont -> RETURN ID .
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 31 (func_cont -> RETURN ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 177

state 148

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 178


state 149

    (81) args -> ID dims COMMA args .

    CLPARENTH       reduce using rule 81 (args -> ID dims COMMA args .)


state 150

    (93) asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .

    ID              reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    OPPARENTH       reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)


state 151

    (94) asign -> ID ASGNMNT ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 179


state 152

    (74) oprnd -> OPPARENTH logic CLPARENTH .

    AND             reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    OR              reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    ID              reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    OPPARENTH       reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    READ            reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    WRITE           reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHEN            reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHILE           reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLBRACE         reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    RETURN          reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLPARENTH       reduce using rule 74 (oprnd -> OPPARENTH logic CLPARENTH .)


state 153

    (60) factor -> OPPARENTH aritm CLPARENTH .

    TIMES           reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    DIVIDE          reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    PLUS            reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    MINUS           reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    EQUAL           reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    UNEQUAL         reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    LESS            reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    LESSEQ          reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATER         reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATEREQ       reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    ID              reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    OPPARENTH       reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    CLPARENTH       reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    AND             reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)
    OR              reduce using rule 60 (factor -> OPPARENTH aritm CLPARENTH .)


state 154

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 180


state 155

    (40) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 181


state 156

    (75) relac -> aritm EQUAL aritm .

    AND             reduce using rule 75 (relac -> aritm EQUAL aritm .)
    OR              reduce using rule 75 (relac -> aritm EQUAL aritm .)
    ID              reduce using rule 75 (relac -> aritm EQUAL aritm .)
    OPPARENTH       reduce using rule 75 (relac -> aritm EQUAL aritm .)
    READ            reduce using rule 75 (relac -> aritm EQUAL aritm .)
    WRITE           reduce using rule 75 (relac -> aritm EQUAL aritm .)
    WHEN            reduce using rule 75 (relac -> aritm EQUAL aritm .)
    WHILE           reduce using rule 75 (relac -> aritm EQUAL aritm .)
    CLBRACE         reduce using rule 75 (relac -> aritm EQUAL aritm .)
    RETURN          reduce using rule 75 (relac -> aritm EQUAL aritm .)
    CLPARENTH       reduce using rule 75 (relac -> aritm EQUAL aritm .)


state 157

    (60) factor -> OPPARENTH . aritm CLPARENTH
    (54) aritm -> . term PLUS aritm
    (55) aritm -> . term MINUS aritm
    (56) aritm -> . term
    (57) term -> . factor TIMES term
    (58) term -> . factor DIVIDE term
    (59) term -> . factor
    (60) factor -> . OPPARENTH aritm CLPARENTH
    (61) factor -> . ID
    (62) factor -> . ID dims
    (63) factor -> . CONST_INT
    (64) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 157
    ID              shift and go to state 104
    CONST_INT       shift and go to state 96
    CONST_FLOAT     shift and go to state 97

    aritm                          shift and go to state 182
    term                           shift and go to state 89
    factor                         shift and go to state 92

state 158

    (76) relac -> aritm UNEQUAL aritm .

    AND             reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    OR              reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    ID              reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    OPPARENTH       reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    READ            reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    WRITE           reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    WHEN            reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    WHILE           reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    CLBRACE         reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    RETURN          reduce using rule 76 (relac -> aritm UNEQUAL aritm .)
    CLPARENTH       reduce using rule 76 (relac -> aritm UNEQUAL aritm .)


state 159

    (77) relac -> aritm LESS aritm .

    AND             reduce using rule 77 (relac -> aritm LESS aritm .)
    OR              reduce using rule 77 (relac -> aritm LESS aritm .)
    ID              reduce using rule 77 (relac -> aritm LESS aritm .)
    OPPARENTH       reduce using rule 77 (relac -> aritm LESS aritm .)
    READ            reduce using rule 77 (relac -> aritm LESS aritm .)
    WRITE           reduce using rule 77 (relac -> aritm LESS aritm .)
    WHEN            reduce using rule 77 (relac -> aritm LESS aritm .)
    WHILE           reduce using rule 77 (relac -> aritm LESS aritm .)
    CLBRACE         reduce using rule 77 (relac -> aritm LESS aritm .)
    RETURN          reduce using rule 77 (relac -> aritm LESS aritm .)
    CLPARENTH       reduce using rule 77 (relac -> aritm LESS aritm .)


state 160

    (78) relac -> aritm LESSEQ aritm .

    AND             reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    OR              reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    ID              reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    OPPARENTH       reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    READ            reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    WRITE           reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    WHEN            reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    WHILE           reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    CLBRACE         reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    RETURN          reduce using rule 78 (relac -> aritm LESSEQ aritm .)
    CLPARENTH       reduce using rule 78 (relac -> aritm LESSEQ aritm .)


state 161

    (79) relac -> aritm GREATER aritm .

    AND             reduce using rule 79 (relac -> aritm GREATER aritm .)
    OR              reduce using rule 79 (relac -> aritm GREATER aritm .)
    ID              reduce using rule 79 (relac -> aritm GREATER aritm .)
    OPPARENTH       reduce using rule 79 (relac -> aritm GREATER aritm .)
    READ            reduce using rule 79 (relac -> aritm GREATER aritm .)
    WRITE           reduce using rule 79 (relac -> aritm GREATER aritm .)
    WHEN            reduce using rule 79 (relac -> aritm GREATER aritm .)
    WHILE           reduce using rule 79 (relac -> aritm GREATER aritm .)
    CLBRACE         reduce using rule 79 (relac -> aritm GREATER aritm .)
    RETURN          reduce using rule 79 (relac -> aritm GREATER aritm .)
    CLPARENTH       reduce using rule 79 (relac -> aritm GREATER aritm .)


state 162

    (80) relac -> aritm GREATEREQ aritm .

    AND             reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    OR              reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    ID              reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    OPPARENTH       reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    READ            reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    WRITE           reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    WHEN            reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    WHILE           reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    CLBRACE         reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    RETURN          reduce using rule 80 (relac -> aritm GREATEREQ aritm .)
    CLPARENTH       reduce using rule 80 (relac -> aritm GREATEREQ aritm .)


state 163

    (54) aritm -> term PLUS aritm .

    EQUAL           reduce using rule 54 (aritm -> term PLUS aritm .)
    UNEQUAL         reduce using rule 54 (aritm -> term PLUS aritm .)
    LESS            reduce using rule 54 (aritm -> term PLUS aritm .)
    LESSEQ          reduce using rule 54 (aritm -> term PLUS aritm .)
    GREATER         reduce using rule 54 (aritm -> term PLUS aritm .)
    GREATEREQ       reduce using rule 54 (aritm -> term PLUS aritm .)
    ID              reduce using rule 54 (aritm -> term PLUS aritm .)
    OPPARENTH       reduce using rule 54 (aritm -> term PLUS aritm .)
    READ            reduce using rule 54 (aritm -> term PLUS aritm .)
    WRITE           reduce using rule 54 (aritm -> term PLUS aritm .)
    WHEN            reduce using rule 54 (aritm -> term PLUS aritm .)
    WHILE           reduce using rule 54 (aritm -> term PLUS aritm .)
    CLBRACE         reduce using rule 54 (aritm -> term PLUS aritm .)
    RETURN          reduce using rule 54 (aritm -> term PLUS aritm .)
    CLPARENTH       reduce using rule 54 (aritm -> term PLUS aritm .)
    AND             reduce using rule 54 (aritm -> term PLUS aritm .)
    OR              reduce using rule 54 (aritm -> term PLUS aritm .)


state 164

    (55) aritm -> term MINUS aritm .

    EQUAL           reduce using rule 55 (aritm -> term MINUS aritm .)
    UNEQUAL         reduce using rule 55 (aritm -> term MINUS aritm .)
    LESS            reduce using rule 55 (aritm -> term MINUS aritm .)
    LESSEQ          reduce using rule 55 (aritm -> term MINUS aritm .)
    GREATER         reduce using rule 55 (aritm -> term MINUS aritm .)
    GREATEREQ       reduce using rule 55 (aritm -> term MINUS aritm .)
    ID              reduce using rule 55 (aritm -> term MINUS aritm .)
    OPPARENTH       reduce using rule 55 (aritm -> term MINUS aritm .)
    READ            reduce using rule 55 (aritm -> term MINUS aritm .)
    WRITE           reduce using rule 55 (aritm -> term MINUS aritm .)
    WHEN            reduce using rule 55 (aritm -> term MINUS aritm .)
    WHILE           reduce using rule 55 (aritm -> term MINUS aritm .)
    CLBRACE         reduce using rule 55 (aritm -> term MINUS aritm .)
    RETURN          reduce using rule 55 (aritm -> term MINUS aritm .)
    CLPARENTH       reduce using rule 55 (aritm -> term MINUS aritm .)
    AND             reduce using rule 55 (aritm -> term MINUS aritm .)
    OR              reduce using rule 55 (aritm -> term MINUS aritm .)


state 165

    (65) logic -> oprnd AND logic .

    ID              reduce using rule 65 (logic -> oprnd AND logic .)
    OPPARENTH       reduce using rule 65 (logic -> oprnd AND logic .)
    READ            reduce using rule 65 (logic -> oprnd AND logic .)
    WRITE           reduce using rule 65 (logic -> oprnd AND logic .)
    WHEN            reduce using rule 65 (logic -> oprnd AND logic .)
    WHILE           reduce using rule 65 (logic -> oprnd AND logic .)
    CLBRACE         reduce using rule 65 (logic -> oprnd AND logic .)
    RETURN          reduce using rule 65 (logic -> oprnd AND logic .)
    CLPARENTH       reduce using rule 65 (logic -> oprnd AND logic .)


state 166

    (66) logic -> oprnd OR logic .

    ID              reduce using rule 66 (logic -> oprnd OR logic .)
    OPPARENTH       reduce using rule 66 (logic -> oprnd OR logic .)
    READ            reduce using rule 66 (logic -> oprnd OR logic .)
    WRITE           reduce using rule 66 (logic -> oprnd OR logic .)
    WHEN            reduce using rule 66 (logic -> oprnd OR logic .)
    WHILE           reduce using rule 66 (logic -> oprnd OR logic .)
    CLBRACE         reduce using rule 66 (logic -> oprnd OR logic .)
    RETURN          reduce using rule 66 (logic -> oprnd OR logic .)
    CLPARENTH       reduce using rule 66 (logic -> oprnd OR logic .)


state 167

    (57) term -> factor TIMES term .

    PLUS            reduce using rule 57 (term -> factor TIMES term .)
    MINUS           reduce using rule 57 (term -> factor TIMES term .)
    EQUAL           reduce using rule 57 (term -> factor TIMES term .)
    UNEQUAL         reduce using rule 57 (term -> factor TIMES term .)
    LESS            reduce using rule 57 (term -> factor TIMES term .)
    LESSEQ          reduce using rule 57 (term -> factor TIMES term .)
    GREATER         reduce using rule 57 (term -> factor TIMES term .)
    GREATEREQ       reduce using rule 57 (term -> factor TIMES term .)
    ID              reduce using rule 57 (term -> factor TIMES term .)
    OPPARENTH       reduce using rule 57 (term -> factor TIMES term .)
    READ            reduce using rule 57 (term -> factor TIMES term .)
    WRITE           reduce using rule 57 (term -> factor TIMES term .)
    WHEN            reduce using rule 57 (term -> factor TIMES term .)
    WHILE           reduce using rule 57 (term -> factor TIMES term .)
    CLBRACE         reduce using rule 57 (term -> factor TIMES term .)
    RETURN          reduce using rule 57 (term -> factor TIMES term .)
    CLPARENTH       reduce using rule 57 (term -> factor TIMES term .)
    AND             reduce using rule 57 (term -> factor TIMES term .)
    OR              reduce using rule 57 (term -> factor TIMES term .)


state 168

    (58) term -> factor DIVIDE term .

    PLUS            reduce using rule 58 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 58 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 58 (term -> factor DIVIDE term .)
    UNEQUAL         reduce using rule 58 (term -> factor DIVIDE term .)
    LESS            reduce using rule 58 (term -> factor DIVIDE term .)
    LESSEQ          reduce using rule 58 (term -> factor DIVIDE term .)
    GREATER         reduce using rule 58 (term -> factor DIVIDE term .)
    GREATEREQ       reduce using rule 58 (term -> factor DIVIDE term .)
    ID              reduce using rule 58 (term -> factor DIVIDE term .)
    OPPARENTH       reduce using rule 58 (term -> factor DIVIDE term .)
    READ            reduce using rule 58 (term -> factor DIVIDE term .)
    WRITE           reduce using rule 58 (term -> factor DIVIDE term .)
    WHEN            reduce using rule 58 (term -> factor DIVIDE term .)
    WHILE           reduce using rule 58 (term -> factor DIVIDE term .)
    CLBRACE         reduce using rule 58 (term -> factor DIVIDE term .)
    RETURN          reduce using rule 58 (term -> factor DIVIDE term .)
    CLPARENTH       reduce using rule 58 (term -> factor DIVIDE term .)
    AND             reduce using rule 58 (term -> factor DIVIDE term .)
    OR              reduce using rule 58 (term -> factor DIVIDE term .)


state 169

    (98) asign -> ID dims ASGNMNT ID OPPARENTH . CLPARENTH
    (99) asign -> ID dims ASGNMNT ID OPPARENTH . args CLPARENTH
    (81) args -> . ID dims COMMA args
    (82) args -> . ID COMMA args
    (83) args -> . ID dims
    (84) args -> . ID

    CLPARENTH       shift and go to state 183
    ID              shift and go to state 65

    args                           shift and go to state 184

state 170

    (87) escritura -> WRITE OPPARENTH ID dims CLPARENTH .

    ID              reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    OPPARENTH       reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    READ            reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WRITE           reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHEN            reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHILE           reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    CLBRACE         reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    RETURN          reduce using rule 87 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)


state 171

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 185


state 172

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 186


state 173

    (18) dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT . CLBRACKET

    CLBRACKET       shift and go to state 187


state 174

    (24) func_cont -> var_list estat_list RETURN . ID dims
    (25) func_cont -> var_list estat_list RETURN . ID

    ID              shift and go to state 188


state 175

    (27) func_cont -> var_list RETURN ID . dims
    (29) func_cont -> var_list RETURN ID .
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 29 (func_cont -> var_list RETURN ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 189

state 176

    (26) func_cont -> estat_list RETURN ID . dims
    (28) func_cont -> estat_list RETURN ID .
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 28 (func_cont -> estat_list RETURN ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 190

state 177

    (30) func_cont -> RETURN ID dims .

    CLBRACE         reduce using rule 30 (func_cont -> RETURN ID dims .)


state 178

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 20 (func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 20 (func -> FUNC ID OPPARENTH param_list CLPARENTH func_typ OPBRACE func_cont CLBRACE .)


state 179

    (94) asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    OPPARENTH       reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)


state 180

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    OPPARENTH       reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 181

    (40) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    OPPARENTH       reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 40 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)


state 182

    (60) factor -> OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 153


state 183

    (98) asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .

    ID              reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    OPPARENTH       reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)


state 184

    (99) asign -> ID dims ASGNMNT ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 191


state 185

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat_list                     shift and go to state 192
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 186

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat_list                     shift and go to state 193
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 187

    (18) dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .

    VAR             reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MAIN            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    FUNC            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    RETURN          reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ID              reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    OPPARENTH       reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    READ            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WRITE           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHEN            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHILE           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ASGNMNT         reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    COMMA           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLPARENTH       reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    TIMES           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    DIVIDE          reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    PLUS            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MINUS           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    EQUAL           reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    UNEQUAL         reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESS            reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESSEQ          reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATER         reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATEREQ       reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACE         reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    AND             reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    OR              reduce using rule 18 (dims -> OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET .)


state 188

    (24) func_cont -> var_list estat_list RETURN ID . dims
    (25) func_cont -> var_list estat_list RETURN ID .
    (17) dims -> . OPBRACKET CONST_INT CLBRACKET
    (18) dims -> . OPBRACKET CONST_INT CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 25 (func_cont -> var_list estat_list RETURN ID .)
    OPBRACKET       shift and go to state 52

    dims                           shift and go to state 194

state 189

    (27) func_cont -> var_list RETURN ID dims .

    CLBRACE         reduce using rule 27 (func_cont -> var_list RETURN ID dims .)


state 190

    (26) func_cont -> estat_list RETURN ID dims .

    CLBRACE         reduce using rule 26 (func_cont -> estat_list RETURN ID dims .)


state 191

    (99) asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    OPPARENTH       reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)


state 192

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLBRACE         shift and go to state 195


state 193

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 196


state 194

    (24) func_cont -> var_list estat_list RETURN ID dims .

    CLBRACE         reduce using rule 24 (func_cont -> var_list estat_list RETURN ID dims .)


state 195

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE OPBRACE estat_list CLBRACE

    ID              reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    OPPARENTH       reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    ELSE            shift and go to state 197


state 196

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .

    ID              reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    OPPARENTH       reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)


state 197

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 198


state 198

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (32) estat -> . asign
    (33) estat -> . llam_void
    (34) estat -> . lectura
    (35) estat -> . escritura
    (36) estat -> . carga_dt
    (37) estat -> . decision
    (38) estat -> . ciclo
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (100) asign -> . ID dims ASGNMNT lectura
    (89) llam_void -> . OPPARENTH CLPARENTH
    (90) llam_void -> . OPPARENTH args CLPARENTH
    (85) lectura -> . READ OPPARENTH CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (87) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (88) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (40) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 46
    OPPARENTH       shift and go to state 36
    READ            shift and go to state 47
    WRITE           shift and go to state 48
    WHEN            shift and go to state 49
    WHILE           shift and go to state 50

    estat_list                     shift and go to state 199
    estat                          shift and go to state 38
    asign                          shift and go to state 39
    llam_void                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    carga_dt                       shift and go to state 43
    decision                       shift and go to state 44
    ciclo                          shift and go to state 45

state 199

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 200


state 200

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .

    ID              reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    OPPARENTH       reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPPARENTH in state 81 resolved as shift
WARNING: shift/reduce conflict for OPPARENTH in state 133 resolved as shift
