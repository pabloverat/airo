Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list func_list cuerpo
Rule 2     program -> encabezamiento var_list cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     calcula_globales -> <empty>
Rule 6     encabezamiento -> PROGRAM ID
Rule 7     context_to_global -> <empty>
Rule 8     cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
Rule 9     variable -> VAR ID COLON var_typ
Rule 10    variable -> VAR ID COLON var_typ declare_dims
Rule 11    var_list -> variable var_list
Rule 12    var_list -> variable
Rule 13    func_list -> func func_list
Rule 14    func_list -> func
Rule 15    estat_list -> estat estat_list
Rule 16    estat_list -> estat
Rule 17    param_list -> param COMMA param_list
Rule 18    param_list -> param
Rule 19    save_array_size -> <empty>
Rule 20    save_matrix_size -> <empty>
Rule 21    declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size
Rule 22    declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size
Rule 23    save_array_index -> <empty>
Rule 24    dims_q1 -> <empty>
Rule 25    dims_q2 -> <empty>
Rule 26    dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET
Rule 27    dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET
Rule 28    save_global_func -> <empty>
Rule 29    func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
Rule 30    func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
Rule 31    context_to_local -> <empty>
Rule 32    ciclo_q1 -> <empty>
Rule 33    ciclo_q2 -> <empty>
Rule 34    ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
Rule 35    conditional_q1 -> <empty>
Rule 36    conditional_q2 -> <empty>
Rule 37    conditional_q3 -> <empty>
Rule 38    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
Rule 39    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
Rule 40    save_return_value -> <empty>
Rule 41    func_cont -> var_list estat_list RETURN aritm save_return_value
Rule 42    func_cont -> estat_list RETURN aritm save_return_value
Rule 43    func_cont -> var_list estat_list
Rule 44    func_cont -> estat_list
Rule 45    estat -> asign
Rule 46    estat -> llam_void
Rule 47    estat -> lectura
Rule 48    estat -> escritura
Rule 49    estat -> carga_dt
Rule 50    estat -> decision
Rule 51    estat -> ciclo
Rule 52    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 53    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
Rule 54    save_dims_var -> <empty>
Rule 55    param -> ID COLON var_typ
Rule 56    param -> ID COLON var_typ save_dims_var dims
Rule 57    var_typ -> INT
Rule 58    var_typ -> FLOAT
Rule 59    var_typ -> CHAR
Rule 60    var_typ -> BOOL
Rule 61    var_typ -> FRAME
Rule 62    func_typ -> INT
Rule 63    func_typ -> FLOAT
Rule 64    func_typ -> CHAR
Rule 65    func_typ -> BOOL
Rule 66    func_typ -> FRAME
Rule 67    func_typ -> VOID
Rule 68    check_aritm_operation -> <empty>
Rule 69    check_aritm -> <empty>
Rule 70    aritm -> term check_aritm PLUS check_aritm_operation aritm
Rule 71    aritm -> term check_aritm MINUS check_aritm_operation aritm
Rule 72    aritm -> term check_aritm
Rule 73    check_term_operation -> <empty>
Rule 74    check_term -> <empty>
Rule 75    term -> factor check_term TIMES check_term_operation term
Rule 76    term -> factor check_term DIVIDE check_term_operation term
Rule 77    term -> factor check_term
Rule 78    factortype_const_int -> <empty>
Rule 79    factortype_const_float -> <empty>
Rule 80    factor_const -> CONST_INT factortype_const_int
Rule 81    factor_const -> CONST_FLOAT factortype_const_float
Rule 82    factor_var -> ID
Rule 83    factor_var -> ID save_dims_var dims
Rule 84    function_call_q1 -> <empty>
Rule 85    function_call_q2 -> <empty>
Rule 86    factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
Rule 87    factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
Rule 88    check_parenth -> <empty>
Rule 89    factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth
Rule 90    factor -> factor_function_call
Rule 91    factor -> factor_var
Rule 92    factor -> factor_const
Rule 93    relac -> aritm EQUAL aritm
Rule 94    relac -> aritm UNEQUAL aritm
Rule 95    relac -> aritm LESS aritm
Rule 96    relac -> aritm LESSEQ aritm
Rule 97    relac -> aritm GREATER aritm
Rule 98    relac -> aritm GREATEREQ aritm
Rule 99    arg_q1 -> <empty>
Rule 100   arg_q2 -> <empty>
Rule 101   args -> aritm arg_q1 COMMA arg_q2 args
Rule 102   args -> aritm arg_q1
Rule 103   lectura -> READ OPPARENTH CLPARENTH
Rule 104   escritura -> WRITE OPPARENTH aritm CLPARENTH
Rule 105   escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
Rule 106   llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
Rule 107   llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
Rule 108   add_string_const -> <empty>
Rule 109   asign -> ID ASGNMNT lectura
Rule 110   asign -> ID ASGNMNT aritm
Rule 111   asign -> ID ASGNMNT CONST_STRING add_string_const
Rule 112   asign -> ID save_dims_var dims ASGNMNT lectura
Rule 113   asign -> ID save_dims_var dims ASGNMNT aritm
Rule 114   asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const

Terminals, with rules where they appear

ASGNMNT              : 52 53 109 110 111 112 113 114
BOOL                 : 60 65
CHAR                 : 59 64
CLBRACE              : 8 29 30 34 38 39 39
CLBRACKET            : 21 22 22 26 27 27
CLPARENTH            : 8 29 30 34 38 39 52 53 86 87 89 103 104 105 106 107
COLON                : 9 10 21 22 22 29 30 55 56
COMMA                : 17 101
CONST_FLOAT          : 81
CONST_INT            : 21 21 22 22 22 22 80
CONST_STRING         : 53 105 111 114
DIVIDE               : 76
ELSE                 : 39
EQUAL                : 93
FLOAT                : 58 63
FRAME                : 61 66
FUNC                 : 29 30
GREATER              : 97
GREATEREQ            : 98
ID                   : 6 9 10 29 30 52 52 53 55 56 82 83 86 87 106 107 109 110 111 112 113 114
INT                  : 57 62
LESS                 : 95
LESSEQ               : 96
LOAD                 : 52 53
MAIN                 : 8
MINUS                : 71
OPBRACE              : 8 29 30 34 38 39 39
OPBRACKET            : 21 22 22 26 27 27
OPPARENTH            : 8 29 30 34 38 39 52 53 86 87 89 103 104 105 106 107
PLUS                 : 70
PROGRAM              : 6
READ                 : 103
RETURN               : 41 42
THEN                 : 34 38 39
TIMES                : 75
UNEQUAL              : 94
VAR                  : 9 10
VOID                 : 67
WHEN                 : 38 39
WHILE                : 34
WRITE                : 104 105
error                : 

Nonterminals, with rules where they appear

add_string_const     : 53 105 111 114
arg_q1               : 101 102
arg_q2               : 101
args                 : 87 101 107
aritm                : 26 27 27 41 42 70 71 89 93 93 94 94 95 95 96 96 97 97 98 98 101 102 104 110 113
asign                : 45
calcula_globales     : 8
carga_dt             : 49
check_aritm          : 70 71 72
check_aritm_operation : 70 71
check_parenth        : 89 89
check_term           : 75 76 77
check_term_operation : 75 76
ciclo                : 51
ciclo_q1             : 34
ciclo_q2             : 34
conditional_q1       : 34 38 39
conditional_q2       : 38 39
conditional_q3       : 39
context_to_global    : 8
context_to_local     : 29 30
cuerpo               : 1 2 3 4
decision             : 50
declare_dims         : 10
dims                 : 56 83 112 113 114
dims_q1              : 26 27
dims_q2              : 26 27 27
encabezamiento       : 1 2 3 4
escritura            : 48
estat                : 15 16
estat_list           : 8 15 34 38 39 39 41 42 43 44
factor               : 75 76 77
factor_const         : 92
factor_function_call : 90
factor_var           : 91
factortype_const_float : 81
factortype_const_int : 80
func                 : 13 14
func_cont            : 29 30
func_list            : 1 3 13
func_typ             : 29 30
function_call_q1     : 86 87 106 107
function_call_q2     : 86 87 106 107
lectura              : 47 109 112
llam_void            : 46
param                : 17 18
param_list           : 17 30
program              : 0
relac                : 34 38 39
save_array_index     : 
save_array_size      : 21
save_dims_var        : 56 83 112 113 114
save_global_func     : 29 30
save_matrix_size     : 22
save_return_value    : 41 42
term                 : 70 71 72 75 76
var_list             : 1 2 11 41 43
var_typ              : 9 10 55 56
variable             : 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list func_list cuerpo
    (2) program -> . encabezamiento var_list cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (6) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list func_list cuerpo
    (2) program -> encabezamiento . var_list cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (29) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (6) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . func_list cuerpo
    (2) program -> encabezamiento var_list . cuerpo
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (29) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 13
    cuerpo                         shift and go to state 14
    func                           shift and go to state 8

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 15

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (11) var_list -> variable . var_list
    (12) var_list -> variable .
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims

    MAIN            reduce using rule 12 (var_list -> variable .)
    FUNC            reduce using rule 12 (var_list -> variable .)
    ID              reduce using rule 12 (var_list -> variable .)
    READ            reduce using rule 12 (var_list -> variable .)
    WRITE           reduce using rule 12 (var_list -> variable .)
    WHEN            reduce using rule 12 (var_list -> variable .)
    WHILE           reduce using rule 12 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 16

state 8

    (13) func_list -> func . func_list
    (14) func_list -> func .
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (29) func -> . FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> . FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 14 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 17

state 9

    (8) cuerpo -> MAIN . context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (7) context_to_global -> .

    OPPARENTH       reduce using rule 7 (context_to_global -> .)

    context_to_global              shift and go to state 18

state 10

    (9) variable -> VAR . ID COLON var_typ
    (10) variable -> VAR . ID COLON var_typ declare_dims

    ID              shift and go to state 19


state 11

    (29) func -> FUNC . ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> FUNC . ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    ID              shift and go to state 20


state 12

    (6) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 6 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 21

state 14

    (2) program -> encabezamiento var_list cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list cuerpo .)


state 15

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 16

    (11) var_list -> variable var_list .

    MAIN            reduce using rule 11 (var_list -> variable var_list .)
    FUNC            reduce using rule 11 (var_list -> variable var_list .)
    ID              reduce using rule 11 (var_list -> variable var_list .)
    READ            reduce using rule 11 (var_list -> variable var_list .)
    WRITE           reduce using rule 11 (var_list -> variable var_list .)
    WHEN            reduce using rule 11 (var_list -> variable var_list .)
    WHILE           reduce using rule 11 (var_list -> variable var_list .)


state 17

    (13) func_list -> func func_list .

    MAIN            reduce using rule 13 (func_list -> func func_list .)


state 18

    (8) cuerpo -> MAIN context_to_global . OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    OPPARENTH       shift and go to state 22


state 19

    (9) variable -> VAR ID . COLON var_typ
    (10) variable -> VAR ID . COLON var_typ declare_dims

    COLON           shift and go to state 23


state 20

    (29) func -> FUNC ID . context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> FUNC ID . context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (31) context_to_local -> .

    OPPARENTH       reduce using rule 31 (context_to_local -> .)

    context_to_local               shift and go to state 24

state 21

    (1) program -> encabezamiento var_list func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list func_list cuerpo .)


state 22

    (8) cuerpo -> MAIN context_to_global OPPARENTH . CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    CLPARENTH       shift and go to state 25


state 23

    (9) variable -> VAR ID COLON . var_typ
    (10) variable -> VAR ID COLON . var_typ declare_dims
    (57) var_typ -> . INT
    (58) var_typ -> . FLOAT
    (59) var_typ -> . CHAR
    (60) var_typ -> . BOOL
    (61) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 26

state 24

    (29) func -> FUNC ID context_to_local . OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> FUNC ID context_to_local . OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 32


state 25

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH . OPBRACE estat_list calcula_globales CLBRACE

    OPBRACE         shift and go to state 33


state 26

    (9) variable -> VAR ID COLON var_typ .
    (10) variable -> VAR ID COLON var_typ . declare_dims
    (21) declare_dims -> . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    VAR             reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 35

    declare_dims                   shift and go to state 34

state 27

    (57) var_typ -> INT .

    OPBRACKET       reduce using rule 57 (var_typ -> INT .)
    VAR             reduce using rule 57 (var_typ -> INT .)
    MAIN            reduce using rule 57 (var_typ -> INT .)
    FUNC            reduce using rule 57 (var_typ -> INT .)
    ID              reduce using rule 57 (var_typ -> INT .)
    READ            reduce using rule 57 (var_typ -> INT .)
    WRITE           reduce using rule 57 (var_typ -> INT .)
    WHEN            reduce using rule 57 (var_typ -> INT .)
    WHILE           reduce using rule 57 (var_typ -> INT .)
    COMMA           reduce using rule 57 (var_typ -> INT .)
    CLPARENTH       reduce using rule 57 (var_typ -> INT .)


state 28

    (58) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 58 (var_typ -> FLOAT .)
    VAR             reduce using rule 58 (var_typ -> FLOAT .)
    MAIN            reduce using rule 58 (var_typ -> FLOAT .)
    FUNC            reduce using rule 58 (var_typ -> FLOAT .)
    ID              reduce using rule 58 (var_typ -> FLOAT .)
    READ            reduce using rule 58 (var_typ -> FLOAT .)
    WRITE           reduce using rule 58 (var_typ -> FLOAT .)
    WHEN            reduce using rule 58 (var_typ -> FLOAT .)
    WHILE           reduce using rule 58 (var_typ -> FLOAT .)
    COMMA           reduce using rule 58 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 58 (var_typ -> FLOAT .)


state 29

    (59) var_typ -> CHAR .

    OPBRACKET       reduce using rule 59 (var_typ -> CHAR .)
    VAR             reduce using rule 59 (var_typ -> CHAR .)
    MAIN            reduce using rule 59 (var_typ -> CHAR .)
    FUNC            reduce using rule 59 (var_typ -> CHAR .)
    ID              reduce using rule 59 (var_typ -> CHAR .)
    READ            reduce using rule 59 (var_typ -> CHAR .)
    WRITE           reduce using rule 59 (var_typ -> CHAR .)
    WHEN            reduce using rule 59 (var_typ -> CHAR .)
    WHILE           reduce using rule 59 (var_typ -> CHAR .)
    COMMA           reduce using rule 59 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 59 (var_typ -> CHAR .)


state 30

    (60) var_typ -> BOOL .

    OPBRACKET       reduce using rule 60 (var_typ -> BOOL .)
    VAR             reduce using rule 60 (var_typ -> BOOL .)
    MAIN            reduce using rule 60 (var_typ -> BOOL .)
    FUNC            reduce using rule 60 (var_typ -> BOOL .)
    ID              reduce using rule 60 (var_typ -> BOOL .)
    READ            reduce using rule 60 (var_typ -> BOOL .)
    WRITE           reduce using rule 60 (var_typ -> BOOL .)
    WHEN            reduce using rule 60 (var_typ -> BOOL .)
    WHILE           reduce using rule 60 (var_typ -> BOOL .)
    COMMA           reduce using rule 60 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 60 (var_typ -> BOOL .)


state 31

    (61) var_typ -> FRAME .

    OPBRACKET       reduce using rule 61 (var_typ -> FRAME .)
    VAR             reduce using rule 61 (var_typ -> FRAME .)
    MAIN            reduce using rule 61 (var_typ -> FRAME .)
    FUNC            reduce using rule 61 (var_typ -> FRAME .)
    ID              reduce using rule 61 (var_typ -> FRAME .)
    READ            reduce using rule 61 (var_typ -> FRAME .)
    WRITE           reduce using rule 61 (var_typ -> FRAME .)
    WHEN            reduce using rule 61 (var_typ -> FRAME .)
    WHILE           reduce using rule 61 (var_typ -> FRAME .)
    COMMA           reduce using rule 61 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 61 (var_typ -> FRAME .)


state 32

    (29) func -> FUNC ID context_to_local OPPARENTH . CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (30) func -> FUNC ID context_to_local OPPARENTH . param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (55) param -> . ID COLON var_typ
    (56) param -> . ID COLON var_typ save_dims_var dims

    CLPARENTH       shift and go to state 37
    ID              shift and go to state 36

    param_list                     shift and go to state 38
    param                          shift and go to state 39

state 33

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE . estat_list calcula_globales CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 40
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 34

    (10) variable -> VAR ID COLON var_typ declare_dims .

    VAR             reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    MAIN            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    FUNC            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    ID              reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    READ            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WRITE           reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WHEN            reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)
    WHILE           reduce using rule 10 (variable -> VAR ID COLON var_typ declare_dims .)


state 35

    (21) declare_dims -> OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 54


state 36

    (55) param -> ID . COLON var_typ
    (56) param -> ID . COLON var_typ save_dims_var dims

    COLON           shift and go to state 55


state 37

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH . COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    COLON           shift and go to state 56


state 38

    (30) func -> FUNC ID context_to_local OPPARENTH param_list . CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 57


state 39

    (17) param_list -> param . COMMA param_list
    (18) param_list -> param .

    COMMA           shift and go to state 58
    CLPARENTH       reduce using rule 18 (param_list -> param .)


state 40

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list . calcula_globales CLBRACE
    (5) calcula_globales -> .

    CLBRACE         reduce using rule 5 (calcula_globales -> .)

    calcula_globales               shift and go to state 59

state 41

    (15) estat_list -> estat . estat_list
    (16) estat_list -> estat .
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    CLBRACE         reduce using rule 16 (estat_list -> estat .)
    RETURN          reduce using rule 16 (estat_list -> estat .)
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat                          shift and go to state 41
    estat_list                     shift and go to state 60
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 42

    (45) estat -> asign .

    ID              reduce using rule 45 (estat -> asign .)
    READ            reduce using rule 45 (estat -> asign .)
    WRITE           reduce using rule 45 (estat -> asign .)
    WHEN            reduce using rule 45 (estat -> asign .)
    WHILE           reduce using rule 45 (estat -> asign .)
    CLBRACE         reduce using rule 45 (estat -> asign .)
    RETURN          reduce using rule 45 (estat -> asign .)


state 43

    (46) estat -> llam_void .

    ID              reduce using rule 46 (estat -> llam_void .)
    READ            reduce using rule 46 (estat -> llam_void .)
    WRITE           reduce using rule 46 (estat -> llam_void .)
    WHEN            reduce using rule 46 (estat -> llam_void .)
    WHILE           reduce using rule 46 (estat -> llam_void .)
    CLBRACE         reduce using rule 46 (estat -> llam_void .)
    RETURN          reduce using rule 46 (estat -> llam_void .)


state 44

    (47) estat -> lectura .

    ID              reduce using rule 47 (estat -> lectura .)
    READ            reduce using rule 47 (estat -> lectura .)
    WRITE           reduce using rule 47 (estat -> lectura .)
    WHEN            reduce using rule 47 (estat -> lectura .)
    WHILE           reduce using rule 47 (estat -> lectura .)
    CLBRACE         reduce using rule 47 (estat -> lectura .)
    RETURN          reduce using rule 47 (estat -> lectura .)


state 45

    (48) estat -> escritura .

    ID              reduce using rule 48 (estat -> escritura .)
    READ            reduce using rule 48 (estat -> escritura .)
    WRITE           reduce using rule 48 (estat -> escritura .)
    WHEN            reduce using rule 48 (estat -> escritura .)
    WHILE           reduce using rule 48 (estat -> escritura .)
    CLBRACE         reduce using rule 48 (estat -> escritura .)
    RETURN          reduce using rule 48 (estat -> escritura .)


state 46

    (49) estat -> carga_dt .

    ID              reduce using rule 49 (estat -> carga_dt .)
    READ            reduce using rule 49 (estat -> carga_dt .)
    WRITE           reduce using rule 49 (estat -> carga_dt .)
    WHEN            reduce using rule 49 (estat -> carga_dt .)
    WHILE           reduce using rule 49 (estat -> carga_dt .)
    CLBRACE         reduce using rule 49 (estat -> carga_dt .)
    RETURN          reduce using rule 49 (estat -> carga_dt .)


state 47

    (50) estat -> decision .

    ID              reduce using rule 50 (estat -> decision .)
    READ            reduce using rule 50 (estat -> decision .)
    WRITE           reduce using rule 50 (estat -> decision .)
    WHEN            reduce using rule 50 (estat -> decision .)
    WHILE           reduce using rule 50 (estat -> decision .)
    CLBRACE         reduce using rule 50 (estat -> decision .)
    RETURN          reduce using rule 50 (estat -> decision .)


state 48

    (51) estat -> ciclo .

    ID              reduce using rule 51 (estat -> ciclo .)
    READ            reduce using rule 51 (estat -> ciclo .)
    WRITE           reduce using rule 51 (estat -> ciclo .)
    WHEN            reduce using rule 51 (estat -> ciclo .)
    WHILE           reduce using rule 51 (estat -> ciclo .)
    CLBRACE         reduce using rule 51 (estat -> ciclo .)
    RETURN          reduce using rule 51 (estat -> ciclo .)


state 49

    (109) asign -> ID . ASGNMNT lectura
    (110) asign -> ID . ASGNMNT aritm
    (111) asign -> ID . ASGNMNT CONST_STRING add_string_const
    (112) asign -> ID . save_dims_var dims ASGNMNT lectura
    (113) asign -> ID . save_dims_var dims ASGNMNT aritm
    (114) asign -> ID . save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> ID . OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> ID . OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (52) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (54) save_dims_var -> .

    ASGNMNT         shift and go to state 61
    OPPARENTH       shift and go to state 63
    OPBRACKET       reduce using rule 54 (save_dims_var -> .)

    save_dims_var                  shift and go to state 62

state 50

    (103) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 64


state 51

    (104) escritura -> WRITE . OPPARENTH aritm CLPARENTH
    (105) escritura -> WRITE . OPPARENTH CONST_STRING add_string_const CLPARENTH

    OPPARENTH       shift and go to state 65


state 52

    (38) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPPARENTH       shift and go to state 66


state 53

    (34) ciclo -> WHILE . ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (32) ciclo_q1 -> .

    OPPARENTH       reduce using rule 32 (ciclo_q1 -> .)

    ciclo_q1                       shift and go to state 67

state 54

    (21) declare_dims -> OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    COLON           shift and go to state 68


state 55

    (55) param -> ID COLON . var_typ
    (56) param -> ID COLON . var_typ save_dims_var dims
    (57) var_typ -> . INT
    (58) var_typ -> . FLOAT
    (59) var_typ -> . CHAR
    (60) var_typ -> . BOOL
    (61) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 69

state 56

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON . func_typ save_global_func OPBRACE func_cont CLBRACE
    (62) func_typ -> . INT
    (63) func_typ -> . FLOAT
    (64) func_typ -> . CHAR
    (65) func_typ -> . BOOL
    (66) func_typ -> . FRAME
    (67) func_typ -> . VOID

    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    CHAR            shift and go to state 73
    BOOL            shift and go to state 74
    FRAME           shift and go to state 75
    VOID            shift and go to state 76

    func_typ                       shift and go to state 70

state 57

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH . COLON func_typ save_global_func OPBRACE func_cont CLBRACE

    COLON           shift and go to state 77


state 58

    (17) param_list -> param COMMA . param_list
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (55) param -> . ID COLON var_typ
    (56) param -> . ID COLON var_typ save_dims_var dims

    ID              shift and go to state 36

    param                          shift and go to state 39
    param_list                     shift and go to state 78

state 59

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales . CLBRACE

    CLBRACE         shift and go to state 79


state 60

    (15) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 15 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 15 (estat_list -> estat estat_list .)


state 61

    (109) asign -> ID ASGNMNT . lectura
    (110) asign -> ID ASGNMNT . aritm
    (111) asign -> ID ASGNMNT . CONST_STRING add_string_const
    (52) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 83
    LOAD            shift and go to state 84
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    lectura                        shift and go to state 81
    aritm                          shift and go to state 82
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 62

    (112) asign -> ID save_dims_var . dims ASGNMNT lectura
    (113) asign -> ID save_dims_var . dims ASGNMNT aritm
    (114) asign -> ID save_dims_var . dims ASGNMNT CONST_STRING add_string_const
    (26) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET
    (27) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET

    OPBRACKET       shift and go to state 94

    dims                           shift and go to state 93

state 63

    (106) llam_void -> ID OPPARENTH . function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> ID OPPARENTH . function_call_q1 args CLPARENTH function_call_q2
    (84) function_call_q1 -> .

    CLPARENTH       reduce using rule 84 (function_call_q1 -> .)
    OPPARENTH       reduce using rule 84 (function_call_q1 -> .)
    ID              reduce using rule 84 (function_call_q1 -> .)
    CONST_INT       reduce using rule 84 (function_call_q1 -> .)
    CONST_FLOAT     reduce using rule 84 (function_call_q1 -> .)

    function_call_q1               shift and go to state 95

state 64

    (103) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 96


state 65

    (104) escritura -> WRITE OPPARENTH . aritm CLPARENTH
    (105) escritura -> WRITE OPPARENTH . CONST_STRING add_string_const CLPARENTH
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 98
    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 97
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 66

    (38) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (93) relac -> . aritm EQUAL aritm
    (94) relac -> . aritm UNEQUAL aritm
    (95) relac -> . aritm LESS aritm
    (96) relac -> . aritm LESSEQ aritm
    (97) relac -> . aritm GREATER aritm
    (98) relac -> . aritm GREATEREQ aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    relac                          shift and go to state 99
    aritm                          shift and go to state 100
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 67

    (34) ciclo -> WHILE ciclo_q1 . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    OPPARENTH       shift and go to state 101


state 68

    (21) declare_dims -> OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 102


state 69

    (55) param -> ID COLON var_typ .
    (56) param -> ID COLON var_typ . save_dims_var dims
    (54) save_dims_var -> .

    COMMA           reduce using rule 55 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 55 (param -> ID COLON var_typ .)
    OPBRACKET       reduce using rule 54 (save_dims_var -> .)

    save_dims_var                  shift and go to state 103

state 70

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ . save_global_func OPBRACE func_cont CLBRACE
    (28) save_global_func -> .

    OPBRACE         reduce using rule 28 (save_global_func -> .)

    save_global_func               shift and go to state 104

state 71

    (62) func_typ -> INT .

    OPBRACE         reduce using rule 62 (func_typ -> INT .)


state 72

    (63) func_typ -> FLOAT .

    OPBRACE         reduce using rule 63 (func_typ -> FLOAT .)


state 73

    (64) func_typ -> CHAR .

    OPBRACE         reduce using rule 64 (func_typ -> CHAR .)


state 74

    (65) func_typ -> BOOL .

    OPBRACE         reduce using rule 65 (func_typ -> BOOL .)


state 75

    (66) func_typ -> FRAME .

    OPBRACE         reduce using rule 66 (func_typ -> FRAME .)


state 76

    (67) func_typ -> VOID .

    OPBRACE         reduce using rule 67 (func_typ -> VOID .)


state 77

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON . func_typ save_global_func OPBRACE func_cont CLBRACE
    (62) func_typ -> . INT
    (63) func_typ -> . FLOAT
    (64) func_typ -> . CHAR
    (65) func_typ -> . BOOL
    (66) func_typ -> . FRAME
    (67) func_typ -> . VOID

    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    CHAR            shift and go to state 73
    BOOL            shift and go to state 74
    FRAME           shift and go to state 75
    VOID            shift and go to state 76

    func_typ                       shift and go to state 105

state 78

    (17) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 17 (param_list -> param COMMA param_list .)


state 79

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .

    $end            reduce using rule 8 (cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .)


state 80

    (86) factor_function_call -> ID . OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> ID . OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> ID .
    (83) factor_var -> ID . save_dims_var dims
    (54) save_dims_var -> .

    OPPARENTH       shift and go to state 106
    TIMES           reduce using rule 82 (factor_var -> ID .)
    DIVIDE          reduce using rule 82 (factor_var -> ID .)
    PLUS            reduce using rule 82 (factor_var -> ID .)
    MINUS           reduce using rule 82 (factor_var -> ID .)
    ID              reduce using rule 82 (factor_var -> ID .)
    READ            reduce using rule 82 (factor_var -> ID .)
    WRITE           reduce using rule 82 (factor_var -> ID .)
    WHEN            reduce using rule 82 (factor_var -> ID .)
    WHILE           reduce using rule 82 (factor_var -> ID .)
    CLBRACE         reduce using rule 82 (factor_var -> ID .)
    RETURN          reduce using rule 82 (factor_var -> ID .)
    CLPARENTH       reduce using rule 82 (factor_var -> ID .)
    EQUAL           reduce using rule 82 (factor_var -> ID .)
    UNEQUAL         reduce using rule 82 (factor_var -> ID .)
    LESS            reduce using rule 82 (factor_var -> ID .)
    LESSEQ          reduce using rule 82 (factor_var -> ID .)
    GREATER         reduce using rule 82 (factor_var -> ID .)
    GREATEREQ       reduce using rule 82 (factor_var -> ID .)
    COMMA           reduce using rule 82 (factor_var -> ID .)
    CLBRACKET       reduce using rule 82 (factor_var -> ID .)
    OPBRACKET       reduce using rule 54 (save_dims_var -> .)

    save_dims_var                  shift and go to state 107

state 81

    (109) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 109 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 109 (asign -> ID ASGNMNT lectura .)


state 82

    (110) asign -> ID ASGNMNT aritm .

    ID              reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    READ            reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    WRITE           reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    WHEN            reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    WHILE           reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    CLBRACE         reduce using rule 110 (asign -> ID ASGNMNT aritm .)
    RETURN          reduce using rule 110 (asign -> ID ASGNMNT aritm .)


state 83

    (111) asign -> ID ASGNMNT CONST_STRING . add_string_const
    (108) add_string_const -> .

    ID              reduce using rule 108 (add_string_const -> .)
    READ            reduce using rule 108 (add_string_const -> .)
    WRITE           reduce using rule 108 (add_string_const -> .)
    WHEN            reduce using rule 108 (add_string_const -> .)
    WHILE           reduce using rule 108 (add_string_const -> .)
    CLBRACE         reduce using rule 108 (add_string_const -> .)
    RETURN          reduce using rule 108 (add_string_const -> .)

    add_string_const               shift and go to state 108

state 84

    (52) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (53) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING add_string_const CLPARENTH

    OPPARENTH       shift and go to state 109


state 85

    (89) factor -> OPPARENTH . check_parenth aritm CLPARENTH check_parenth
    (88) check_parenth -> .

    OPPARENTH       reduce using rule 88 (check_parenth -> .)
    ID              reduce using rule 88 (check_parenth -> .)
    CONST_INT       reduce using rule 88 (check_parenth -> .)
    CONST_FLOAT     reduce using rule 88 (check_parenth -> .)

    check_parenth                  shift and go to state 110

state 86

    (70) aritm -> term . check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> term . check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> term . check_aritm
    (69) check_aritm -> .

    PLUS            reduce using rule 69 (check_aritm -> .)
    MINUS           reduce using rule 69 (check_aritm -> .)
    ID              reduce using rule 69 (check_aritm -> .)
    READ            reduce using rule 69 (check_aritm -> .)
    WRITE           reduce using rule 69 (check_aritm -> .)
    WHEN            reduce using rule 69 (check_aritm -> .)
    WHILE           reduce using rule 69 (check_aritm -> .)
    CLBRACE         reduce using rule 69 (check_aritm -> .)
    RETURN          reduce using rule 69 (check_aritm -> .)
    CLPARENTH       reduce using rule 69 (check_aritm -> .)
    EQUAL           reduce using rule 69 (check_aritm -> .)
    UNEQUAL         reduce using rule 69 (check_aritm -> .)
    LESS            reduce using rule 69 (check_aritm -> .)
    LESSEQ          reduce using rule 69 (check_aritm -> .)
    GREATER         reduce using rule 69 (check_aritm -> .)
    GREATEREQ       reduce using rule 69 (check_aritm -> .)
    COMMA           reduce using rule 69 (check_aritm -> .)
    CLBRACKET       reduce using rule 69 (check_aritm -> .)

    check_aritm                    shift and go to state 111

state 87

    (75) term -> factor . check_term TIMES check_term_operation term
    (76) term -> factor . check_term DIVIDE check_term_operation term
    (77) term -> factor . check_term
    (74) check_term -> .

    TIMES           reduce using rule 74 (check_term -> .)
    DIVIDE          reduce using rule 74 (check_term -> .)
    PLUS            reduce using rule 74 (check_term -> .)
    MINUS           reduce using rule 74 (check_term -> .)
    ID              reduce using rule 74 (check_term -> .)
    READ            reduce using rule 74 (check_term -> .)
    WRITE           reduce using rule 74 (check_term -> .)
    WHEN            reduce using rule 74 (check_term -> .)
    WHILE           reduce using rule 74 (check_term -> .)
    CLBRACE         reduce using rule 74 (check_term -> .)
    RETURN          reduce using rule 74 (check_term -> .)
    CLPARENTH       reduce using rule 74 (check_term -> .)
    EQUAL           reduce using rule 74 (check_term -> .)
    UNEQUAL         reduce using rule 74 (check_term -> .)
    LESS            reduce using rule 74 (check_term -> .)
    LESSEQ          reduce using rule 74 (check_term -> .)
    GREATER         reduce using rule 74 (check_term -> .)
    GREATEREQ       reduce using rule 74 (check_term -> .)
    COMMA           reduce using rule 74 (check_term -> .)
    CLBRACKET       reduce using rule 74 (check_term -> .)

    check_term                     shift and go to state 112

state 88

    (90) factor -> factor_function_call .

    TIMES           reduce using rule 90 (factor -> factor_function_call .)
    DIVIDE          reduce using rule 90 (factor -> factor_function_call .)
    PLUS            reduce using rule 90 (factor -> factor_function_call .)
    MINUS           reduce using rule 90 (factor -> factor_function_call .)
    ID              reduce using rule 90 (factor -> factor_function_call .)
    READ            reduce using rule 90 (factor -> factor_function_call .)
    WRITE           reduce using rule 90 (factor -> factor_function_call .)
    WHEN            reduce using rule 90 (factor -> factor_function_call .)
    WHILE           reduce using rule 90 (factor -> factor_function_call .)
    CLBRACE         reduce using rule 90 (factor -> factor_function_call .)
    RETURN          reduce using rule 90 (factor -> factor_function_call .)
    CLPARENTH       reduce using rule 90 (factor -> factor_function_call .)
    EQUAL           reduce using rule 90 (factor -> factor_function_call .)
    UNEQUAL         reduce using rule 90 (factor -> factor_function_call .)
    LESS            reduce using rule 90 (factor -> factor_function_call .)
    LESSEQ          reduce using rule 90 (factor -> factor_function_call .)
    GREATER         reduce using rule 90 (factor -> factor_function_call .)
    GREATEREQ       reduce using rule 90 (factor -> factor_function_call .)
    COMMA           reduce using rule 90 (factor -> factor_function_call .)
    CLBRACKET       reduce using rule 90 (factor -> factor_function_call .)


state 89

    (91) factor -> factor_var .

    TIMES           reduce using rule 91 (factor -> factor_var .)
    DIVIDE          reduce using rule 91 (factor -> factor_var .)
    PLUS            reduce using rule 91 (factor -> factor_var .)
    MINUS           reduce using rule 91 (factor -> factor_var .)
    ID              reduce using rule 91 (factor -> factor_var .)
    READ            reduce using rule 91 (factor -> factor_var .)
    WRITE           reduce using rule 91 (factor -> factor_var .)
    WHEN            reduce using rule 91 (factor -> factor_var .)
    WHILE           reduce using rule 91 (factor -> factor_var .)
    CLBRACE         reduce using rule 91 (factor -> factor_var .)
    RETURN          reduce using rule 91 (factor -> factor_var .)
    CLPARENTH       reduce using rule 91 (factor -> factor_var .)
    EQUAL           reduce using rule 91 (factor -> factor_var .)
    UNEQUAL         reduce using rule 91 (factor -> factor_var .)
    LESS            reduce using rule 91 (factor -> factor_var .)
    LESSEQ          reduce using rule 91 (factor -> factor_var .)
    GREATER         reduce using rule 91 (factor -> factor_var .)
    GREATEREQ       reduce using rule 91 (factor -> factor_var .)
    COMMA           reduce using rule 91 (factor -> factor_var .)
    CLBRACKET       reduce using rule 91 (factor -> factor_var .)


state 90

    (92) factor -> factor_const .

    TIMES           reduce using rule 92 (factor -> factor_const .)
    DIVIDE          reduce using rule 92 (factor -> factor_const .)
    PLUS            reduce using rule 92 (factor -> factor_const .)
    MINUS           reduce using rule 92 (factor -> factor_const .)
    ID              reduce using rule 92 (factor -> factor_const .)
    READ            reduce using rule 92 (factor -> factor_const .)
    WRITE           reduce using rule 92 (factor -> factor_const .)
    WHEN            reduce using rule 92 (factor -> factor_const .)
    WHILE           reduce using rule 92 (factor -> factor_const .)
    CLBRACE         reduce using rule 92 (factor -> factor_const .)
    RETURN          reduce using rule 92 (factor -> factor_const .)
    CLPARENTH       reduce using rule 92 (factor -> factor_const .)
    EQUAL           reduce using rule 92 (factor -> factor_const .)
    UNEQUAL         reduce using rule 92 (factor -> factor_const .)
    LESS            reduce using rule 92 (factor -> factor_const .)
    LESSEQ          reduce using rule 92 (factor -> factor_const .)
    GREATER         reduce using rule 92 (factor -> factor_const .)
    GREATEREQ       reduce using rule 92 (factor -> factor_const .)
    COMMA           reduce using rule 92 (factor -> factor_const .)
    CLBRACKET       reduce using rule 92 (factor -> factor_const .)


state 91

    (80) factor_const -> CONST_INT . factortype_const_int
    (78) factortype_const_int -> .

    TIMES           reduce using rule 78 (factortype_const_int -> .)
    DIVIDE          reduce using rule 78 (factortype_const_int -> .)
    PLUS            reduce using rule 78 (factortype_const_int -> .)
    MINUS           reduce using rule 78 (factortype_const_int -> .)
    ID              reduce using rule 78 (factortype_const_int -> .)
    READ            reduce using rule 78 (factortype_const_int -> .)
    WRITE           reduce using rule 78 (factortype_const_int -> .)
    WHEN            reduce using rule 78 (factortype_const_int -> .)
    WHILE           reduce using rule 78 (factortype_const_int -> .)
    CLBRACE         reduce using rule 78 (factortype_const_int -> .)
    RETURN          reduce using rule 78 (factortype_const_int -> .)
    CLPARENTH       reduce using rule 78 (factortype_const_int -> .)
    EQUAL           reduce using rule 78 (factortype_const_int -> .)
    UNEQUAL         reduce using rule 78 (factortype_const_int -> .)
    LESS            reduce using rule 78 (factortype_const_int -> .)
    LESSEQ          reduce using rule 78 (factortype_const_int -> .)
    GREATER         reduce using rule 78 (factortype_const_int -> .)
    GREATEREQ       reduce using rule 78 (factortype_const_int -> .)
    COMMA           reduce using rule 78 (factortype_const_int -> .)
    CLBRACKET       reduce using rule 78 (factortype_const_int -> .)

    factortype_const_int           shift and go to state 113

state 92

    (81) factor_const -> CONST_FLOAT . factortype_const_float
    (79) factortype_const_float -> .

    TIMES           reduce using rule 79 (factortype_const_float -> .)
    DIVIDE          reduce using rule 79 (factortype_const_float -> .)
    PLUS            reduce using rule 79 (factortype_const_float -> .)
    MINUS           reduce using rule 79 (factortype_const_float -> .)
    ID              reduce using rule 79 (factortype_const_float -> .)
    READ            reduce using rule 79 (factortype_const_float -> .)
    WRITE           reduce using rule 79 (factortype_const_float -> .)
    WHEN            reduce using rule 79 (factortype_const_float -> .)
    WHILE           reduce using rule 79 (factortype_const_float -> .)
    CLBRACE         reduce using rule 79 (factortype_const_float -> .)
    RETURN          reduce using rule 79 (factortype_const_float -> .)
    CLPARENTH       reduce using rule 79 (factortype_const_float -> .)
    EQUAL           reduce using rule 79 (factortype_const_float -> .)
    UNEQUAL         reduce using rule 79 (factortype_const_float -> .)
    LESS            reduce using rule 79 (factortype_const_float -> .)
    LESSEQ          reduce using rule 79 (factortype_const_float -> .)
    GREATER         reduce using rule 79 (factortype_const_float -> .)
    GREATEREQ       reduce using rule 79 (factortype_const_float -> .)
    COMMA           reduce using rule 79 (factortype_const_float -> .)
    CLBRACKET       reduce using rule 79 (factortype_const_float -> .)

    factortype_const_float         shift and go to state 114

state 93

    (112) asign -> ID save_dims_var dims . ASGNMNT lectura
    (113) asign -> ID save_dims_var dims . ASGNMNT aritm
    (114) asign -> ID save_dims_var dims . ASGNMNT CONST_STRING add_string_const

    ASGNMNT         shift and go to state 115


state 94

    (26) dims -> OPBRACKET . dims_q1 aritm dims_q2 CLBRACKET
    (27) dims -> OPBRACKET . dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET
    (24) dims_q1 -> .

    OPPARENTH       reduce using rule 24 (dims_q1 -> .)
    ID              reduce using rule 24 (dims_q1 -> .)
    CONST_INT       reduce using rule 24 (dims_q1 -> .)
    CONST_FLOAT     reduce using rule 24 (dims_q1 -> .)

    dims_q1                        shift and go to state 116

state 95

    (106) llam_void -> ID OPPARENTH function_call_q1 . CLPARENTH function_call_q2
    (107) llam_void -> ID OPPARENTH function_call_q1 . args CLPARENTH function_call_q2
    (101) args -> . aritm arg_q1 COMMA arg_q2 args
    (102) args -> . aritm arg_q1
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 117
    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    args                           shift and go to state 118
    aritm                          shift and go to state 119
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 96

    (103) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 103 (lectura -> READ OPPARENTH CLPARENTH .)


state 97

    (104) escritura -> WRITE OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 120


state 98

    (105) escritura -> WRITE OPPARENTH CONST_STRING . add_string_const CLPARENTH
    (108) add_string_const -> .

    CLPARENTH       reduce using rule 108 (add_string_const -> .)

    add_string_const               shift and go to state 121

state 99

    (38) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (35) conditional_q1 -> .

    CLPARENTH       reduce using rule 35 (conditional_q1 -> .)

    conditional_q1                 shift and go to state 122

state 100

    (93) relac -> aritm . EQUAL aritm
    (94) relac -> aritm . UNEQUAL aritm
    (95) relac -> aritm . LESS aritm
    (96) relac -> aritm . LESSEQ aritm
    (97) relac -> aritm . GREATER aritm
    (98) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 123
    UNEQUAL         shift and go to state 124
    LESS            shift and go to state 125
    LESSEQ          shift and go to state 126
    GREATER         shift and go to state 127
    GREATEREQ       shift and go to state 128


state 101

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (93) relac -> . aritm EQUAL aritm
    (94) relac -> . aritm UNEQUAL aritm
    (95) relac -> . aritm LESS aritm
    (96) relac -> . aritm LESSEQ aritm
    (97) relac -> . aritm GREATER aritm
    (98) relac -> . aritm GREATEREQ aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    relac                          shift and go to state 129
    aritm                          shift and go to state 100
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 102

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CLBRACKET       shift and go to state 130


state 103

    (56) param -> ID COLON var_typ save_dims_var . dims
    (26) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET
    (27) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET

    OPBRACKET       shift and go to state 94

    dims                           shift and go to state 131

state 104

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 132


state 105

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ . save_global_func OPBRACE func_cont CLBRACE
    (28) save_global_func -> .

    OPBRACE         reduce using rule 28 (save_global_func -> .)

    save_global_func               shift and go to state 133

state 106

    (86) factor_function_call -> ID OPPARENTH . function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> ID OPPARENTH . function_call_q1 args CLPARENTH function_call_q2
    (84) function_call_q1 -> .

    CLPARENTH       reduce using rule 84 (function_call_q1 -> .)
    OPPARENTH       reduce using rule 84 (function_call_q1 -> .)
    ID              reduce using rule 84 (function_call_q1 -> .)
    CONST_INT       reduce using rule 84 (function_call_q1 -> .)
    CONST_FLOAT     reduce using rule 84 (function_call_q1 -> .)

    function_call_q1               shift and go to state 134

state 107

    (83) factor_var -> ID save_dims_var . dims
    (26) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET
    (27) dims -> . OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET

    OPBRACKET       shift and go to state 94

    dims                           shift and go to state 135

state 108

    (111) asign -> ID ASGNMNT CONST_STRING add_string_const .

    ID              reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    READ            reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WRITE           reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WHEN            reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    WHILE           reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    CLBRACE         reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)
    RETURN          reduce using rule 111 (asign -> ID ASGNMNT CONST_STRING add_string_const .)


state 109

    (52) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (53) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING add_string_const CLPARENTH

    ID              shift and go to state 136
    CONST_STRING    shift and go to state 137


state 110

    (89) factor -> OPPARENTH check_parenth . aritm CLPARENTH check_parenth
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 138
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 111

    (70) aritm -> term check_aritm . PLUS check_aritm_operation aritm
    (71) aritm -> term check_aritm . MINUS check_aritm_operation aritm
    (72) aritm -> term check_aritm .

    PLUS            shift and go to state 139
    MINUS           shift and go to state 140
    ID              reduce using rule 72 (aritm -> term check_aritm .)
    READ            reduce using rule 72 (aritm -> term check_aritm .)
    WRITE           reduce using rule 72 (aritm -> term check_aritm .)
    WHEN            reduce using rule 72 (aritm -> term check_aritm .)
    WHILE           reduce using rule 72 (aritm -> term check_aritm .)
    CLBRACE         reduce using rule 72 (aritm -> term check_aritm .)
    RETURN          reduce using rule 72 (aritm -> term check_aritm .)
    CLPARENTH       reduce using rule 72 (aritm -> term check_aritm .)
    EQUAL           reduce using rule 72 (aritm -> term check_aritm .)
    UNEQUAL         reduce using rule 72 (aritm -> term check_aritm .)
    LESS            reduce using rule 72 (aritm -> term check_aritm .)
    LESSEQ          reduce using rule 72 (aritm -> term check_aritm .)
    GREATER         reduce using rule 72 (aritm -> term check_aritm .)
    GREATEREQ       reduce using rule 72 (aritm -> term check_aritm .)
    COMMA           reduce using rule 72 (aritm -> term check_aritm .)
    CLBRACKET       reduce using rule 72 (aritm -> term check_aritm .)


state 112

    (75) term -> factor check_term . TIMES check_term_operation term
    (76) term -> factor check_term . DIVIDE check_term_operation term
    (77) term -> factor check_term .

    TIMES           shift and go to state 141
    DIVIDE          shift and go to state 142
    PLUS            reduce using rule 77 (term -> factor check_term .)
    MINUS           reduce using rule 77 (term -> factor check_term .)
    ID              reduce using rule 77 (term -> factor check_term .)
    READ            reduce using rule 77 (term -> factor check_term .)
    WRITE           reduce using rule 77 (term -> factor check_term .)
    WHEN            reduce using rule 77 (term -> factor check_term .)
    WHILE           reduce using rule 77 (term -> factor check_term .)
    CLBRACE         reduce using rule 77 (term -> factor check_term .)
    RETURN          reduce using rule 77 (term -> factor check_term .)
    CLPARENTH       reduce using rule 77 (term -> factor check_term .)
    EQUAL           reduce using rule 77 (term -> factor check_term .)
    UNEQUAL         reduce using rule 77 (term -> factor check_term .)
    LESS            reduce using rule 77 (term -> factor check_term .)
    LESSEQ          reduce using rule 77 (term -> factor check_term .)
    GREATER         reduce using rule 77 (term -> factor check_term .)
    GREATEREQ       reduce using rule 77 (term -> factor check_term .)
    COMMA           reduce using rule 77 (term -> factor check_term .)
    CLBRACKET       reduce using rule 77 (term -> factor check_term .)


state 113

    (80) factor_const -> CONST_INT factortype_const_int .

    TIMES           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    DIVIDE          reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    PLUS            reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    MINUS           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    ID              reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    READ            reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    WRITE           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    WHEN            reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    WHILE           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACE         reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    RETURN          reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    CLPARENTH       reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    EQUAL           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    UNEQUAL         reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    LESS            reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    LESSEQ          reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    GREATER         reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    GREATEREQ       reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    COMMA           reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACKET       reduce using rule 80 (factor_const -> CONST_INT factortype_const_int .)


state 114

    (81) factor_const -> CONST_FLOAT factortype_const_float .

    TIMES           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    DIVIDE          reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    PLUS            reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    MINUS           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    ID              reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    READ            reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    WRITE           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHEN            reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHILE           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACE         reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    RETURN          reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLPARENTH       reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    EQUAL           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    UNEQUAL         reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESS            reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESSEQ          reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATER         reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATEREQ       reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    COMMA           reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACKET       reduce using rule 81 (factor_const -> CONST_FLOAT factortype_const_float .)


state 115

    (112) asign -> ID save_dims_var dims ASGNMNT . lectura
    (113) asign -> ID save_dims_var dims ASGNMNT . aritm
    (114) asign -> ID save_dims_var dims ASGNMNT . CONST_STRING add_string_const
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 145
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    lectura                        shift and go to state 143
    aritm                          shift and go to state 144
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 116

    (26) dims -> OPBRACKET dims_q1 . aritm dims_q2 CLBRACKET
    (27) dims -> OPBRACKET dims_q1 . aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 146
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 117

    (106) llam_void -> ID OPPARENTH function_call_q1 CLPARENTH . function_call_q2
    (85) function_call_q2 -> .

    ID              reduce using rule 85 (function_call_q2 -> .)
    READ            reduce using rule 85 (function_call_q2 -> .)
    WRITE           reduce using rule 85 (function_call_q2 -> .)
    WHEN            reduce using rule 85 (function_call_q2 -> .)
    WHILE           reduce using rule 85 (function_call_q2 -> .)
    CLBRACE         reduce using rule 85 (function_call_q2 -> .)
    RETURN          reduce using rule 85 (function_call_q2 -> .)

    function_call_q2               shift and go to state 147

state 118

    (107) llam_void -> ID OPPARENTH function_call_q1 args . CLPARENTH function_call_q2

    CLPARENTH       shift and go to state 148


state 119

    (101) args -> aritm . arg_q1 COMMA arg_q2 args
    (102) args -> aritm . arg_q1
    (99) arg_q1 -> .

    COMMA           reduce using rule 99 (arg_q1 -> .)
    CLPARENTH       reduce using rule 99 (arg_q1 -> .)

    arg_q1                         shift and go to state 149

state 120

    (104) escritura -> WRITE OPPARENTH aritm CLPARENTH .

    ID              reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 104 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)


state 121

    (105) escritura -> WRITE OPPARENTH CONST_STRING add_string_const . CLPARENTH

    CLPARENTH       shift and go to state 150


state 122

    (38) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLPARENTH       shift and go to state 151


state 123

    (93) relac -> aritm EQUAL . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 152
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 124

    (94) relac -> aritm UNEQUAL . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 153
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 125

    (95) relac -> aritm LESS . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 154
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 126

    (96) relac -> aritm LESSEQ . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 155
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 127

    (97) relac -> aritm GREATER . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 156
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 128

    (98) relac -> aritm GREATEREQ . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 157
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 129

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2
    (35) conditional_q1 -> .

    CLPARENTH       reduce using rule 35 (conditional_q1 -> .)

    conditional_q1                 shift and go to state 158

state 130

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . save_array_size
    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size
    (19) save_array_size -> .

    OPBRACKET       shift and go to state 159
    VAR             reduce using rule 19 (save_array_size -> .)
    MAIN            reduce using rule 19 (save_array_size -> .)
    FUNC            reduce using rule 19 (save_array_size -> .)
    ID              reduce using rule 19 (save_array_size -> .)
    READ            reduce using rule 19 (save_array_size -> .)
    WRITE           reduce using rule 19 (save_array_size -> .)
    WHEN            reduce using rule 19 (save_array_size -> .)
    WHILE           reduce using rule 19 (save_array_size -> .)

    save_array_size                shift and go to state 160

state 131

    (56) param -> ID COLON var_typ save_dims_var dims .

    COMMA           reduce using rule 56 (param -> ID COLON var_typ save_dims_var dims .)
    CLPARENTH       reduce using rule 56 (param -> ID COLON var_typ save_dims_var dims .)


state 132

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE . func_cont CLBRACE
    (41) func_cont -> . var_list estat_list RETURN aritm save_return_value
    (42) func_cont -> . estat_list RETURN aritm save_return_value
    (43) func_cont -> . var_list estat_list
    (44) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 161
    var_list                       shift and go to state 162
    estat_list                     shift and go to state 163
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 133

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 164


state 134

    (86) factor_function_call -> ID OPPARENTH function_call_q1 . CLPARENTH function_call_q2
    (87) factor_function_call -> ID OPPARENTH function_call_q1 . args CLPARENTH function_call_q2
    (101) args -> . aritm arg_q1 COMMA arg_q2 args
    (102) args -> . aritm arg_q1
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 165
    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    args                           shift and go to state 166
    aritm                          shift and go to state 119
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 135

    (83) factor_var -> ID save_dims_var dims .

    TIMES           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    DIVIDE          reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    PLUS            reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    MINUS           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    ID              reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    READ            reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    WRITE           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    WHEN            reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    WHILE           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    CLBRACE         reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    RETURN          reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    CLPARENTH       reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    EQUAL           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    UNEQUAL         reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    LESS            reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    LESSEQ          reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    GREATER         reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    GREATEREQ       reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    COMMA           reduce using rule 83 (factor_var -> ID save_dims_var dims .)
    CLBRACKET       reduce using rule 83 (factor_var -> ID save_dims_var dims .)


state 136

    (52) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 167


state 137

    (53) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . add_string_const CLPARENTH
    (108) add_string_const -> .

    CLPARENTH       reduce using rule 108 (add_string_const -> .)

    add_string_const               shift and go to state 168

state 138

    (89) factor -> OPPARENTH check_parenth aritm . CLPARENTH check_parenth

    CLPARENTH       shift and go to state 169


state 139

    (70) aritm -> term check_aritm PLUS . check_aritm_operation aritm
    (68) check_aritm_operation -> .

    OPPARENTH       reduce using rule 68 (check_aritm_operation -> .)
    ID              reduce using rule 68 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 68 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 68 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 170

state 140

    (71) aritm -> term check_aritm MINUS . check_aritm_operation aritm
    (68) check_aritm_operation -> .

    OPPARENTH       reduce using rule 68 (check_aritm_operation -> .)
    ID              reduce using rule 68 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 68 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 68 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 171

state 141

    (75) term -> factor check_term TIMES . check_term_operation term
    (73) check_term_operation -> .

    OPPARENTH       reduce using rule 73 (check_term_operation -> .)
    ID              reduce using rule 73 (check_term_operation -> .)
    CONST_INT       reduce using rule 73 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 73 (check_term_operation -> .)

    check_term_operation           shift and go to state 172

state 142

    (76) term -> factor check_term DIVIDE . check_term_operation term
    (73) check_term_operation -> .

    OPPARENTH       reduce using rule 73 (check_term_operation -> .)
    ID              reduce using rule 73 (check_term_operation -> .)
    CONST_INT       reduce using rule 73 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 73 (check_term_operation -> .)

    check_term_operation           shift and go to state 173

state 143

    (112) asign -> ID save_dims_var dims ASGNMNT lectura .

    ID              reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    READ            reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    WRITE           reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    WHEN            reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    WHILE           reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)
    RETURN          reduce using rule 112 (asign -> ID save_dims_var dims ASGNMNT lectura .)


state 144

    (113) asign -> ID save_dims_var dims ASGNMNT aritm .

    ID              reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    READ            reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    WRITE           reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    WHEN            reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    WHILE           reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    CLBRACE         reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)
    RETURN          reduce using rule 113 (asign -> ID save_dims_var dims ASGNMNT aritm .)


state 145

    (114) asign -> ID save_dims_var dims ASGNMNT CONST_STRING . add_string_const
    (108) add_string_const -> .

    ID              reduce using rule 108 (add_string_const -> .)
    READ            reduce using rule 108 (add_string_const -> .)
    WRITE           reduce using rule 108 (add_string_const -> .)
    WHEN            reduce using rule 108 (add_string_const -> .)
    WHILE           reduce using rule 108 (add_string_const -> .)
    CLBRACE         reduce using rule 108 (add_string_const -> .)
    RETURN          reduce using rule 108 (add_string_const -> .)

    add_string_const               shift and go to state 174

state 146

    (26) dims -> OPBRACKET dims_q1 aritm . dims_q2 CLBRACKET
    (27) dims -> OPBRACKET dims_q1 aritm . dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET
    (25) dims_q2 -> .

    CLBRACKET       reduce using rule 25 (dims_q2 -> .)

    dims_q2                        shift and go to state 175

state 147

    (106) llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .

    ID              reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    READ            reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 106 (llam_void -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)


state 148

    (107) llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH . function_call_q2
    (85) function_call_q2 -> .

    ID              reduce using rule 85 (function_call_q2 -> .)
    READ            reduce using rule 85 (function_call_q2 -> .)
    WRITE           reduce using rule 85 (function_call_q2 -> .)
    WHEN            reduce using rule 85 (function_call_q2 -> .)
    WHILE           reduce using rule 85 (function_call_q2 -> .)
    CLBRACE         reduce using rule 85 (function_call_q2 -> .)
    RETURN          reduce using rule 85 (function_call_q2 -> .)

    function_call_q2               shift and go to state 176

state 149

    (101) args -> aritm arg_q1 . COMMA arg_q2 args
    (102) args -> aritm arg_q1 .

    COMMA           shift and go to state 177
    CLPARENTH       reduce using rule 102 (args -> aritm arg_q1 .)


state 150

    (105) escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .

    ID              reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    READ            reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WRITE           reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHEN            reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHILE           reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    CLBRACE         reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    RETURN          reduce using rule 105 (escritura -> WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH .)


state 151

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    THEN            shift and go to state 178


state 152

    (93) relac -> aritm EQUAL aritm .

    CLPARENTH       reduce using rule 93 (relac -> aritm EQUAL aritm .)


state 153

    (94) relac -> aritm UNEQUAL aritm .

    CLPARENTH       reduce using rule 94 (relac -> aritm UNEQUAL aritm .)


state 154

    (95) relac -> aritm LESS aritm .

    CLPARENTH       reduce using rule 95 (relac -> aritm LESS aritm .)


state 155

    (96) relac -> aritm LESSEQ aritm .

    CLPARENTH       reduce using rule 96 (relac -> aritm LESSEQ aritm .)


state 156

    (97) relac -> aritm GREATER aritm .

    CLPARENTH       reduce using rule 97 (relac -> aritm GREATER aritm .)


state 157

    (98) relac -> aritm GREATEREQ aritm .

    CLPARENTH       reduce using rule 98 (relac -> aritm GREATEREQ aritm .)


state 158

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    CLPARENTH       shift and go to state 179


state 159

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET . CONST_INT COLON CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 180


state 160

    (21) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .

    VAR             reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    MAIN            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    FUNC            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    ID              reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    READ            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WRITE           reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WHEN            reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)
    WHILE           reduce using rule 21 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_array_size .)


state 161

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 181


state 162

    (41) func_cont -> var_list . estat_list RETURN aritm save_return_value
    (43) func_cont -> var_list . estat_list
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 182
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 163

    (42) func_cont -> estat_list . RETURN aritm save_return_value
    (44) func_cont -> estat_list .

    RETURN          shift and go to state 183
    CLBRACE         reduce using rule 44 (func_cont -> estat_list .)


state 164

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE . func_cont CLBRACE
    (41) func_cont -> . var_list estat_list RETURN aritm save_return_value
    (42) func_cont -> . estat_list RETURN aritm save_return_value
    (43) func_cont -> . var_list estat_list
    (44) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ declare_dims
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 184
    var_list                       shift and go to state 162
    estat_list                     shift and go to state 163
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 165

    (86) factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH . function_call_q2
    (85) function_call_q2 -> .

    TIMES           reduce using rule 85 (function_call_q2 -> .)
    DIVIDE          reduce using rule 85 (function_call_q2 -> .)
    PLUS            reduce using rule 85 (function_call_q2 -> .)
    MINUS           reduce using rule 85 (function_call_q2 -> .)
    ID              reduce using rule 85 (function_call_q2 -> .)
    READ            reduce using rule 85 (function_call_q2 -> .)
    WRITE           reduce using rule 85 (function_call_q2 -> .)
    WHEN            reduce using rule 85 (function_call_q2 -> .)
    WHILE           reduce using rule 85 (function_call_q2 -> .)
    CLBRACE         reduce using rule 85 (function_call_q2 -> .)
    RETURN          reduce using rule 85 (function_call_q2 -> .)
    CLPARENTH       reduce using rule 85 (function_call_q2 -> .)
    EQUAL           reduce using rule 85 (function_call_q2 -> .)
    UNEQUAL         reduce using rule 85 (function_call_q2 -> .)
    LESS            reduce using rule 85 (function_call_q2 -> .)
    LESSEQ          reduce using rule 85 (function_call_q2 -> .)
    GREATER         reduce using rule 85 (function_call_q2 -> .)
    GREATEREQ       reduce using rule 85 (function_call_q2 -> .)
    COMMA           reduce using rule 85 (function_call_q2 -> .)
    CLBRACKET       reduce using rule 85 (function_call_q2 -> .)

    function_call_q2               shift and go to state 185

state 166

    (87) factor_function_call -> ID OPPARENTH function_call_q1 args . CLPARENTH function_call_q2

    CLPARENTH       shift and go to state 186


state 167

    (52) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 52 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 168

    (53) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const . CLPARENTH

    CLPARENTH       shift and go to state 187


state 169

    (89) factor -> OPPARENTH check_parenth aritm CLPARENTH . check_parenth
    (88) check_parenth -> .

    TIMES           reduce using rule 88 (check_parenth -> .)
    DIVIDE          reduce using rule 88 (check_parenth -> .)
    PLUS            reduce using rule 88 (check_parenth -> .)
    MINUS           reduce using rule 88 (check_parenth -> .)
    ID              reduce using rule 88 (check_parenth -> .)
    READ            reduce using rule 88 (check_parenth -> .)
    WRITE           reduce using rule 88 (check_parenth -> .)
    WHEN            reduce using rule 88 (check_parenth -> .)
    WHILE           reduce using rule 88 (check_parenth -> .)
    CLBRACE         reduce using rule 88 (check_parenth -> .)
    RETURN          reduce using rule 88 (check_parenth -> .)
    CLPARENTH       reduce using rule 88 (check_parenth -> .)
    EQUAL           reduce using rule 88 (check_parenth -> .)
    UNEQUAL         reduce using rule 88 (check_parenth -> .)
    LESS            reduce using rule 88 (check_parenth -> .)
    LESSEQ          reduce using rule 88 (check_parenth -> .)
    GREATER         reduce using rule 88 (check_parenth -> .)
    GREATEREQ       reduce using rule 88 (check_parenth -> .)
    COMMA           reduce using rule 88 (check_parenth -> .)
    CLBRACKET       reduce using rule 88 (check_parenth -> .)

    check_parenth                  shift and go to state 188

state 170

    (70) aritm -> term check_aritm PLUS check_aritm_operation . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    term                           shift and go to state 86
    aritm                          shift and go to state 189
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 171

    (71) aritm -> term check_aritm MINUS check_aritm_operation . aritm
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    term                           shift and go to state 86
    aritm                          shift and go to state 190
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 172

    (75) term -> factor check_term TIMES check_term_operation . term
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    factor                         shift and go to state 87
    term                           shift and go to state 191
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 173

    (76) term -> factor check_term DIVIDE check_term_operation . term
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    factor                         shift and go to state 87
    term                           shift and go to state 192
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 174

    (114) asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .

    ID              reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    READ            reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    WRITE           reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    WHEN            reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    WHILE           reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    CLBRACE         reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)
    RETURN          reduce using rule 114 (asign -> ID save_dims_var dims ASGNMNT CONST_STRING add_string_const .)


state 175

    (26) dims -> OPBRACKET dims_q1 aritm dims_q2 . CLBRACKET
    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 . CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET

    CLBRACKET       shift and go to state 193


state 176

    (107) llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .

    ID              reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    READ            reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 107 (llam_void -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)


state 177

    (101) args -> aritm arg_q1 COMMA . arg_q2 args
    (100) arg_q2 -> .

    OPPARENTH       reduce using rule 100 (arg_q2 -> .)
    ID              reduce using rule 100 (arg_q2 -> .)
    CONST_INT       reduce using rule 100 (arg_q2 -> .)
    CONST_FLOAT     reduce using rule 100 (arg_q2 -> .)

    arg_q2                         shift and go to state 194

state 178

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 195


state 179

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE ciclo_q2

    THEN            shift and go to state 196


state 180

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT . COLON CONST_INT CLBRACKET save_matrix_size

    COLON           shift and go to state 197


state 181

    (29) func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 29 (func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 29 (func -> FUNC ID context_to_local OPPARENTH CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)


state 182

    (41) func_cont -> var_list estat_list . RETURN aritm save_return_value
    (43) func_cont -> var_list estat_list .

    RETURN          shift and go to state 198
    CLBRACE         reduce using rule 43 (func_cont -> var_list estat_list .)


state 183

    (42) func_cont -> estat_list RETURN . aritm save_return_value
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 199
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 184

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 200


state 185

    (86) factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .

    TIMES           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    DIVIDE          reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    PLUS            reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    MINUS           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    ID              reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    READ            reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLPARENTH       reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    EQUAL           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    UNEQUAL         reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    LESS            reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    LESSEQ          reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    GREATER         reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    GREATEREQ       reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    COMMA           reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)
    CLBRACKET       reduce using rule 86 (factor_function_call -> ID OPPARENTH function_call_q1 CLPARENTH function_call_q2 .)


state 186

    (87) factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH . function_call_q2
    (85) function_call_q2 -> .

    TIMES           reduce using rule 85 (function_call_q2 -> .)
    DIVIDE          reduce using rule 85 (function_call_q2 -> .)
    PLUS            reduce using rule 85 (function_call_q2 -> .)
    MINUS           reduce using rule 85 (function_call_q2 -> .)
    ID              reduce using rule 85 (function_call_q2 -> .)
    READ            reduce using rule 85 (function_call_q2 -> .)
    WRITE           reduce using rule 85 (function_call_q2 -> .)
    WHEN            reduce using rule 85 (function_call_q2 -> .)
    WHILE           reduce using rule 85 (function_call_q2 -> .)
    CLBRACE         reduce using rule 85 (function_call_q2 -> .)
    RETURN          reduce using rule 85 (function_call_q2 -> .)
    CLPARENTH       reduce using rule 85 (function_call_q2 -> .)
    EQUAL           reduce using rule 85 (function_call_q2 -> .)
    UNEQUAL         reduce using rule 85 (function_call_q2 -> .)
    LESS            reduce using rule 85 (function_call_q2 -> .)
    LESSEQ          reduce using rule 85 (function_call_q2 -> .)
    GREATER         reduce using rule 85 (function_call_q2 -> .)
    GREATEREQ       reduce using rule 85 (function_call_q2 -> .)
    COMMA           reduce using rule 85 (function_call_q2 -> .)
    CLBRACKET       reduce using rule 85 (function_call_q2 -> .)

    function_call_q2               shift and go to state 201

state 187

    (53) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .

    ID              reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    READ            reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WRITE           reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHEN            reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    WHILE           reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    CLBRACE         reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)
    RETURN          reduce using rule 53 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH .)


state 188

    (89) factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .

    TIMES           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    DIVIDE          reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    PLUS            reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    MINUS           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    ID              reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    READ            reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WRITE           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHEN            reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHILE           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACE         reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    RETURN          reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLPARENTH       reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    EQUAL           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    UNEQUAL         reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESS            reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESSEQ          reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATER         reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATEREQ       reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    COMMA           reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACKET       reduce using rule 89 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)


state 189

    (70) aritm -> term check_aritm PLUS check_aritm_operation aritm .

    ID              reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    READ            reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WRITE           reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHEN            reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHILE           reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    RETURN          reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESS            reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATER         reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    COMMA           reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLBRACKET       reduce using rule 70 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)


state 190

    (71) aritm -> term check_aritm MINUS check_aritm_operation aritm .

    ID              reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    READ            reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WRITE           reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHEN            reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHILE           reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    RETURN          reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESS            reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATER         reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    COMMA           reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLBRACKET       reduce using rule 71 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)


state 191

    (75) term -> factor check_term TIMES check_term_operation term .

    PLUS            reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    MINUS           reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    ID              reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    READ            reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    WRITE           reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    WHEN            reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    WHILE           reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACE         reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    RETURN          reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    CLPARENTH       reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    EQUAL           reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    UNEQUAL         reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    LESS            reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    LESSEQ          reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    GREATER         reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    GREATEREQ       reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    COMMA           reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACKET       reduce using rule 75 (term -> factor check_term TIMES check_term_operation term .)


state 192

    (76) term -> factor check_term DIVIDE check_term_operation term .

    PLUS            reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    MINUS           reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    ID              reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    READ            reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    WRITE           reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    WHEN            reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    WHILE           reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACE         reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    RETURN          reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    CLPARENTH       reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    EQUAL           reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    UNEQUAL         reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    LESS            reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    LESSEQ          reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATER         reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATEREQ       reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    COMMA           reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACKET       reduce using rule 76 (term -> factor check_term DIVIDE check_term_operation term .)


state 193

    (26) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .
    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET . OPBRACKET aritm dims_q2 CLBRACKET

    ASGNMNT         reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    COMMA           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    CLPARENTH       reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    TIMES           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    DIVIDE          reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    PLUS            reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    MINUS           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    ID              reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    READ            reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    WRITE           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    WHEN            reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    WHILE           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    CLBRACE         reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    RETURN          reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    EQUAL           reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    UNEQUAL         reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    LESS            reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    LESSEQ          reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    GREATER         reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    GREATEREQ       reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    CLBRACKET       reduce using rule 26 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET .)
    OPBRACKET       shift and go to state 202


state 194

    (101) args -> aritm arg_q1 COMMA arg_q2 . args
    (101) args -> . aritm arg_q1 COMMA arg_q2 args
    (102) args -> . aritm arg_q1
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 119
    args                           shift and go to state 203
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 195

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 204
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 196

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE ciclo_q2

    OPBRACE         shift and go to state 205


state 197

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON . CONST_INT CLBRACKET save_matrix_size

    CONST_INT       shift and go to state 206


state 198

    (41) func_cont -> var_list estat_list RETURN . aritm save_return_value
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 207
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 199

    (42) func_cont -> estat_list RETURN aritm . save_return_value
    (40) save_return_value -> .

    CLBRACE         reduce using rule 40 (save_return_value -> .)

    save_return_value              shift and go to state 208

state 200

    (30) func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 30 (func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 30 (func -> FUNC ID context_to_local OPPARENTH param_list CLPARENTH COLON func_typ save_global_func OPBRACE func_cont CLBRACE .)


state 201

    (87) factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .

    TIMES           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    DIVIDE          reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    PLUS            reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    MINUS           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    ID              reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    READ            reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WRITE           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHEN            reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    WHILE           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACE         reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    RETURN          reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLPARENTH       reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    EQUAL           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    UNEQUAL         reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    LESS            reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    LESSEQ          reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    GREATER         reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    GREATEREQ       reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    COMMA           reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)
    CLBRACKET       reduce using rule 87 (factor_function_call -> ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2 .)


state 202

    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET . aritm dims_q2 CLBRACKET
    (70) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (71) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (72) aritm -> . term check_aritm
    (75) term -> . factor check_term TIMES check_term_operation term
    (76) term -> . factor check_term DIVIDE check_term_operation term
    (77) term -> . factor check_term
    (89) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (90) factor -> . factor_function_call
    (91) factor -> . factor_var
    (92) factor -> . factor_const
    (86) factor_function_call -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (87) factor_function_call -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (82) factor_var -> . ID
    (83) factor_var -> . ID save_dims_var dims
    (80) factor_const -> . CONST_INT factortype_const_int
    (81) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 85
    ID              shift and go to state 80
    CONST_INT       shift and go to state 91
    CONST_FLOAT     shift and go to state 92

    aritm                          shift and go to state 209
    term                           shift and go to state 86
    factor                         shift and go to state 87
    factor_function_call           shift and go to state 88
    factor_var                     shift and go to state 89
    factor_const                   shift and go to state 90

state 203

    (101) args -> aritm arg_q1 COMMA arg_q2 args .

    CLPARENTH       reduce using rule 101 (args -> aritm arg_q1 COMMA arg_q2 args .)


state 204

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLBRACE         shift and go to state 210


state 205

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE ciclo_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 211
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 206

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT . CLBRACKET save_matrix_size

    CLBRACKET       shift and go to state 212


state 207

    (41) func_cont -> var_list estat_list RETURN aritm . save_return_value
    (40) save_return_value -> .

    CLBRACE         reduce using rule 40 (save_return_value -> .)

    save_return_value              shift and go to state 213

state 208

    (42) func_cont -> estat_list RETURN aritm save_return_value .

    CLBRACE         reduce using rule 42 (func_cont -> estat_list RETURN aritm save_return_value .)


state 209

    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm . dims_q2 CLBRACKET
    (25) dims_q2 -> .

    CLBRACKET       reduce using rule 25 (dims_q2 -> .)

    dims_q2                        shift and go to state 214

state 210

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . conditional_q2
    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (36) conditional_q2 -> .

    ELSE            shift and go to state 216
    ID              reduce using rule 36 (conditional_q2 -> .)
    READ            reduce using rule 36 (conditional_q2 -> .)
    WRITE           reduce using rule 36 (conditional_q2 -> .)
    WHEN            reduce using rule 36 (conditional_q2 -> .)
    WHILE           reduce using rule 36 (conditional_q2 -> .)
    CLBRACE         reduce using rule 36 (conditional_q2 -> .)
    RETURN          reduce using rule 36 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 215

state 211

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE ciclo_q2

    CLBRACE         shift and go to state 217


state 212

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET . save_matrix_size
    (20) save_matrix_size -> .

    VAR             reduce using rule 20 (save_matrix_size -> .)
    MAIN            reduce using rule 20 (save_matrix_size -> .)
    FUNC            reduce using rule 20 (save_matrix_size -> .)
    ID              reduce using rule 20 (save_matrix_size -> .)
    READ            reduce using rule 20 (save_matrix_size -> .)
    WRITE           reduce using rule 20 (save_matrix_size -> .)
    WHEN            reduce using rule 20 (save_matrix_size -> .)
    WHILE           reduce using rule 20 (save_matrix_size -> .)

    save_matrix_size               shift and go to state 218

state 213

    (41) func_cont -> var_list estat_list RETURN aritm save_return_value .

    CLBRACE         reduce using rule 41 (func_cont -> var_list estat_list RETURN aritm save_return_value .)


state 214

    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 . CLBRACKET

    CLBRACKET       shift and go to state 219


state 215

    (38) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 38 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)


state 216

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (37) conditional_q3 -> .

    OPBRACE         reduce using rule 37 (conditional_q3 -> .)

    conditional_q3                 shift and go to state 220

state 217

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . ciclo_q2
    (33) ciclo_q2 -> .

    ID              reduce using rule 33 (ciclo_q2 -> .)
    READ            reduce using rule 33 (ciclo_q2 -> .)
    WRITE           reduce using rule 33 (ciclo_q2 -> .)
    WHEN            reduce using rule 33 (ciclo_q2 -> .)
    WHILE           reduce using rule 33 (ciclo_q2 -> .)
    CLBRACE         reduce using rule 33 (ciclo_q2 -> .)
    RETURN          reduce using rule 33 (ciclo_q2 -> .)

    ciclo_q2                       shift and go to state 221

state 218

    (22) declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .

    VAR             reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    MAIN            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    FUNC            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    ID              reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    READ            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WRITE           reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WHEN            reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)
    WHILE           reduce using rule 22 (declare_dims -> OPBRACKET CONST_INT COLON CONST_INT CLBRACKET OPBRACKET CONST_INT COLON CONST_INT CLBRACKET save_matrix_size .)


state 219

    (27) dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .

    ASGNMNT         reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    COMMA           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    CLPARENTH       reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    TIMES           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    DIVIDE          reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    PLUS            reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    MINUS           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    ID              reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    READ            reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    WRITE           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    WHEN            reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    WHILE           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    CLBRACE         reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    RETURN          reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    EQUAL           reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    UNEQUAL         reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    LESS            reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    LESSEQ          reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    GREATER         reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    GREATEREQ       reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)
    CLBRACKET       reduce using rule 27 (dims -> OPBRACKET dims_q1 aritm dims_q2 CLBRACKET OPBRACKET aritm dims_q2 CLBRACKET .)


state 220

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 . OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 222


state 221

    (34) ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .

    ID              reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    READ            reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WRITE           reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WHEN            reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    WHILE           reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    CLBRACE         reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)
    RETURN          reduce using rule 34 (ciclo -> WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2 .)


state 222

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE . estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (45) estat -> . asign
    (46) estat -> . llam_void
    (47) estat -> . lectura
    (48) estat -> . escritura
    (49) estat -> . carga_dt
    (50) estat -> . decision
    (51) estat -> . ciclo
    (109) asign -> . ID ASGNMNT lectura
    (110) asign -> . ID ASGNMNT aritm
    (111) asign -> . ID ASGNMNT CONST_STRING add_string_const
    (112) asign -> . ID save_dims_var dims ASGNMNT lectura
    (113) asign -> . ID save_dims_var dims ASGNMNT aritm
    (114) asign -> . ID save_dims_var dims ASGNMNT CONST_STRING add_string_const
    (106) llam_void -> . ID OPPARENTH function_call_q1 CLPARENTH function_call_q2
    (107) llam_void -> . ID OPPARENTH function_call_q1 args CLPARENTH function_call_q2
    (103) lectura -> . READ OPPARENTH CLPARENTH
    (104) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (105) escritura -> . WRITE OPPARENTH CONST_STRING add_string_const CLPARENTH
    (52) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (53) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING add_string_const CLPARENTH
    (38) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (39) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (34) ciclo -> . WHILE ciclo_q1 OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ciclo_q2

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 223
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 223

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list . CLBRACE conditional_q2

    CLBRACE         shift and go to state 224


state 224

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE . conditional_q2
    (36) conditional_q2 -> .

    ID              reduce using rule 36 (conditional_q2 -> .)
    READ            reduce using rule 36 (conditional_q2 -> .)
    WRITE           reduce using rule 36 (conditional_q2 -> .)
    WHEN            reduce using rule 36 (conditional_q2 -> .)
    WHILE           reduce using rule 36 (conditional_q2 -> .)
    CLBRACE         reduce using rule 36 (conditional_q2 -> .)
    RETURN          reduce using rule 36 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 225

state 225

    (39) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 39 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)

