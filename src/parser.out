Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list calcula_globales func_list cuerpo
Rule 2     program -> encabezamiento var_list calcula_globales cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     calcula_globales -> <empty>
Rule 6     encabezamiento -> PROGRAM ID
Rule 7     context_to_global -> <empty>
Rule 8     cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
Rule 9     variable -> VAR ID COLON var_typ
Rule 10    variable -> VAR ID COLON var_typ dims
Rule 11    var_list -> variable var_list
Rule 12    var_list -> variable
Rule 13    func_list -> func func_list
Rule 14    func_list -> func
Rule 15    estat_list -> estat estat_list
Rule 16    estat_list -> estat
Rule 17    param_list -> param COMMA param_list
Rule 18    param_list -> param
Rule 19    dims -> OPBRACKET aritm CLBRACKET
Rule 20    dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
Rule 21    func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 22    func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 23    context_to_local -> <empty>
Rule 24    ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 25    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 26    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
Rule 27    func_cont -> var_list estat_list RETURN expr
Rule 28    func_cont -> estat_list RETURN expr
Rule 29    func_cont -> var_list estat_list
Rule 30    func_cont -> estat_list
Rule 31    estat -> asign
Rule 32    estat -> llam_void
Rule 33    estat -> lectura
Rule 34    estat -> escritura
Rule 35    estat -> carga_dt
Rule 36    estat -> decision
Rule 37    estat -> ciclo
Rule 38    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 39    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
Rule 40    param -> ID COLON var_typ
Rule 41    param -> ID COLON var_typ dims
Rule 42    var_typ -> INT
Rule 43    var_typ -> FLOAT
Rule 44    var_typ -> CHAR
Rule 45    var_typ -> BOOL
Rule 46    var_typ -> FRAME
Rule 47    func_typ -> INT
Rule 48    func_typ -> FLOAT
Rule 49    func_typ -> CHAR
Rule 50    func_typ -> BOOL
Rule 51    func_typ -> FRAME
Rule 52    func_typ -> VOID
Rule 53    aritm -> term PLUS aritm
Rule 54    aritm -> term MINUS aritm
Rule 55    aritm -> term
Rule 56    term -> factor TIMES term
Rule 57    term -> factor DIVIDE term
Rule 58    term -> factor
Rule 59    factor -> OPPARENTH aritm CLPARENTH
Rule 60    factor -> ID
Rule 61    factor -> ID dims
Rule 62    factor -> CONST_INT
Rule 63    factor -> CONST_FLOAT
Rule 64    logic -> oprnd AND logic
Rule 65    logic -> oprnd OR logic
Rule 66    logic -> NOT oprnd
Rule 67    logic -> oprnd
Rule 68    expr -> aritm
Rule 69    expr -> logic
Rule 70    expr -> ID OPPARENTH CLPARENTH
Rule 71    expr -> ID OPPARENTH args CLPARENTH
Rule 72    oprnd -> FALSE
Rule 73    oprnd -> TRUE
Rule 74    oprnd -> relac
Rule 75    oprnd -> OPPARENTH logic CLPARENTH
Rule 76    relac -> aritm EQUAL aritm
Rule 77    relac -> aritm UNEQUAL aritm
Rule 78    relac -> aritm LESS aritm
Rule 79    relac -> aritm LESSEQ aritm
Rule 80    relac -> aritm GREATER aritm
Rule 81    relac -> aritm GREATEREQ aritm
Rule 82    args -> expr COMMA args
Rule 83    args -> expr
Rule 84    lectura -> READ OPPARENTH CLPARENTH
Rule 85    escritura -> WRITE OPPARENTH ID CLPARENTH
Rule 86    escritura -> WRITE OPPARENTH ID dims CLPARENTH
Rule 87    escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH
Rule 88    llam_void -> ID OPPARENTH CLPARENTH
Rule 89    llam_void -> ID OPPARENTH args CLPARENTH
Rule 90    asign -> ID ASGNMNT lectura
Rule 91    asign -> ID ASGNMNT expr
Rule 92    asign -> ID ASGNMNT CONST_STRING
Rule 93    asign -> ID dims ASGNMNT lectura
Rule 94    asign -> ID dims ASGNMNT expr
Rule 95    asign -> ID dims ASGNMNT CONST_STRING

Terminals, with rules where they appear

AND                  : 64
ASGNMNT              : 38 39 90 91 92 93 94 95
BOOL                 : 45 50
CHAR                 : 44 49
CLBRACE              : 8 21 22 24 25 26 26
CLBRACKET            : 19 20 20
CLPARENTH            : 8 21 22 24 25 26 38 39 59 70 71 75 84 85 86 87 88 89
COLON                : 9 10 21 22 40 41
COMMA                : 17 82
CONST_FLOAT          : 63
CONST_INT            : 20 62
CONST_STRING         : 39 87 92 95
DIVIDE               : 57
ELSE                 : 26
EQUAL                : 76
FALSE                : 72
FLOAT                : 43 48
FRAME                : 46 51
FUNC                 : 21 22
GREATER              : 80
GREATEREQ            : 81
ID                   : 6 9 10 21 22 38 38 39 40 41 60 61 70 71 85 86 88 89 90 91 92 93 94 95
INT                  : 42 47
LESS                 : 78
LESSEQ               : 79
LOAD                 : 38 39
MAIN                 : 8
MINUS                : 54
NOT                  : 66
OPBRACE              : 8 21 22 24 25 26 26
OPBRACKET            : 19 20 20
OPPARENTH            : 8 21 22 24 25 26 38 39 59 70 71 75 84 85 86 87 88 89
OR                   : 65
PLUS                 : 53
PROGRAM              : 6
READ                 : 84
RETURN               : 27 28
THEN                 : 24 25 26
TIMES                : 56
TRUE                 : 73
UNEQUAL              : 77
VAR                  : 9 10
VOID                 : 52
WHEN                 : 25 26
WHILE                : 24
WRITE                : 85 86 87
error                : 

Nonterminals, with rules where they appear

args                 : 71 82 89
aritm                : 19 20 53 54 59 68 76 76 77 77 78 78 79 79 80 80 81 81
asign                : 31
calcula_globales     : 1 2
carga_dt             : 35
ciclo                : 37
context_to_global    : 8
context_to_local     : 21 22
cuerpo               : 1 2 3 4
decision             : 36
dims                 : 10 41 61 86 93 94 95
encabezamiento       : 1 2 3 4
escritura            : 34
estat                : 15 16
estat_list           : 8 15 24 25 26 26 27 28 29 30
expr                 : 27 28 82 83 91 94
factor               : 56 57 58
func                 : 13 14
func_cont            : 21 22
func_list            : 1 3 13
func_typ             : 21 22
lectura              : 33 90 93
llam_void            : 32
logic                : 24 25 26 64 65 69 75
oprnd                : 64 65 66 67
param                : 17 18
param_list           : 17 22
program              : 0
relac                : 74
term                 : 53 54 55 56 57
var_list             : 1 2 11 27 29
var_typ              : 9 10 40 41
variable             : 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list calcula_globales func_list cuerpo
    (2) program -> . encabezamiento var_list calcula_globales cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (6) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list calcula_globales func_list cuerpo
    (2) program -> encabezamiento . var_list calcula_globales cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (6) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . calcula_globales func_list cuerpo
    (2) program -> encabezamiento var_list . calcula_globales cuerpo
    (5) calcula_globales -> .

    MAIN            reduce using rule 5 (calcula_globales -> .)
    FUNC            reduce using rule 5 (calcula_globales -> .)

    calcula_globales               shift and go to state 13

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 14

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (11) var_list -> variable . var_list
    (12) var_list -> variable .
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims

    MAIN            reduce using rule 12 (var_list -> variable .)
    FUNC            reduce using rule 12 (var_list -> variable .)
    ID              reduce using rule 12 (var_list -> variable .)
    READ            reduce using rule 12 (var_list -> variable .)
    WRITE           reduce using rule 12 (var_list -> variable .)
    WHEN            reduce using rule 12 (var_list -> variable .)
    WHILE           reduce using rule 12 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 15

state 8

    (13) func_list -> func . func_list
    (14) func_list -> func .
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 14 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 16

state 9

    (8) cuerpo -> MAIN . context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (7) context_to_global -> .

    OPPARENTH       reduce using rule 7 (context_to_global -> .)

    context_to_global              shift and go to state 17

state 10

    (9) variable -> VAR . ID COLON var_typ
    (10) variable -> VAR . ID COLON var_typ dims

    ID              shift and go to state 18


state 11

    (21) func -> FUNC . context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC . context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) context_to_local -> .

    ID              reduce using rule 23 (context_to_local -> .)

    context_to_local               shift and go to state 19

state 12

    (6) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 6 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list calcula_globales . func_list cuerpo
    (2) program -> encabezamiento var_list calcula_globales . cuerpo
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 20
    cuerpo                         shift and go to state 21
    func                           shift and go to state 8

state 14

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 15

    (11) var_list -> variable var_list .

    MAIN            reduce using rule 11 (var_list -> variable var_list .)
    FUNC            reduce using rule 11 (var_list -> variable var_list .)
    ID              reduce using rule 11 (var_list -> variable var_list .)
    READ            reduce using rule 11 (var_list -> variable var_list .)
    WRITE           reduce using rule 11 (var_list -> variable var_list .)
    WHEN            reduce using rule 11 (var_list -> variable var_list .)
    WHILE           reduce using rule 11 (var_list -> variable var_list .)


state 16

    (13) func_list -> func func_list .

    MAIN            reduce using rule 13 (func_list -> func func_list .)


state 17

    (8) cuerpo -> MAIN context_to_global . OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 22


state 18

    (9) variable -> VAR ID . COLON var_typ
    (10) variable -> VAR ID . COLON var_typ dims

    COLON           shift and go to state 23


state 19

    (21) func -> FUNC context_to_local . ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local . ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    ID              shift and go to state 24


state 20

    (1) program -> encabezamiento var_list calcula_globales func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 25

state 21

    (2) program -> encabezamiento var_list calcula_globales cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list calcula_globales cuerpo .)


state 22

    (8) cuerpo -> MAIN context_to_global OPPARENTH . CLPARENTH OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 26


state 23

    (9) variable -> VAR ID COLON . var_typ
    (10) variable -> VAR ID COLON . var_typ dims
    (42) var_typ -> . INT
    (43) var_typ -> . FLOAT
    (44) var_typ -> . CHAR
    (45) var_typ -> . BOOL
    (46) var_typ -> . FRAME

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31
    FRAME           shift and go to state 32

    var_typ                        shift and go to state 27

state 24

    (21) func -> FUNC context_to_local ID . OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local ID . OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 33


state 25

    (1) program -> encabezamiento var_list calcula_globales func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list calcula_globales func_list cuerpo .)


state 26

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 34


state 27

    (9) variable -> VAR ID COLON var_typ .
    (10) variable -> VAR ID COLON var_typ . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 35

state 28

    (42) var_typ -> INT .

    OPBRACKET       reduce using rule 42 (var_typ -> INT .)
    VAR             reduce using rule 42 (var_typ -> INT .)
    MAIN            reduce using rule 42 (var_typ -> INT .)
    FUNC            reduce using rule 42 (var_typ -> INT .)
    ID              reduce using rule 42 (var_typ -> INT .)
    READ            reduce using rule 42 (var_typ -> INT .)
    WRITE           reduce using rule 42 (var_typ -> INT .)
    WHEN            reduce using rule 42 (var_typ -> INT .)
    WHILE           reduce using rule 42 (var_typ -> INT .)
    COMMA           reduce using rule 42 (var_typ -> INT .)
    CLPARENTH       reduce using rule 42 (var_typ -> INT .)


state 29

    (43) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 43 (var_typ -> FLOAT .)
    VAR             reduce using rule 43 (var_typ -> FLOAT .)
    MAIN            reduce using rule 43 (var_typ -> FLOAT .)
    FUNC            reduce using rule 43 (var_typ -> FLOAT .)
    ID              reduce using rule 43 (var_typ -> FLOAT .)
    READ            reduce using rule 43 (var_typ -> FLOAT .)
    WRITE           reduce using rule 43 (var_typ -> FLOAT .)
    WHEN            reduce using rule 43 (var_typ -> FLOAT .)
    WHILE           reduce using rule 43 (var_typ -> FLOAT .)
    COMMA           reduce using rule 43 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 43 (var_typ -> FLOAT .)


state 30

    (44) var_typ -> CHAR .

    OPBRACKET       reduce using rule 44 (var_typ -> CHAR .)
    VAR             reduce using rule 44 (var_typ -> CHAR .)
    MAIN            reduce using rule 44 (var_typ -> CHAR .)
    FUNC            reduce using rule 44 (var_typ -> CHAR .)
    ID              reduce using rule 44 (var_typ -> CHAR .)
    READ            reduce using rule 44 (var_typ -> CHAR .)
    WRITE           reduce using rule 44 (var_typ -> CHAR .)
    WHEN            reduce using rule 44 (var_typ -> CHAR .)
    WHILE           reduce using rule 44 (var_typ -> CHAR .)
    COMMA           reduce using rule 44 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 44 (var_typ -> CHAR .)


state 31

    (45) var_typ -> BOOL .

    OPBRACKET       reduce using rule 45 (var_typ -> BOOL .)
    VAR             reduce using rule 45 (var_typ -> BOOL .)
    MAIN            reduce using rule 45 (var_typ -> BOOL .)
    FUNC            reduce using rule 45 (var_typ -> BOOL .)
    ID              reduce using rule 45 (var_typ -> BOOL .)
    READ            reduce using rule 45 (var_typ -> BOOL .)
    WRITE           reduce using rule 45 (var_typ -> BOOL .)
    WHEN            reduce using rule 45 (var_typ -> BOOL .)
    WHILE           reduce using rule 45 (var_typ -> BOOL .)
    COMMA           reduce using rule 45 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 45 (var_typ -> BOOL .)


state 32

    (46) var_typ -> FRAME .

    OPBRACKET       reduce using rule 46 (var_typ -> FRAME .)
    VAR             reduce using rule 46 (var_typ -> FRAME .)
    MAIN            reduce using rule 46 (var_typ -> FRAME .)
    FUNC            reduce using rule 46 (var_typ -> FRAME .)
    ID              reduce using rule 46 (var_typ -> FRAME .)
    READ            reduce using rule 46 (var_typ -> FRAME .)
    WRITE           reduce using rule 46 (var_typ -> FRAME .)
    WHEN            reduce using rule 46 (var_typ -> FRAME .)
    WHILE           reduce using rule 46 (var_typ -> FRAME .)
    COMMA           reduce using rule 46 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 46 (var_typ -> FRAME .)


state 33

    (21) func -> FUNC context_to_local ID OPPARENTH . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local ID OPPARENTH . param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (40) param -> . ID COLON var_typ
    (41) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 38
    ID              shift and go to state 37

    param_list                     shift and go to state 39
    param                          shift and go to state 40

state 34

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 41
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 35

    (10) variable -> VAR ID COLON var_typ dims .

    VAR             reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    MAIN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    FUNC            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    ID              reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    READ            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WRITE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHEN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHILE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)


state 36

    (19) dims -> OPBRACKET . aritm CLBRACKET
    (20) dims -> OPBRACKET . aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 55
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 37

    (40) param -> ID . COLON var_typ
    (41) param -> ID . COLON var_typ dims

    COLON           shift and go to state 62


state 38

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 63


state 39

    (22) func -> FUNC context_to_local ID OPPARENTH param_list . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 64


state 40

    (17) param_list -> param . COMMA param_list
    (18) param_list -> param .

    COMMA           shift and go to state 65
    CLPARENTH       reduce using rule 18 (param_list -> param .)


state 41

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 66


state 42

    (15) estat_list -> estat . estat_list
    (16) estat_list -> estat .
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLBRACE         reduce using rule 16 (estat_list -> estat .)
    RETURN          reduce using rule 16 (estat_list -> estat .)
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat                          shift and go to state 42
    estat_list                     shift and go to state 67
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 43

    (31) estat -> asign .

    ID              reduce using rule 31 (estat -> asign .)
    READ            reduce using rule 31 (estat -> asign .)
    WRITE           reduce using rule 31 (estat -> asign .)
    WHEN            reduce using rule 31 (estat -> asign .)
    WHILE           reduce using rule 31 (estat -> asign .)
    CLBRACE         reduce using rule 31 (estat -> asign .)
    RETURN          reduce using rule 31 (estat -> asign .)


state 44

    (32) estat -> llam_void .

    ID              reduce using rule 32 (estat -> llam_void .)
    READ            reduce using rule 32 (estat -> llam_void .)
    WRITE           reduce using rule 32 (estat -> llam_void .)
    WHEN            reduce using rule 32 (estat -> llam_void .)
    WHILE           reduce using rule 32 (estat -> llam_void .)
    CLBRACE         reduce using rule 32 (estat -> llam_void .)
    RETURN          reduce using rule 32 (estat -> llam_void .)


state 45

    (33) estat -> lectura .

    ID              reduce using rule 33 (estat -> lectura .)
    READ            reduce using rule 33 (estat -> lectura .)
    WRITE           reduce using rule 33 (estat -> lectura .)
    WHEN            reduce using rule 33 (estat -> lectura .)
    WHILE           reduce using rule 33 (estat -> lectura .)
    CLBRACE         reduce using rule 33 (estat -> lectura .)
    RETURN          reduce using rule 33 (estat -> lectura .)


state 46

    (34) estat -> escritura .

    ID              reduce using rule 34 (estat -> escritura .)
    READ            reduce using rule 34 (estat -> escritura .)
    WRITE           reduce using rule 34 (estat -> escritura .)
    WHEN            reduce using rule 34 (estat -> escritura .)
    WHILE           reduce using rule 34 (estat -> escritura .)
    CLBRACE         reduce using rule 34 (estat -> escritura .)
    RETURN          reduce using rule 34 (estat -> escritura .)


state 47

    (35) estat -> carga_dt .

    ID              reduce using rule 35 (estat -> carga_dt .)
    READ            reduce using rule 35 (estat -> carga_dt .)
    WRITE           reduce using rule 35 (estat -> carga_dt .)
    WHEN            reduce using rule 35 (estat -> carga_dt .)
    WHILE           reduce using rule 35 (estat -> carga_dt .)
    CLBRACE         reduce using rule 35 (estat -> carga_dt .)
    RETURN          reduce using rule 35 (estat -> carga_dt .)


state 48

    (36) estat -> decision .

    ID              reduce using rule 36 (estat -> decision .)
    READ            reduce using rule 36 (estat -> decision .)
    WRITE           reduce using rule 36 (estat -> decision .)
    WHEN            reduce using rule 36 (estat -> decision .)
    WHILE           reduce using rule 36 (estat -> decision .)
    CLBRACE         reduce using rule 36 (estat -> decision .)
    RETURN          reduce using rule 36 (estat -> decision .)


state 49

    (37) estat -> ciclo .

    ID              reduce using rule 37 (estat -> ciclo .)
    READ            reduce using rule 37 (estat -> ciclo .)
    WRITE           reduce using rule 37 (estat -> ciclo .)
    WHEN            reduce using rule 37 (estat -> ciclo .)
    WHILE           reduce using rule 37 (estat -> ciclo .)
    CLBRACE         reduce using rule 37 (estat -> ciclo .)
    RETURN          reduce using rule 37 (estat -> ciclo .)


state 50

    (90) asign -> ID . ASGNMNT lectura
    (91) asign -> ID . ASGNMNT expr
    (92) asign -> ID . ASGNMNT CONST_STRING
    (93) asign -> ID . dims ASGNMNT lectura
    (94) asign -> ID . dims ASGNMNT expr
    (95) asign -> ID . dims ASGNMNT CONST_STRING
    (88) llam_void -> ID . OPPARENTH CLPARENTH
    (89) llam_void -> ID . OPPARENTH args CLPARENTH
    (38) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    ASGNMNT         shift and go to state 68
    OPPARENTH       shift and go to state 70
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 69

state 51

    (84) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 71


state 52

    (85) escritura -> WRITE . OPPARENTH ID CLPARENTH
    (86) escritura -> WRITE . OPPARENTH ID dims CLPARENTH
    (87) escritura -> WRITE . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 72


state 53

    (25) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 73


state 54

    (24) ciclo -> WHILE . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 74


state 55

    (19) dims -> OPBRACKET aritm . CLBRACKET
    (20) dims -> OPBRACKET aritm . CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACKET       shift and go to state 75


state 56

    (62) factor -> CONST_INT .

    TIMES           reduce using rule 62 (factor -> CONST_INT .)
    DIVIDE          reduce using rule 62 (factor -> CONST_INT .)
    PLUS            reduce using rule 62 (factor -> CONST_INT .)
    MINUS           reduce using rule 62 (factor -> CONST_INT .)
    CLBRACKET       reduce using rule 62 (factor -> CONST_INT .)
    CLPARENTH       reduce using rule 62 (factor -> CONST_INT .)
    EQUAL           reduce using rule 62 (factor -> CONST_INT .)
    UNEQUAL         reduce using rule 62 (factor -> CONST_INT .)
    LESS            reduce using rule 62 (factor -> CONST_INT .)
    LESSEQ          reduce using rule 62 (factor -> CONST_INT .)
    GREATER         reduce using rule 62 (factor -> CONST_INT .)
    GREATEREQ       reduce using rule 62 (factor -> CONST_INT .)
    ID              reduce using rule 62 (factor -> CONST_INT .)
    READ            reduce using rule 62 (factor -> CONST_INT .)
    WRITE           reduce using rule 62 (factor -> CONST_INT .)
    WHEN            reduce using rule 62 (factor -> CONST_INT .)
    WHILE           reduce using rule 62 (factor -> CONST_INT .)
    CLBRACE         reduce using rule 62 (factor -> CONST_INT .)
    RETURN          reduce using rule 62 (factor -> CONST_INT .)
    COMMA           reduce using rule 62 (factor -> CONST_INT .)
    AND             reduce using rule 62 (factor -> CONST_INT .)
    OR              reduce using rule 62 (factor -> CONST_INT .)


state 57

    (53) aritm -> term . PLUS aritm
    (54) aritm -> term . MINUS aritm
    (55) aritm -> term .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CLBRACKET       reduce using rule 55 (aritm -> term .)
    CLPARENTH       reduce using rule 55 (aritm -> term .)
    EQUAL           reduce using rule 55 (aritm -> term .)
    UNEQUAL         reduce using rule 55 (aritm -> term .)
    LESS            reduce using rule 55 (aritm -> term .)
    LESSEQ          reduce using rule 55 (aritm -> term .)
    GREATER         reduce using rule 55 (aritm -> term .)
    GREATEREQ       reduce using rule 55 (aritm -> term .)
    ID              reduce using rule 55 (aritm -> term .)
    READ            reduce using rule 55 (aritm -> term .)
    WRITE           reduce using rule 55 (aritm -> term .)
    WHEN            reduce using rule 55 (aritm -> term .)
    WHILE           reduce using rule 55 (aritm -> term .)
    CLBRACE         reduce using rule 55 (aritm -> term .)
    RETURN          reduce using rule 55 (aritm -> term .)
    COMMA           reduce using rule 55 (aritm -> term .)
    AND             reduce using rule 55 (aritm -> term .)
    OR              reduce using rule 55 (aritm -> term .)


state 58

    (56) term -> factor . TIMES term
    (57) term -> factor . DIVIDE term
    (58) term -> factor .

    TIMES           shift and go to state 78
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 58 (term -> factor .)
    MINUS           reduce using rule 58 (term -> factor .)
    CLBRACKET       reduce using rule 58 (term -> factor .)
    CLPARENTH       reduce using rule 58 (term -> factor .)
    EQUAL           reduce using rule 58 (term -> factor .)
    UNEQUAL         reduce using rule 58 (term -> factor .)
    LESS            reduce using rule 58 (term -> factor .)
    LESSEQ          reduce using rule 58 (term -> factor .)
    GREATER         reduce using rule 58 (term -> factor .)
    GREATEREQ       reduce using rule 58 (term -> factor .)
    ID              reduce using rule 58 (term -> factor .)
    READ            reduce using rule 58 (term -> factor .)
    WRITE           reduce using rule 58 (term -> factor .)
    WHEN            reduce using rule 58 (term -> factor .)
    WHILE           reduce using rule 58 (term -> factor .)
    CLBRACE         reduce using rule 58 (term -> factor .)
    RETURN          reduce using rule 58 (term -> factor .)
    COMMA           reduce using rule 58 (term -> factor .)
    AND             reduce using rule 58 (term -> factor .)
    OR              reduce using rule 58 (term -> factor .)


state 59

    (59) factor -> OPPARENTH . aritm CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 80
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 60

    (60) factor -> ID .
    (61) factor -> ID . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    TIMES           reduce using rule 60 (factor -> ID .)
    DIVIDE          reduce using rule 60 (factor -> ID .)
    PLUS            reduce using rule 60 (factor -> ID .)
    MINUS           reduce using rule 60 (factor -> ID .)
    CLBRACKET       reduce using rule 60 (factor -> ID .)
    CLPARENTH       reduce using rule 60 (factor -> ID .)
    EQUAL           reduce using rule 60 (factor -> ID .)
    UNEQUAL         reduce using rule 60 (factor -> ID .)
    LESS            reduce using rule 60 (factor -> ID .)
    LESSEQ          reduce using rule 60 (factor -> ID .)
    GREATER         reduce using rule 60 (factor -> ID .)
    GREATEREQ       reduce using rule 60 (factor -> ID .)
    ID              reduce using rule 60 (factor -> ID .)
    READ            reduce using rule 60 (factor -> ID .)
    WRITE           reduce using rule 60 (factor -> ID .)
    WHEN            reduce using rule 60 (factor -> ID .)
    WHILE           reduce using rule 60 (factor -> ID .)
    CLBRACE         reduce using rule 60 (factor -> ID .)
    RETURN          reduce using rule 60 (factor -> ID .)
    COMMA           reduce using rule 60 (factor -> ID .)
    AND             reduce using rule 60 (factor -> ID .)
    OR              reduce using rule 60 (factor -> ID .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 81

state 61

    (63) factor -> CONST_FLOAT .

    TIMES           reduce using rule 63 (factor -> CONST_FLOAT .)
    DIVIDE          reduce using rule 63 (factor -> CONST_FLOAT .)
    PLUS            reduce using rule 63 (factor -> CONST_FLOAT .)
    MINUS           reduce using rule 63 (factor -> CONST_FLOAT .)
    CLBRACKET       reduce using rule 63 (factor -> CONST_FLOAT .)
    CLPARENTH       reduce using rule 63 (factor -> CONST_FLOAT .)
    EQUAL           reduce using rule 63 (factor -> CONST_FLOAT .)
    UNEQUAL         reduce using rule 63 (factor -> CONST_FLOAT .)
    LESS            reduce using rule 63 (factor -> CONST_FLOAT .)
    LESSEQ          reduce using rule 63 (factor -> CONST_FLOAT .)
    GREATER         reduce using rule 63 (factor -> CONST_FLOAT .)
    GREATEREQ       reduce using rule 63 (factor -> CONST_FLOAT .)
    ID              reduce using rule 63 (factor -> CONST_FLOAT .)
    READ            reduce using rule 63 (factor -> CONST_FLOAT .)
    WRITE           reduce using rule 63 (factor -> CONST_FLOAT .)
    WHEN            reduce using rule 63 (factor -> CONST_FLOAT .)
    WHILE           reduce using rule 63 (factor -> CONST_FLOAT .)
    CLBRACE         reduce using rule 63 (factor -> CONST_FLOAT .)
    RETURN          reduce using rule 63 (factor -> CONST_FLOAT .)
    COMMA           reduce using rule 63 (factor -> CONST_FLOAT .)
    AND             reduce using rule 63 (factor -> CONST_FLOAT .)
    OR              reduce using rule 63 (factor -> CONST_FLOAT .)


state 62

    (40) param -> ID COLON . var_typ
    (41) param -> ID COLON . var_typ dims
    (42) var_typ -> . INT
    (43) var_typ -> . FLOAT
    (44) var_typ -> . CHAR
    (45) var_typ -> . BOOL
    (46) var_typ -> . FRAME

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31
    FRAME           shift and go to state 32

    var_typ                        shift and go to state 82

state 63

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (47) func_typ -> . INT
    (48) func_typ -> . FLOAT
    (49) func_typ -> . CHAR
    (50) func_typ -> . BOOL
    (51) func_typ -> . FRAME
    (52) func_typ -> . VOID

    INT             shift and go to state 84
    FLOAT           shift and go to state 85
    CHAR            shift and go to state 86
    BOOL            shift and go to state 87
    FRAME           shift and go to state 88
    VOID            shift and go to state 89

    func_typ                       shift and go to state 83

state 64

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 90


state 65

    (17) param_list -> param COMMA . param_list
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (40) param -> . ID COLON var_typ
    (41) param -> . ID COLON var_typ dims

    ID              shift and go to state 37

    param                          shift and go to state 40
    param_list                     shift and go to state 91

state 66

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .

    $end            reduce using rule 8 (cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .)


state 67

    (15) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 15 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 15 (estat_list -> estat estat_list .)


state 68

    (90) asign -> ID ASGNMNT . lectura
    (91) asign -> ID ASGNMNT . expr
    (92) asign -> ID ASGNMNT . CONST_STRING
    (38) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 95
    LOAD            shift and go to state 96
    READ            shift and go to state 51
    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    lectura                        shift and go to state 93
    expr                           shift and go to state 94
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 69

    (93) asign -> ID dims . ASGNMNT lectura
    (94) asign -> ID dims . ASGNMNT expr
    (95) asign -> ID dims . ASGNMNT CONST_STRING

    ASGNMNT         shift and go to state 105


state 70

    (88) llam_void -> ID OPPARENTH . CLPARENTH
    (89) llam_void -> ID OPPARENTH . args CLPARENTH
    (82) args -> . expr COMMA args
    (83) args -> . expr
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 106
    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    args                           shift and go to state 107
    expr                           shift and go to state 108
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 71

    (84) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 109


state 72

    (85) escritura -> WRITE OPPARENTH . ID CLPARENTH
    (86) escritura -> WRITE OPPARENTH . ID dims CLPARENTH
    (87) escritura -> WRITE OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 110
    CONST_STRING    shift and go to state 111


state 73

    (25) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    logic                          shift and go to state 112
    oprnd                          shift and go to state 100
    relac                          shift and go to state 104
    aritm                          shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 74

    (24) ciclo -> WHILE OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    logic                          shift and go to state 114
    oprnd                          shift and go to state 100
    relac                          shift and go to state 104
    aritm                          shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 75

    (19) dims -> OPBRACKET aritm CLBRACKET .
    (20) dims -> OPBRACKET aritm CLBRACKET . OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    MAIN            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    FUNC            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    ID              reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    READ            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WRITE           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WHEN            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WHILE           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    ASGNMNT         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    TIMES           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    DIVIDE          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    PLUS            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    MINUS           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACKET       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLPARENTH       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    EQUAL           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    UNEQUAL         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    LESS            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    LESSEQ          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATER         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATEREQ       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACE         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    RETURN          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    COMMA           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    AND             reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    OR              reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    OPBRACKET       shift and go to state 115


state 76

    (53) aritm -> term PLUS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    term                           shift and go to state 57
    aritm                          shift and go to state 116
    factor                         shift and go to state 58

state 77

    (54) aritm -> term MINUS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    term                           shift and go to state 57
    aritm                          shift and go to state 117
    factor                         shift and go to state 58

state 78

    (56) term -> factor TIMES . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    factor                         shift and go to state 58
    term                           shift and go to state 118

state 79

    (57) term -> factor DIVIDE . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    factor                         shift and go to state 58
    term                           shift and go to state 119

state 80

    (59) factor -> OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 120


state 81

    (61) factor -> ID dims .

    TIMES           reduce using rule 61 (factor -> ID dims .)
    DIVIDE          reduce using rule 61 (factor -> ID dims .)
    PLUS            reduce using rule 61 (factor -> ID dims .)
    MINUS           reduce using rule 61 (factor -> ID dims .)
    CLBRACKET       reduce using rule 61 (factor -> ID dims .)
    CLPARENTH       reduce using rule 61 (factor -> ID dims .)
    EQUAL           reduce using rule 61 (factor -> ID dims .)
    UNEQUAL         reduce using rule 61 (factor -> ID dims .)
    LESS            reduce using rule 61 (factor -> ID dims .)
    LESSEQ          reduce using rule 61 (factor -> ID dims .)
    GREATER         reduce using rule 61 (factor -> ID dims .)
    GREATEREQ       reduce using rule 61 (factor -> ID dims .)
    ID              reduce using rule 61 (factor -> ID dims .)
    READ            reduce using rule 61 (factor -> ID dims .)
    WRITE           reduce using rule 61 (factor -> ID dims .)
    WHEN            reduce using rule 61 (factor -> ID dims .)
    WHILE           reduce using rule 61 (factor -> ID dims .)
    CLBRACE         reduce using rule 61 (factor -> ID dims .)
    RETURN          reduce using rule 61 (factor -> ID dims .)
    COMMA           reduce using rule 61 (factor -> ID dims .)
    AND             reduce using rule 61 (factor -> ID dims .)
    OR              reduce using rule 61 (factor -> ID dims .)


state 82

    (40) param -> ID COLON var_typ .
    (41) param -> ID COLON var_typ . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    COMMA           reduce using rule 40 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 40 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 121

state 83

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 122


state 84

    (47) func_typ -> INT .

    OPBRACE         reduce using rule 47 (func_typ -> INT .)


state 85

    (48) func_typ -> FLOAT .

    OPBRACE         reduce using rule 48 (func_typ -> FLOAT .)


state 86

    (49) func_typ -> CHAR .

    OPBRACE         reduce using rule 49 (func_typ -> CHAR .)


state 87

    (50) func_typ -> BOOL .

    OPBRACE         reduce using rule 50 (func_typ -> BOOL .)


state 88

    (51) func_typ -> FRAME .

    OPBRACE         reduce using rule 51 (func_typ -> FRAME .)


state 89

    (52) func_typ -> VOID .

    OPBRACE         reduce using rule 52 (func_typ -> VOID .)


state 90

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (47) func_typ -> . INT
    (48) func_typ -> . FLOAT
    (49) func_typ -> . CHAR
    (50) func_typ -> . BOOL
    (51) func_typ -> . FRAME
    (52) func_typ -> . VOID

    INT             shift and go to state 84
    FLOAT           shift and go to state 85
    CHAR            shift and go to state 86
    BOOL            shift and go to state 87
    FRAME           shift and go to state 88
    VOID            shift and go to state 89

    func_typ                       shift and go to state 123

state 91

    (17) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 17 (param_list -> param COMMA param_list .)


state 92

    (70) expr -> ID . OPPARENTH CLPARENTH
    (71) expr -> ID . OPPARENTH args CLPARENTH
    (60) factor -> ID .
    (61) factor -> ID . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    OPPARENTH       shift and go to state 124
    TIMES           reduce using rule 60 (factor -> ID .)
    DIVIDE          reduce using rule 60 (factor -> ID .)
    PLUS            reduce using rule 60 (factor -> ID .)
    MINUS           reduce using rule 60 (factor -> ID .)
    EQUAL           reduce using rule 60 (factor -> ID .)
    UNEQUAL         reduce using rule 60 (factor -> ID .)
    LESS            reduce using rule 60 (factor -> ID .)
    LESSEQ          reduce using rule 60 (factor -> ID .)
    GREATER         reduce using rule 60 (factor -> ID .)
    GREATEREQ       reduce using rule 60 (factor -> ID .)
    ID              reduce using rule 60 (factor -> ID .)
    READ            reduce using rule 60 (factor -> ID .)
    WRITE           reduce using rule 60 (factor -> ID .)
    WHEN            reduce using rule 60 (factor -> ID .)
    WHILE           reduce using rule 60 (factor -> ID .)
    CLBRACE         reduce using rule 60 (factor -> ID .)
    RETURN          reduce using rule 60 (factor -> ID .)
    COMMA           reduce using rule 60 (factor -> ID .)
    CLPARENTH       reduce using rule 60 (factor -> ID .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 81

state 93

    (90) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 90 (asign -> ID ASGNMNT lectura .)


state 94

    (91) asign -> ID ASGNMNT expr .

    ID              reduce using rule 91 (asign -> ID ASGNMNT expr .)
    READ            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WRITE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHEN            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHILE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    CLBRACE         reduce using rule 91 (asign -> ID ASGNMNT expr .)
    RETURN          reduce using rule 91 (asign -> ID ASGNMNT expr .)


state 95

    (92) asign -> ID ASGNMNT CONST_STRING .

    ID              reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    READ            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)


state 96

    (38) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 125


state 97

    (75) oprnd -> OPPARENTH . logic CLPARENTH
    (59) factor -> OPPARENTH . aritm CLPARENTH
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    logic                          shift and go to state 126
    aritm                          shift and go to state 127
    oprnd                          shift and go to state 100
    term                           shift and go to state 57
    relac                          shift and go to state 104
    factor                         shift and go to state 58

state 98

    (68) expr -> aritm .
    (76) relac -> aritm . EQUAL aritm
    (77) relac -> aritm . UNEQUAL aritm
    (78) relac -> aritm . LESS aritm
    (79) relac -> aritm . LESSEQ aritm
    (80) relac -> aritm . GREATER aritm
    (81) relac -> aritm . GREATEREQ aritm

    ID              reduce using rule 68 (expr -> aritm .)
    READ            reduce using rule 68 (expr -> aritm .)
    WRITE           reduce using rule 68 (expr -> aritm .)
    WHEN            reduce using rule 68 (expr -> aritm .)
    WHILE           reduce using rule 68 (expr -> aritm .)
    CLBRACE         reduce using rule 68 (expr -> aritm .)
    RETURN          reduce using rule 68 (expr -> aritm .)
    COMMA           reduce using rule 68 (expr -> aritm .)
    CLPARENTH       reduce using rule 68 (expr -> aritm .)
    EQUAL           shift and go to state 128
    UNEQUAL         shift and go to state 129
    LESS            shift and go to state 130
    LESSEQ          shift and go to state 131
    GREATER         shift and go to state 132
    GREATEREQ       shift and go to state 133


state 99

    (69) expr -> logic .

    ID              reduce using rule 69 (expr -> logic .)
    READ            reduce using rule 69 (expr -> logic .)
    WRITE           reduce using rule 69 (expr -> logic .)
    WHEN            reduce using rule 69 (expr -> logic .)
    WHILE           reduce using rule 69 (expr -> logic .)
    CLBRACE         reduce using rule 69 (expr -> logic .)
    RETURN          reduce using rule 69 (expr -> logic .)
    COMMA           reduce using rule 69 (expr -> logic .)
    CLPARENTH       reduce using rule 69 (expr -> logic .)


state 100

    (64) logic -> oprnd . AND logic
    (65) logic -> oprnd . OR logic
    (67) logic -> oprnd .

    AND             shift and go to state 134
    OR              shift and go to state 135
    ID              reduce using rule 67 (logic -> oprnd .)
    READ            reduce using rule 67 (logic -> oprnd .)
    WRITE           reduce using rule 67 (logic -> oprnd .)
    WHEN            reduce using rule 67 (logic -> oprnd .)
    WHILE           reduce using rule 67 (logic -> oprnd .)
    CLBRACE         reduce using rule 67 (logic -> oprnd .)
    RETURN          reduce using rule 67 (logic -> oprnd .)
    COMMA           reduce using rule 67 (logic -> oprnd .)
    CLPARENTH       reduce using rule 67 (logic -> oprnd .)


state 101

    (66) logic -> NOT . oprnd
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    oprnd                          shift and go to state 136
    relac                          shift and go to state 104
    aritm                          shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 102

    (72) oprnd -> FALSE .

    AND             reduce using rule 72 (oprnd -> FALSE .)
    OR              reduce using rule 72 (oprnd -> FALSE .)
    ID              reduce using rule 72 (oprnd -> FALSE .)
    READ            reduce using rule 72 (oprnd -> FALSE .)
    WRITE           reduce using rule 72 (oprnd -> FALSE .)
    WHEN            reduce using rule 72 (oprnd -> FALSE .)
    WHILE           reduce using rule 72 (oprnd -> FALSE .)
    CLBRACE         reduce using rule 72 (oprnd -> FALSE .)
    RETURN          reduce using rule 72 (oprnd -> FALSE .)
    COMMA           reduce using rule 72 (oprnd -> FALSE .)
    CLPARENTH       reduce using rule 72 (oprnd -> FALSE .)


state 103

    (73) oprnd -> TRUE .

    AND             reduce using rule 73 (oprnd -> TRUE .)
    OR              reduce using rule 73 (oprnd -> TRUE .)
    ID              reduce using rule 73 (oprnd -> TRUE .)
    READ            reduce using rule 73 (oprnd -> TRUE .)
    WRITE           reduce using rule 73 (oprnd -> TRUE .)
    WHEN            reduce using rule 73 (oprnd -> TRUE .)
    WHILE           reduce using rule 73 (oprnd -> TRUE .)
    CLBRACE         reduce using rule 73 (oprnd -> TRUE .)
    RETURN          reduce using rule 73 (oprnd -> TRUE .)
    COMMA           reduce using rule 73 (oprnd -> TRUE .)
    CLPARENTH       reduce using rule 73 (oprnd -> TRUE .)


state 104

    (74) oprnd -> relac .

    AND             reduce using rule 74 (oprnd -> relac .)
    OR              reduce using rule 74 (oprnd -> relac .)
    ID              reduce using rule 74 (oprnd -> relac .)
    READ            reduce using rule 74 (oprnd -> relac .)
    WRITE           reduce using rule 74 (oprnd -> relac .)
    WHEN            reduce using rule 74 (oprnd -> relac .)
    WHILE           reduce using rule 74 (oprnd -> relac .)
    CLBRACE         reduce using rule 74 (oprnd -> relac .)
    RETURN          reduce using rule 74 (oprnd -> relac .)
    COMMA           reduce using rule 74 (oprnd -> relac .)
    CLPARENTH       reduce using rule 74 (oprnd -> relac .)


state 105

    (93) asign -> ID dims ASGNMNT . lectura
    (94) asign -> ID dims ASGNMNT . expr
    (95) asign -> ID dims ASGNMNT . CONST_STRING
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 139
    READ            shift and go to state 51
    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    lectura                        shift and go to state 137
    expr                           shift and go to state 138
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 106

    (88) llam_void -> ID OPPARENTH CLPARENTH .

    ID              reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)


state 107

    (89) llam_void -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 140


state 108

    (82) args -> expr . COMMA args
    (83) args -> expr .

    COMMA           shift and go to state 141
    CLPARENTH       reduce using rule 83 (args -> expr .)


state 109

    (84) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)


state 110

    (85) escritura -> WRITE OPPARENTH ID . CLPARENTH
    (86) escritura -> WRITE OPPARENTH ID . dims CLPARENTH
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLPARENTH       shift and go to state 142
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 143

state 111

    (87) escritura -> WRITE OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 144


state 112

    (25) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 145


state 113

    (76) relac -> aritm . EQUAL aritm
    (77) relac -> aritm . UNEQUAL aritm
    (78) relac -> aritm . LESS aritm
    (79) relac -> aritm . LESSEQ aritm
    (80) relac -> aritm . GREATER aritm
    (81) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 128
    UNEQUAL         shift and go to state 129
    LESS            shift and go to state 130
    LESSEQ          shift and go to state 131
    GREATER         shift and go to state 132
    GREATEREQ       shift and go to state 133


state 114

    (24) ciclo -> WHILE OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 146


state 115

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET . CONST_INT CLBRACKET

    CONST_INT       shift and go to state 147


state 116

    (53) aritm -> term PLUS aritm .

    CLBRACKET       reduce using rule 53 (aritm -> term PLUS aritm .)
    CLPARENTH       reduce using rule 53 (aritm -> term PLUS aritm .)
    EQUAL           reduce using rule 53 (aritm -> term PLUS aritm .)
    UNEQUAL         reduce using rule 53 (aritm -> term PLUS aritm .)
    LESS            reduce using rule 53 (aritm -> term PLUS aritm .)
    LESSEQ          reduce using rule 53 (aritm -> term PLUS aritm .)
    GREATER         reduce using rule 53 (aritm -> term PLUS aritm .)
    GREATEREQ       reduce using rule 53 (aritm -> term PLUS aritm .)
    ID              reduce using rule 53 (aritm -> term PLUS aritm .)
    READ            reduce using rule 53 (aritm -> term PLUS aritm .)
    WRITE           reduce using rule 53 (aritm -> term PLUS aritm .)
    WHEN            reduce using rule 53 (aritm -> term PLUS aritm .)
    WHILE           reduce using rule 53 (aritm -> term PLUS aritm .)
    CLBRACE         reduce using rule 53 (aritm -> term PLUS aritm .)
    RETURN          reduce using rule 53 (aritm -> term PLUS aritm .)
    COMMA           reduce using rule 53 (aritm -> term PLUS aritm .)
    AND             reduce using rule 53 (aritm -> term PLUS aritm .)
    OR              reduce using rule 53 (aritm -> term PLUS aritm .)


state 117

    (54) aritm -> term MINUS aritm .

    CLBRACKET       reduce using rule 54 (aritm -> term MINUS aritm .)
    CLPARENTH       reduce using rule 54 (aritm -> term MINUS aritm .)
    EQUAL           reduce using rule 54 (aritm -> term MINUS aritm .)
    UNEQUAL         reduce using rule 54 (aritm -> term MINUS aritm .)
    LESS            reduce using rule 54 (aritm -> term MINUS aritm .)
    LESSEQ          reduce using rule 54 (aritm -> term MINUS aritm .)
    GREATER         reduce using rule 54 (aritm -> term MINUS aritm .)
    GREATEREQ       reduce using rule 54 (aritm -> term MINUS aritm .)
    ID              reduce using rule 54 (aritm -> term MINUS aritm .)
    READ            reduce using rule 54 (aritm -> term MINUS aritm .)
    WRITE           reduce using rule 54 (aritm -> term MINUS aritm .)
    WHEN            reduce using rule 54 (aritm -> term MINUS aritm .)
    WHILE           reduce using rule 54 (aritm -> term MINUS aritm .)
    CLBRACE         reduce using rule 54 (aritm -> term MINUS aritm .)
    RETURN          reduce using rule 54 (aritm -> term MINUS aritm .)
    COMMA           reduce using rule 54 (aritm -> term MINUS aritm .)
    AND             reduce using rule 54 (aritm -> term MINUS aritm .)
    OR              reduce using rule 54 (aritm -> term MINUS aritm .)


state 118

    (56) term -> factor TIMES term .

    PLUS            reduce using rule 56 (term -> factor TIMES term .)
    MINUS           reduce using rule 56 (term -> factor TIMES term .)
    CLBRACKET       reduce using rule 56 (term -> factor TIMES term .)
    CLPARENTH       reduce using rule 56 (term -> factor TIMES term .)
    EQUAL           reduce using rule 56 (term -> factor TIMES term .)
    UNEQUAL         reduce using rule 56 (term -> factor TIMES term .)
    LESS            reduce using rule 56 (term -> factor TIMES term .)
    LESSEQ          reduce using rule 56 (term -> factor TIMES term .)
    GREATER         reduce using rule 56 (term -> factor TIMES term .)
    GREATEREQ       reduce using rule 56 (term -> factor TIMES term .)
    ID              reduce using rule 56 (term -> factor TIMES term .)
    READ            reduce using rule 56 (term -> factor TIMES term .)
    WRITE           reduce using rule 56 (term -> factor TIMES term .)
    WHEN            reduce using rule 56 (term -> factor TIMES term .)
    WHILE           reduce using rule 56 (term -> factor TIMES term .)
    CLBRACE         reduce using rule 56 (term -> factor TIMES term .)
    RETURN          reduce using rule 56 (term -> factor TIMES term .)
    COMMA           reduce using rule 56 (term -> factor TIMES term .)
    AND             reduce using rule 56 (term -> factor TIMES term .)
    OR              reduce using rule 56 (term -> factor TIMES term .)


state 119

    (57) term -> factor DIVIDE term .

    PLUS            reduce using rule 57 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 57 (term -> factor DIVIDE term .)
    CLBRACKET       reduce using rule 57 (term -> factor DIVIDE term .)
    CLPARENTH       reduce using rule 57 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 57 (term -> factor DIVIDE term .)
    UNEQUAL         reduce using rule 57 (term -> factor DIVIDE term .)
    LESS            reduce using rule 57 (term -> factor DIVIDE term .)
    LESSEQ          reduce using rule 57 (term -> factor DIVIDE term .)
    GREATER         reduce using rule 57 (term -> factor DIVIDE term .)
    GREATEREQ       reduce using rule 57 (term -> factor DIVIDE term .)
    ID              reduce using rule 57 (term -> factor DIVIDE term .)
    READ            reduce using rule 57 (term -> factor DIVIDE term .)
    WRITE           reduce using rule 57 (term -> factor DIVIDE term .)
    WHEN            reduce using rule 57 (term -> factor DIVIDE term .)
    WHILE           reduce using rule 57 (term -> factor DIVIDE term .)
    CLBRACE         reduce using rule 57 (term -> factor DIVIDE term .)
    RETURN          reduce using rule 57 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 57 (term -> factor DIVIDE term .)
    AND             reduce using rule 57 (term -> factor DIVIDE term .)
    OR              reduce using rule 57 (term -> factor DIVIDE term .)


state 120

    (59) factor -> OPPARENTH aritm CLPARENTH .

    TIMES           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    DIVIDE          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    PLUS            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    MINUS           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACKET       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLPARENTH       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    EQUAL           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    UNEQUAL         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    LESS            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    LESSEQ          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATER         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATEREQ       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    ID              reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    COMMA           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    AND             reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    OR              reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)


state 121

    (41) param -> ID COLON var_typ dims .

    COMMA           reduce using rule 41 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 41 (param -> ID COLON var_typ dims .)


state 122

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (27) func_cont -> . var_list estat_list RETURN expr
    (28) func_cont -> . estat_list RETURN expr
    (29) func_cont -> . var_list estat_list
    (30) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    func_cont                      shift and go to state 148
    var_list                       shift and go to state 149
    estat_list                     shift and go to state 150
    variable                       shift and go to state 7
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 123

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 151


state 124

    (70) expr -> ID OPPARENTH . CLPARENTH
    (71) expr -> ID OPPARENTH . args CLPARENTH
    (82) args -> . expr COMMA args
    (83) args -> . expr
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 152
    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    args                           shift and go to state 153
    expr                           shift and go to state 108
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 125

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 154
    CONST_STRING    shift and go to state 155


state 126

    (75) oprnd -> OPPARENTH logic . CLPARENTH

    CLPARENTH       shift and go to state 156


state 127

    (59) factor -> OPPARENTH aritm . CLPARENTH
    (76) relac -> aritm . EQUAL aritm
    (77) relac -> aritm . UNEQUAL aritm
    (78) relac -> aritm . LESS aritm
    (79) relac -> aritm . LESSEQ aritm
    (80) relac -> aritm . GREATER aritm
    (81) relac -> aritm . GREATEREQ aritm

    CLPARENTH       shift and go to state 120
    EQUAL           shift and go to state 128
    UNEQUAL         shift and go to state 129
    LESS            shift and go to state 130
    LESSEQ          shift and go to state 131
    GREATER         shift and go to state 132
    GREATEREQ       shift and go to state 133


state 128

    (76) relac -> aritm EQUAL . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 157
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 129

    (77) relac -> aritm UNEQUAL . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 158
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 130

    (78) relac -> aritm LESS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 159
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 131

    (79) relac -> aritm LESSEQ . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 160
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 132

    (80) relac -> aritm GREATER . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 161
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 133

    (81) relac -> aritm GREATEREQ . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 162
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 134

    (64) logic -> oprnd AND . logic
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    oprnd                          shift and go to state 100
    logic                          shift and go to state 163
    relac                          shift and go to state 104
    aritm                          shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 135

    (65) logic -> oprnd OR . logic
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT

    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    oprnd                          shift and go to state 100
    logic                          shift and go to state 164
    relac                          shift and go to state 104
    aritm                          shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 136

    (66) logic -> NOT oprnd .

    ID              reduce using rule 66 (logic -> NOT oprnd .)
    READ            reduce using rule 66 (logic -> NOT oprnd .)
    WRITE           reduce using rule 66 (logic -> NOT oprnd .)
    WHEN            reduce using rule 66 (logic -> NOT oprnd .)
    WHILE           reduce using rule 66 (logic -> NOT oprnd .)
    CLBRACE         reduce using rule 66 (logic -> NOT oprnd .)
    RETURN          reduce using rule 66 (logic -> NOT oprnd .)
    COMMA           reduce using rule 66 (logic -> NOT oprnd .)
    CLPARENTH       reduce using rule 66 (logic -> NOT oprnd .)


state 137

    (93) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 93 (asign -> ID dims ASGNMNT lectura .)


state 138

    (94) asign -> ID dims ASGNMNT expr .

    ID              reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    READ            reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    WRITE           reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    WHEN            reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    WHILE           reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    CLBRACE         reduce using rule 94 (asign -> ID dims ASGNMNT expr .)
    RETURN          reduce using rule 94 (asign -> ID dims ASGNMNT expr .)


state 139

    (95) asign -> ID dims ASGNMNT CONST_STRING .

    ID              reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    READ            reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 95 (asign -> ID dims ASGNMNT CONST_STRING .)


state 140

    (89) llam_void -> ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)


state 141

    (82) args -> expr COMMA . args
    (82) args -> . expr COMMA args
    (83) args -> . expr
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    expr                           shift and go to state 108
    args                           shift and go to state 165
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 142

    (85) escritura -> WRITE OPPARENTH ID CLPARENTH .

    ID              reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)


state 143

    (86) escritura -> WRITE OPPARENTH ID dims . CLPARENTH

    CLPARENTH       shift and go to state 166


state 144

    (87) escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)


state 145

    (25) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    THEN            shift and go to state 167


state 146

    (24) ciclo -> WHILE OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE

    THEN            shift and go to state 168


state 147

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT . CLBRACKET

    CLBRACKET       shift and go to state 169


state 148

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 170


state 149

    (27) func_cont -> var_list . estat_list RETURN expr
    (29) func_cont -> var_list . estat_list
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 171
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 150

    (28) func_cont -> estat_list . RETURN expr
    (30) func_cont -> estat_list .

    RETURN          shift and go to state 172
    CLBRACE         reduce using rule 30 (func_cont -> estat_list .)


state 151

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (27) func_cont -> . var_list estat_list RETURN expr
    (28) func_cont -> . estat_list RETURN expr
    (29) func_cont -> . var_list estat_list
    (30) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    func_cont                      shift and go to state 173
    var_list                       shift and go to state 149
    estat_list                     shift and go to state 150
    variable                       shift and go to state 7
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 152

    (70) expr -> ID OPPARENTH CLPARENTH .

    ID              reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    COMMA           reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)
    CLPARENTH       reduce using rule 70 (expr -> ID OPPARENTH CLPARENTH .)


state 153

    (71) expr -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 174


state 154

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 175


state 155

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 176


state 156

    (75) oprnd -> OPPARENTH logic CLPARENTH .

    AND             reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    OR              reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    ID              reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    READ            reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    WRITE           reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHEN            reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHILE           reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLBRACE         reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    RETURN          reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    COMMA           reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLPARENTH       reduce using rule 75 (oprnd -> OPPARENTH logic CLPARENTH .)


state 157

    (76) relac -> aritm EQUAL aritm .

    AND             reduce using rule 76 (relac -> aritm EQUAL aritm .)
    OR              reduce using rule 76 (relac -> aritm EQUAL aritm .)
    ID              reduce using rule 76 (relac -> aritm EQUAL aritm .)
    READ            reduce using rule 76 (relac -> aritm EQUAL aritm .)
    WRITE           reduce using rule 76 (relac -> aritm EQUAL aritm .)
    WHEN            reduce using rule 76 (relac -> aritm EQUAL aritm .)
    WHILE           reduce using rule 76 (relac -> aritm EQUAL aritm .)
    CLBRACE         reduce using rule 76 (relac -> aritm EQUAL aritm .)
    RETURN          reduce using rule 76 (relac -> aritm EQUAL aritm .)
    COMMA           reduce using rule 76 (relac -> aritm EQUAL aritm .)
    CLPARENTH       reduce using rule 76 (relac -> aritm EQUAL aritm .)


state 158

    (77) relac -> aritm UNEQUAL aritm .

    AND             reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    OR              reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    ID              reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    READ            reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    WRITE           reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    WHEN            reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    WHILE           reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    CLBRACE         reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    RETURN          reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    COMMA           reduce using rule 77 (relac -> aritm UNEQUAL aritm .)
    CLPARENTH       reduce using rule 77 (relac -> aritm UNEQUAL aritm .)


state 159

    (78) relac -> aritm LESS aritm .

    AND             reduce using rule 78 (relac -> aritm LESS aritm .)
    OR              reduce using rule 78 (relac -> aritm LESS aritm .)
    ID              reduce using rule 78 (relac -> aritm LESS aritm .)
    READ            reduce using rule 78 (relac -> aritm LESS aritm .)
    WRITE           reduce using rule 78 (relac -> aritm LESS aritm .)
    WHEN            reduce using rule 78 (relac -> aritm LESS aritm .)
    WHILE           reduce using rule 78 (relac -> aritm LESS aritm .)
    CLBRACE         reduce using rule 78 (relac -> aritm LESS aritm .)
    RETURN          reduce using rule 78 (relac -> aritm LESS aritm .)
    COMMA           reduce using rule 78 (relac -> aritm LESS aritm .)
    CLPARENTH       reduce using rule 78 (relac -> aritm LESS aritm .)


state 160

    (79) relac -> aritm LESSEQ aritm .

    AND             reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    OR              reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    ID              reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    READ            reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    WRITE           reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    WHEN            reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    WHILE           reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    CLBRACE         reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    RETURN          reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    COMMA           reduce using rule 79 (relac -> aritm LESSEQ aritm .)
    CLPARENTH       reduce using rule 79 (relac -> aritm LESSEQ aritm .)


state 161

    (80) relac -> aritm GREATER aritm .

    AND             reduce using rule 80 (relac -> aritm GREATER aritm .)
    OR              reduce using rule 80 (relac -> aritm GREATER aritm .)
    ID              reduce using rule 80 (relac -> aritm GREATER aritm .)
    READ            reduce using rule 80 (relac -> aritm GREATER aritm .)
    WRITE           reduce using rule 80 (relac -> aritm GREATER aritm .)
    WHEN            reduce using rule 80 (relac -> aritm GREATER aritm .)
    WHILE           reduce using rule 80 (relac -> aritm GREATER aritm .)
    CLBRACE         reduce using rule 80 (relac -> aritm GREATER aritm .)
    RETURN          reduce using rule 80 (relac -> aritm GREATER aritm .)
    COMMA           reduce using rule 80 (relac -> aritm GREATER aritm .)
    CLPARENTH       reduce using rule 80 (relac -> aritm GREATER aritm .)


state 162

    (81) relac -> aritm GREATEREQ aritm .

    AND             reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    OR              reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    ID              reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    READ            reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    WRITE           reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    WHEN            reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    WHILE           reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    CLBRACE         reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    RETURN          reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    COMMA           reduce using rule 81 (relac -> aritm GREATEREQ aritm .)
    CLPARENTH       reduce using rule 81 (relac -> aritm GREATEREQ aritm .)


state 163

    (64) logic -> oprnd AND logic .

    ID              reduce using rule 64 (logic -> oprnd AND logic .)
    READ            reduce using rule 64 (logic -> oprnd AND logic .)
    WRITE           reduce using rule 64 (logic -> oprnd AND logic .)
    WHEN            reduce using rule 64 (logic -> oprnd AND logic .)
    WHILE           reduce using rule 64 (logic -> oprnd AND logic .)
    CLBRACE         reduce using rule 64 (logic -> oprnd AND logic .)
    RETURN          reduce using rule 64 (logic -> oprnd AND logic .)
    COMMA           reduce using rule 64 (logic -> oprnd AND logic .)
    CLPARENTH       reduce using rule 64 (logic -> oprnd AND logic .)


state 164

    (65) logic -> oprnd OR logic .

    ID              reduce using rule 65 (logic -> oprnd OR logic .)
    READ            reduce using rule 65 (logic -> oprnd OR logic .)
    WRITE           reduce using rule 65 (logic -> oprnd OR logic .)
    WHEN            reduce using rule 65 (logic -> oprnd OR logic .)
    WHILE           reduce using rule 65 (logic -> oprnd OR logic .)
    CLBRACE         reduce using rule 65 (logic -> oprnd OR logic .)
    RETURN          reduce using rule 65 (logic -> oprnd OR logic .)
    COMMA           reduce using rule 65 (logic -> oprnd OR logic .)
    CLPARENTH       reduce using rule 65 (logic -> oprnd OR logic .)


state 165

    (82) args -> expr COMMA args .

    CLPARENTH       reduce using rule 82 (args -> expr COMMA args .)


state 166

    (86) escritura -> WRITE OPPARENTH ID dims CLPARENTH .

    ID              reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    READ            reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WRITE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHEN            reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHILE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    CLBRACE         reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    RETURN          reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)


state 167

    (25) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 177


state 168

    (24) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 178


state 169

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .

    VAR             reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MAIN            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    FUNC            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ID              reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    READ            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WRITE           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHEN            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHILE           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ASGNMNT         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    TIMES           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    DIVIDE          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    PLUS            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MINUS           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACKET       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLPARENTH       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    EQUAL           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    UNEQUAL         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESS            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESSEQ          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATER         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATEREQ       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACE         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    RETURN          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    COMMA           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    AND             reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    OR              reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)


state 170

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 21 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 21 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 171

    (27) func_cont -> var_list estat_list . RETURN expr
    (29) func_cont -> var_list estat_list .

    RETURN          shift and go to state 179
    CLBRACE         reduce using rule 29 (func_cont -> var_list estat_list .)


state 172

    (28) func_cont -> estat_list RETURN . expr
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    expr                           shift and go to state 180
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 173

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 181


state 174

    (71) expr -> ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    COMMA           reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)
    CLPARENTH       reduce using rule 71 (expr -> ID OPPARENTH args CLPARENTH .)


state 175

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 176

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)


state 177

    (25) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 182
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 178

    (24) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 183
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 179

    (27) func_cont -> var_list estat_list RETURN . expr
    (68) expr -> . aritm
    (69) expr -> . logic
    (70) expr -> . ID OPPARENTH CLPARENTH
    (71) expr -> . ID OPPARENTH args CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (64) logic -> . oprnd AND logic
    (65) logic -> . oprnd OR logic
    (66) logic -> . NOT oprnd
    (67) logic -> . oprnd
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (72) oprnd -> . FALSE
    (73) oprnd -> . TRUE
    (74) oprnd -> . relac
    (75) oprnd -> . OPPARENTH logic CLPARENTH
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (76) relac -> . aritm EQUAL aritm
    (77) relac -> . aritm UNEQUAL aritm
    (78) relac -> . aritm LESS aritm
    (79) relac -> . aritm LESSEQ aritm
    (80) relac -> . aritm GREATER aritm
    (81) relac -> . aritm GREATEREQ aritm

    ID              shift and go to state 92
    NOT             shift and go to state 101
    FALSE           shift and go to state 102
    TRUE            shift and go to state 103
    OPPARENTH       shift and go to state 97
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    expr                           shift and go to state 184
    aritm                          shift and go to state 98
    logic                          shift and go to state 99
    term                           shift and go to state 57
    oprnd                          shift and go to state 100
    factor                         shift and go to state 58
    relac                          shift and go to state 104

state 180

    (28) func_cont -> estat_list RETURN expr .

    CLBRACE         reduce using rule 28 (func_cont -> estat_list RETURN expr .)


state 181

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 182

    (25) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE
    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLBRACE         shift and go to state 185


state 183

    (24) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 186


state 184

    (27) func_cont -> var_list estat_list RETURN expr .

    CLBRACE         reduce using rule 27 (func_cont -> var_list estat_list RETURN expr .)


state 185

    (25) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .
    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE OPBRACE estat_list CLBRACE

    ID              reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 25 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    ELSE            shift and go to state 187


state 186

    (24) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .

    ID              reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 24 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)


state 187

    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 188


state 188

    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID dims ASGNMNT lectura
    (94) asign -> . ID dims ASGNMNT expr
    (95) asign -> . ID dims ASGNMNT CONST_STRING
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 189
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 189

    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 190


state 190

    (26) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .

    ID              reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 26 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)

