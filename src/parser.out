Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list func_list cuerpo
Rule 2     program -> encabezamiento var_list cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     calcula_globales -> <empty>
Rule 6     encabezamiento -> PROGRAM ID
Rule 7     context_to_global -> <empty>
Rule 8     cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
Rule 9     variable -> VAR ID COLON var_typ
Rule 10    variable -> VAR ID COLON var_typ dims
Rule 11    var_list -> variable var_list
Rule 12    var_list -> variable
Rule 13    func_list -> func func_list
Rule 14    func_list -> func
Rule 15    estat_list -> estat estat_list
Rule 16    estat_list -> estat
Rule 17    param_list -> param COMMA param_list
Rule 18    param_list -> param
Rule 19    save_array_size -> <empty>
Rule 20    dims -> OPBRACKET aritm save_array_size CLBRACKET
Rule 21    dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET
Rule 22    func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 23    func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 24    context_to_local -> <empty>
Rule 25    ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 26    conditional_q1 -> <empty>
Rule 27    conditional_q2 -> <empty>
Rule 28    conditional_q3 -> <empty>
Rule 29    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
Rule 30    decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
Rule 31    func_cont -> var_list estat_list RETURN aritm
Rule 32    func_cont -> estat_list RETURN aritm
Rule 33    func_cont -> var_list estat_list
Rule 34    func_cont -> estat_list
Rule 35    estat -> asign
Rule 36    estat -> llam_void
Rule 37    estat -> lectura
Rule 38    estat -> escritura
Rule 39    estat -> carga_dt
Rule 40    estat -> decision
Rule 41    estat -> ciclo
Rule 42    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 43    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
Rule 44    param -> ID COLON var_typ
Rule 45    param -> ID COLON var_typ dims
Rule 46    var_typ -> INT
Rule 47    var_typ -> FLOAT
Rule 48    var_typ -> CHAR
Rule 49    var_typ -> BOOL
Rule 50    var_typ -> FRAME
Rule 51    func_typ -> INT
Rule 52    func_typ -> FLOAT
Rule 53    func_typ -> CHAR
Rule 54    func_typ -> BOOL
Rule 55    func_typ -> FRAME
Rule 56    func_typ -> VOID
Rule 57    check_aritm_operation -> <empty>
Rule 58    check_aritm -> <empty>
Rule 59    aritm -> term check_aritm PLUS check_aritm_operation aritm
Rule 60    aritm -> term check_aritm MINUS check_aritm_operation aritm
Rule 61    aritm -> term check_aritm
Rule 62    check_term_operation -> <empty>
Rule 63    check_term -> <empty>
Rule 64    term -> factor check_term TIMES check_term_operation term
Rule 65    term -> factor check_term DIVIDE check_term_operation term
Rule 66    term -> factor check_term
Rule 67    factortype_const_int -> <empty>
Rule 68    factortype_const_float -> <empty>
Rule 69    factor_const -> CONST_INT factortype_const_int
Rule 70    factor_const -> CONST_FLOAT factortype_const_float
Rule 71    factor_var -> ID
Rule 72    factor_var -> ID dims
Rule 73    factor_function_call -> ID OPPARENTH CLPARENTH
Rule 74    factor_function_call -> ID OPPARENTH args CLPARENTH
Rule 75    check_parenth -> <empty>
Rule 76    factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth
Rule 77    factor -> factor_function_call
Rule 78    factor -> factor_var
Rule 79    factor -> factor_const
Rule 80    relac -> aritm EQUAL aritm
Rule 81    relac -> aritm UNEQUAL aritm
Rule 82    relac -> aritm LESS aritm
Rule 83    relac -> aritm LESSEQ aritm
Rule 84    relac -> aritm GREATER aritm
Rule 85    relac -> aritm GREATEREQ aritm
Rule 86    args -> aritm COMMA args
Rule 87    args -> aritm
Rule 88    lectura -> READ OPPARENTH CLPARENTH
Rule 89    escritura -> WRITE OPPARENTH aritm CLPARENTH
Rule 90    escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH
Rule 91    llam_void -> ID OPPARENTH CLPARENTH
Rule 92    llam_void -> ID OPPARENTH args CLPARENTH
Rule 93    asign -> ID ASGNMNT lectura
Rule 94    asign -> ID ASGNMNT aritm
Rule 95    asign -> ID ASGNMNT CONST_STRING
Rule 96    asign -> ID dims ASGNMNT lectura
Rule 97    asign -> ID dims ASGNMNT aritm
Rule 98    asign -> ID dims ASGNMNT CONST_STRING

Terminals, with rules where they appear

ASGNMNT              : 42 43 93 94 95 96 97 98
BOOL                 : 49 54
CHAR                 : 48 53
CLBRACE              : 8 22 23 25 29 30 30
CLBRACKET            : 20 21 21
CLPARENTH            : 8 22 23 25 29 30 42 43 73 74 76 88 89 90 91 92
COLON                : 9 10 22 23 44 45
COMMA                : 17 86
CONST_FLOAT          : 70
CONST_INT            : 69
CONST_STRING         : 43 90 95 98
DIVIDE               : 65
ELSE                 : 30
EQUAL                : 80
FLOAT                : 47 52
FRAME                : 50 55
FUNC                 : 22 23
GREATER              : 84
GREATEREQ            : 85
ID                   : 6 9 10 22 23 42 42 43 44 45 71 72 73 74 91 92 93 94 95 96 97 98
INT                  : 46 51
LESS                 : 82
LESSEQ               : 83
LOAD                 : 42 43
MAIN                 : 8
MINUS                : 60
OPBRACE              : 8 22 23 25 29 30 30
OPBRACKET            : 20 21 21
OPPARENTH            : 8 22 23 25 29 30 42 43 73 74 76 88 89 90 91 92
PLUS                 : 59
PROGRAM              : 6
READ                 : 88
RETURN               : 31 32
THEN                 : 25 29 30
TIMES                : 64
UNEQUAL              : 81
VAR                  : 9 10
VOID                 : 56
WHEN                 : 29 30
WHILE                : 25
WRITE                : 89 90
error                : 

Nonterminals, with rules where they appear

args                 : 74 86 92
aritm                : 20 21 21 31 32 59 60 76 80 80 81 81 82 82 83 83 84 84 85 85 86 87 89 94 97
asign                : 35
calcula_globales     : 8
carga_dt             : 39
check_aritm          : 59 60 61
check_aritm_operation : 59 60
check_parenth        : 76 76
check_term           : 64 65 66
check_term_operation : 64 65
ciclo                : 41
conditional_q1       : 29 30
conditional_q2       : 29 30
conditional_q3       : 30
context_to_global    : 8
context_to_local     : 22 23
cuerpo               : 1 2 3 4
decision             : 40
dims                 : 10 45 72 96 97 98
encabezamiento       : 1 2 3 4
escritura            : 38
estat                : 15 16
estat_list           : 8 15 25 29 30 30 31 32 33 34
factor               : 64 65 66
factor_const         : 79
factor_function_call : 77
factor_var           : 78
factortype_const_float : 70
factortype_const_int : 69
func                 : 13 14
func_cont            : 22 23
func_list            : 1 3 13
func_typ             : 22 23
lectura              : 37 93 96
llam_void            : 36
param                : 17 18
param_list           : 17 23
program              : 0
relac                : 25 29 30
save_array_size      : 20 21 21
term                 : 59 60 61 64 65
var_list             : 1 2 11 31 33
var_typ              : 9 10 44 45
variable             : 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list func_list cuerpo
    (2) program -> . encabezamiento var_list cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (6) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list func_list cuerpo
    (2) program -> encabezamiento . var_list cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (22) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (6) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . func_list cuerpo
    (2) program -> encabezamiento var_list . cuerpo
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 13
    cuerpo                         shift and go to state 14
    func                           shift and go to state 8

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 15

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (11) var_list -> variable . var_list
    (12) var_list -> variable .
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims

    MAIN            reduce using rule 12 (var_list -> variable .)
    FUNC            reduce using rule 12 (var_list -> variable .)
    ID              reduce using rule 12 (var_list -> variable .)
    READ            reduce using rule 12 (var_list -> variable .)
    WRITE           reduce using rule 12 (var_list -> variable .)
    WHEN            reduce using rule 12 (var_list -> variable .)
    WHILE           reduce using rule 12 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 16

state 8

    (13) func_list -> func . func_list
    (14) func_list -> func .
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (22) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 14 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 17

state 9

    (8) cuerpo -> MAIN . context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE
    (7) context_to_global -> .

    OPPARENTH       reduce using rule 7 (context_to_global -> .)

    context_to_global              shift and go to state 18

state 10

    (9) variable -> VAR . ID COLON var_typ
    (10) variable -> VAR . ID COLON var_typ dims

    ID              shift and go to state 19


state 11

    (22) func -> FUNC . context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> FUNC . context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (24) context_to_local -> .

    ID              reduce using rule 24 (context_to_local -> .)

    context_to_local               shift and go to state 20

state 12

    (6) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 6 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 21

state 14

    (2) program -> encabezamiento var_list cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list cuerpo .)


state 15

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 16

    (11) var_list -> variable var_list .

    MAIN            reduce using rule 11 (var_list -> variable var_list .)
    FUNC            reduce using rule 11 (var_list -> variable var_list .)
    ID              reduce using rule 11 (var_list -> variable var_list .)
    READ            reduce using rule 11 (var_list -> variable var_list .)
    WRITE           reduce using rule 11 (var_list -> variable var_list .)
    WHEN            reduce using rule 11 (var_list -> variable var_list .)
    WHILE           reduce using rule 11 (var_list -> variable var_list .)


state 17

    (13) func_list -> func func_list .

    MAIN            reduce using rule 13 (func_list -> func func_list .)


state 18

    (8) cuerpo -> MAIN context_to_global . OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    OPPARENTH       shift and go to state 22


state 19

    (9) variable -> VAR ID . COLON var_typ
    (10) variable -> VAR ID . COLON var_typ dims

    COLON           shift and go to state 23


state 20

    (22) func -> FUNC context_to_local . ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> FUNC context_to_local . ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    ID              shift and go to state 24


state 21

    (1) program -> encabezamiento var_list func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list func_list cuerpo .)


state 22

    (8) cuerpo -> MAIN context_to_global OPPARENTH . CLPARENTH OPBRACE estat_list calcula_globales CLBRACE

    CLPARENTH       shift and go to state 25


state 23

    (9) variable -> VAR ID COLON . var_typ
    (10) variable -> VAR ID COLON . var_typ dims
    (46) var_typ -> . INT
    (47) var_typ -> . FLOAT
    (48) var_typ -> . CHAR
    (49) var_typ -> . BOOL
    (50) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 26

state 24

    (22) func -> FUNC context_to_local ID . OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> FUNC context_to_local ID . OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 32


state 25

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH . OPBRACE estat_list calcula_globales CLBRACE

    OPBRACE         shift and go to state 33


state 26

    (9) variable -> VAR ID COLON var_typ .
    (10) variable -> VAR ID COLON var_typ . dims
    (20) dims -> . OPBRACKET aritm save_array_size CLBRACKET
    (21) dims -> . OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET

    VAR             reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 35

    dims                           shift and go to state 34

state 27

    (46) var_typ -> INT .

    OPBRACKET       reduce using rule 46 (var_typ -> INT .)
    VAR             reduce using rule 46 (var_typ -> INT .)
    MAIN            reduce using rule 46 (var_typ -> INT .)
    FUNC            reduce using rule 46 (var_typ -> INT .)
    ID              reduce using rule 46 (var_typ -> INT .)
    READ            reduce using rule 46 (var_typ -> INT .)
    WRITE           reduce using rule 46 (var_typ -> INT .)
    WHEN            reduce using rule 46 (var_typ -> INT .)
    WHILE           reduce using rule 46 (var_typ -> INT .)
    COMMA           reduce using rule 46 (var_typ -> INT .)
    CLPARENTH       reduce using rule 46 (var_typ -> INT .)


state 28

    (47) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 47 (var_typ -> FLOAT .)
    VAR             reduce using rule 47 (var_typ -> FLOAT .)
    MAIN            reduce using rule 47 (var_typ -> FLOAT .)
    FUNC            reduce using rule 47 (var_typ -> FLOAT .)
    ID              reduce using rule 47 (var_typ -> FLOAT .)
    READ            reduce using rule 47 (var_typ -> FLOAT .)
    WRITE           reduce using rule 47 (var_typ -> FLOAT .)
    WHEN            reduce using rule 47 (var_typ -> FLOAT .)
    WHILE           reduce using rule 47 (var_typ -> FLOAT .)
    COMMA           reduce using rule 47 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 47 (var_typ -> FLOAT .)


state 29

    (48) var_typ -> CHAR .

    OPBRACKET       reduce using rule 48 (var_typ -> CHAR .)
    VAR             reduce using rule 48 (var_typ -> CHAR .)
    MAIN            reduce using rule 48 (var_typ -> CHAR .)
    FUNC            reduce using rule 48 (var_typ -> CHAR .)
    ID              reduce using rule 48 (var_typ -> CHAR .)
    READ            reduce using rule 48 (var_typ -> CHAR .)
    WRITE           reduce using rule 48 (var_typ -> CHAR .)
    WHEN            reduce using rule 48 (var_typ -> CHAR .)
    WHILE           reduce using rule 48 (var_typ -> CHAR .)
    COMMA           reduce using rule 48 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 48 (var_typ -> CHAR .)


state 30

    (49) var_typ -> BOOL .

    OPBRACKET       reduce using rule 49 (var_typ -> BOOL .)
    VAR             reduce using rule 49 (var_typ -> BOOL .)
    MAIN            reduce using rule 49 (var_typ -> BOOL .)
    FUNC            reduce using rule 49 (var_typ -> BOOL .)
    ID              reduce using rule 49 (var_typ -> BOOL .)
    READ            reduce using rule 49 (var_typ -> BOOL .)
    WRITE           reduce using rule 49 (var_typ -> BOOL .)
    WHEN            reduce using rule 49 (var_typ -> BOOL .)
    WHILE           reduce using rule 49 (var_typ -> BOOL .)
    COMMA           reduce using rule 49 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 49 (var_typ -> BOOL .)


state 31

    (50) var_typ -> FRAME .

    OPBRACKET       reduce using rule 50 (var_typ -> FRAME .)
    VAR             reduce using rule 50 (var_typ -> FRAME .)
    MAIN            reduce using rule 50 (var_typ -> FRAME .)
    FUNC            reduce using rule 50 (var_typ -> FRAME .)
    ID              reduce using rule 50 (var_typ -> FRAME .)
    READ            reduce using rule 50 (var_typ -> FRAME .)
    WRITE           reduce using rule 50 (var_typ -> FRAME .)
    WHEN            reduce using rule 50 (var_typ -> FRAME .)
    WHILE           reduce using rule 50 (var_typ -> FRAME .)
    COMMA           reduce using rule 50 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 50 (var_typ -> FRAME .)


state 32

    (22) func -> FUNC context_to_local ID OPPARENTH . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) func -> FUNC context_to_local ID OPPARENTH . param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (44) param -> . ID COLON var_typ
    (45) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 37
    ID              shift and go to state 36

    param_list                     shift and go to state 38
    param                          shift and go to state 39

state 33

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE . estat_list calcula_globales CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 40
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 34

    (10) variable -> VAR ID COLON var_typ dims .

    VAR             reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    MAIN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    FUNC            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    ID              reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    READ            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WRITE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHEN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHILE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)


state 35

    (20) dims -> OPBRACKET . aritm save_array_size CLBRACKET
    (21) dims -> OPBRACKET . aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 36

    (44) param -> ID . COLON var_typ
    (45) param -> ID . COLON var_typ dims

    COLON           shift and go to state 64


state 37

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 65


state 38

    (23) func -> FUNC context_to_local ID OPPARENTH param_list . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 66


state 39

    (17) param_list -> param . COMMA param_list
    (18) param_list -> param .

    COMMA           shift and go to state 67
    CLPARENTH       reduce using rule 18 (param_list -> param .)


state 40

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list . calcula_globales CLBRACE
    (5) calcula_globales -> .

    CLBRACE         reduce using rule 5 (calcula_globales -> .)

    calcula_globales               shift and go to state 68

state 41

    (15) estat_list -> estat . estat_list
    (16) estat_list -> estat .
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLBRACE         reduce using rule 16 (estat_list -> estat .)
    RETURN          reduce using rule 16 (estat_list -> estat .)
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat                          shift and go to state 41
    estat_list                     shift and go to state 69
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 42

    (35) estat -> asign .

    ID              reduce using rule 35 (estat -> asign .)
    READ            reduce using rule 35 (estat -> asign .)
    WRITE           reduce using rule 35 (estat -> asign .)
    WHEN            reduce using rule 35 (estat -> asign .)
    WHILE           reduce using rule 35 (estat -> asign .)
    CLBRACE         reduce using rule 35 (estat -> asign .)
    RETURN          reduce using rule 35 (estat -> asign .)


state 43

    (36) estat -> llam_void .

    ID              reduce using rule 36 (estat -> llam_void .)
    READ            reduce using rule 36 (estat -> llam_void .)
    WRITE           reduce using rule 36 (estat -> llam_void .)
    WHEN            reduce using rule 36 (estat -> llam_void .)
    WHILE           reduce using rule 36 (estat -> llam_void .)
    CLBRACE         reduce using rule 36 (estat -> llam_void .)
    RETURN          reduce using rule 36 (estat -> llam_void .)


state 44

    (37) estat -> lectura .

    ID              reduce using rule 37 (estat -> lectura .)
    READ            reduce using rule 37 (estat -> lectura .)
    WRITE           reduce using rule 37 (estat -> lectura .)
    WHEN            reduce using rule 37 (estat -> lectura .)
    WHILE           reduce using rule 37 (estat -> lectura .)
    CLBRACE         reduce using rule 37 (estat -> lectura .)
    RETURN          reduce using rule 37 (estat -> lectura .)


state 45

    (38) estat -> escritura .

    ID              reduce using rule 38 (estat -> escritura .)
    READ            reduce using rule 38 (estat -> escritura .)
    WRITE           reduce using rule 38 (estat -> escritura .)
    WHEN            reduce using rule 38 (estat -> escritura .)
    WHILE           reduce using rule 38 (estat -> escritura .)
    CLBRACE         reduce using rule 38 (estat -> escritura .)
    RETURN          reduce using rule 38 (estat -> escritura .)


state 46

    (39) estat -> carga_dt .

    ID              reduce using rule 39 (estat -> carga_dt .)
    READ            reduce using rule 39 (estat -> carga_dt .)
    WRITE           reduce using rule 39 (estat -> carga_dt .)
    WHEN            reduce using rule 39 (estat -> carga_dt .)
    WHILE           reduce using rule 39 (estat -> carga_dt .)
    CLBRACE         reduce using rule 39 (estat -> carga_dt .)
    RETURN          reduce using rule 39 (estat -> carga_dt .)


state 47

    (40) estat -> decision .

    ID              reduce using rule 40 (estat -> decision .)
    READ            reduce using rule 40 (estat -> decision .)
    WRITE           reduce using rule 40 (estat -> decision .)
    WHEN            reduce using rule 40 (estat -> decision .)
    WHILE           reduce using rule 40 (estat -> decision .)
    CLBRACE         reduce using rule 40 (estat -> decision .)
    RETURN          reduce using rule 40 (estat -> decision .)


state 48

    (41) estat -> ciclo .

    ID              reduce using rule 41 (estat -> ciclo .)
    READ            reduce using rule 41 (estat -> ciclo .)
    WRITE           reduce using rule 41 (estat -> ciclo .)
    WHEN            reduce using rule 41 (estat -> ciclo .)
    WHILE           reduce using rule 41 (estat -> ciclo .)
    CLBRACE         reduce using rule 41 (estat -> ciclo .)
    RETURN          reduce using rule 41 (estat -> ciclo .)


state 49

    (93) asign -> ID . ASGNMNT lectura
    (94) asign -> ID . ASGNMNT aritm
    (95) asign -> ID . ASGNMNT CONST_STRING
    (96) asign -> ID . dims ASGNMNT lectura
    (97) asign -> ID . dims ASGNMNT aritm
    (98) asign -> ID . dims ASGNMNT CONST_STRING
    (91) llam_void -> ID . OPPARENTH CLPARENTH
    (92) llam_void -> ID . OPPARENTH args CLPARENTH
    (42) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (20) dims -> . OPBRACKET aritm save_array_size CLBRACKET
    (21) dims -> . OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET

    ASGNMNT         shift and go to state 70
    OPPARENTH       shift and go to state 72
    OPBRACKET       shift and go to state 35

    dims                           shift and go to state 71

state 50

    (88) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 73


state 51

    (89) escritura -> WRITE . OPPARENTH aritm CLPARENTH
    (90) escritura -> WRITE . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 74


state 52

    (29) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN . OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPPARENTH       shift and go to state 75


state 53

    (25) ciclo -> WHILE . OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 76


state 54

    (20) dims -> OPBRACKET aritm . save_array_size CLBRACKET
    (21) dims -> OPBRACKET aritm . save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET
    (19) save_array_size -> .

    CLBRACKET       reduce using rule 19 (save_array_size -> .)

    save_array_size                shift and go to state 77

state 55

    (59) aritm -> term . check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> term . check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> term . check_aritm
    (58) check_aritm -> .

    PLUS            reduce using rule 58 (check_aritm -> .)
    MINUS           reduce using rule 58 (check_aritm -> .)
    CLBRACKET       reduce using rule 58 (check_aritm -> .)
    ID              reduce using rule 58 (check_aritm -> .)
    READ            reduce using rule 58 (check_aritm -> .)
    WRITE           reduce using rule 58 (check_aritm -> .)
    WHEN            reduce using rule 58 (check_aritm -> .)
    WHILE           reduce using rule 58 (check_aritm -> .)
    CLBRACE         reduce using rule 58 (check_aritm -> .)
    RETURN          reduce using rule 58 (check_aritm -> .)
    COMMA           reduce using rule 58 (check_aritm -> .)
    CLPARENTH       reduce using rule 58 (check_aritm -> .)
    EQUAL           reduce using rule 58 (check_aritm -> .)
    UNEQUAL         reduce using rule 58 (check_aritm -> .)
    LESS            reduce using rule 58 (check_aritm -> .)
    LESSEQ          reduce using rule 58 (check_aritm -> .)
    GREATER         reduce using rule 58 (check_aritm -> .)
    GREATEREQ       reduce using rule 58 (check_aritm -> .)

    check_aritm                    shift and go to state 78

state 56

    (64) term -> factor . check_term TIMES check_term_operation term
    (65) term -> factor . check_term DIVIDE check_term_operation term
    (66) term -> factor . check_term
    (63) check_term -> .

    TIMES           reduce using rule 63 (check_term -> .)
    DIVIDE          reduce using rule 63 (check_term -> .)
    PLUS            reduce using rule 63 (check_term -> .)
    MINUS           reduce using rule 63 (check_term -> .)
    CLBRACKET       reduce using rule 63 (check_term -> .)
    ID              reduce using rule 63 (check_term -> .)
    READ            reduce using rule 63 (check_term -> .)
    WRITE           reduce using rule 63 (check_term -> .)
    WHEN            reduce using rule 63 (check_term -> .)
    WHILE           reduce using rule 63 (check_term -> .)
    CLBRACE         reduce using rule 63 (check_term -> .)
    RETURN          reduce using rule 63 (check_term -> .)
    COMMA           reduce using rule 63 (check_term -> .)
    CLPARENTH       reduce using rule 63 (check_term -> .)
    EQUAL           reduce using rule 63 (check_term -> .)
    UNEQUAL         reduce using rule 63 (check_term -> .)
    LESS            reduce using rule 63 (check_term -> .)
    LESSEQ          reduce using rule 63 (check_term -> .)
    GREATER         reduce using rule 63 (check_term -> .)
    GREATEREQ       reduce using rule 63 (check_term -> .)

    check_term                     shift and go to state 79

state 57

    (76) factor -> OPPARENTH . check_parenth aritm CLPARENTH check_parenth
    (75) check_parenth -> .

    OPPARENTH       reduce using rule 75 (check_parenth -> .)
    ID              reduce using rule 75 (check_parenth -> .)
    CONST_INT       reduce using rule 75 (check_parenth -> .)
    CONST_FLOAT     reduce using rule 75 (check_parenth -> .)

    check_parenth                  shift and go to state 80

state 58

    (77) factor -> factor_function_call .

    TIMES           reduce using rule 77 (factor -> factor_function_call .)
    DIVIDE          reduce using rule 77 (factor -> factor_function_call .)
    PLUS            reduce using rule 77 (factor -> factor_function_call .)
    MINUS           reduce using rule 77 (factor -> factor_function_call .)
    CLBRACKET       reduce using rule 77 (factor -> factor_function_call .)
    ID              reduce using rule 77 (factor -> factor_function_call .)
    READ            reduce using rule 77 (factor -> factor_function_call .)
    WRITE           reduce using rule 77 (factor -> factor_function_call .)
    WHEN            reduce using rule 77 (factor -> factor_function_call .)
    WHILE           reduce using rule 77 (factor -> factor_function_call .)
    CLBRACE         reduce using rule 77 (factor -> factor_function_call .)
    RETURN          reduce using rule 77 (factor -> factor_function_call .)
    COMMA           reduce using rule 77 (factor -> factor_function_call .)
    CLPARENTH       reduce using rule 77 (factor -> factor_function_call .)
    EQUAL           reduce using rule 77 (factor -> factor_function_call .)
    UNEQUAL         reduce using rule 77 (factor -> factor_function_call .)
    LESS            reduce using rule 77 (factor -> factor_function_call .)
    LESSEQ          reduce using rule 77 (factor -> factor_function_call .)
    GREATER         reduce using rule 77 (factor -> factor_function_call .)
    GREATEREQ       reduce using rule 77 (factor -> factor_function_call .)


state 59

    (78) factor -> factor_var .

    TIMES           reduce using rule 78 (factor -> factor_var .)
    DIVIDE          reduce using rule 78 (factor -> factor_var .)
    PLUS            reduce using rule 78 (factor -> factor_var .)
    MINUS           reduce using rule 78 (factor -> factor_var .)
    CLBRACKET       reduce using rule 78 (factor -> factor_var .)
    ID              reduce using rule 78 (factor -> factor_var .)
    READ            reduce using rule 78 (factor -> factor_var .)
    WRITE           reduce using rule 78 (factor -> factor_var .)
    WHEN            reduce using rule 78 (factor -> factor_var .)
    WHILE           reduce using rule 78 (factor -> factor_var .)
    CLBRACE         reduce using rule 78 (factor -> factor_var .)
    RETURN          reduce using rule 78 (factor -> factor_var .)
    COMMA           reduce using rule 78 (factor -> factor_var .)
    CLPARENTH       reduce using rule 78 (factor -> factor_var .)
    EQUAL           reduce using rule 78 (factor -> factor_var .)
    UNEQUAL         reduce using rule 78 (factor -> factor_var .)
    LESS            reduce using rule 78 (factor -> factor_var .)
    LESSEQ          reduce using rule 78 (factor -> factor_var .)
    GREATER         reduce using rule 78 (factor -> factor_var .)
    GREATEREQ       reduce using rule 78 (factor -> factor_var .)


state 60

    (79) factor -> factor_const .

    TIMES           reduce using rule 79 (factor -> factor_const .)
    DIVIDE          reduce using rule 79 (factor -> factor_const .)
    PLUS            reduce using rule 79 (factor -> factor_const .)
    MINUS           reduce using rule 79 (factor -> factor_const .)
    CLBRACKET       reduce using rule 79 (factor -> factor_const .)
    ID              reduce using rule 79 (factor -> factor_const .)
    READ            reduce using rule 79 (factor -> factor_const .)
    WRITE           reduce using rule 79 (factor -> factor_const .)
    WHEN            reduce using rule 79 (factor -> factor_const .)
    WHILE           reduce using rule 79 (factor -> factor_const .)
    CLBRACE         reduce using rule 79 (factor -> factor_const .)
    RETURN          reduce using rule 79 (factor -> factor_const .)
    COMMA           reduce using rule 79 (factor -> factor_const .)
    CLPARENTH       reduce using rule 79 (factor -> factor_const .)
    EQUAL           reduce using rule 79 (factor -> factor_const .)
    UNEQUAL         reduce using rule 79 (factor -> factor_const .)
    LESS            reduce using rule 79 (factor -> factor_const .)
    LESSEQ          reduce using rule 79 (factor -> factor_const .)
    GREATER         reduce using rule 79 (factor -> factor_const .)
    GREATEREQ       reduce using rule 79 (factor -> factor_const .)


state 61

    (73) factor_function_call -> ID . OPPARENTH CLPARENTH
    (74) factor_function_call -> ID . OPPARENTH args CLPARENTH
    (71) factor_var -> ID .
    (72) factor_var -> ID . dims
    (20) dims -> . OPBRACKET aritm save_array_size CLBRACKET
    (21) dims -> . OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET

    OPPARENTH       shift and go to state 81
    TIMES           reduce using rule 71 (factor_var -> ID .)
    DIVIDE          reduce using rule 71 (factor_var -> ID .)
    PLUS            reduce using rule 71 (factor_var -> ID .)
    MINUS           reduce using rule 71 (factor_var -> ID .)
    CLBRACKET       reduce using rule 71 (factor_var -> ID .)
    ID              reduce using rule 71 (factor_var -> ID .)
    READ            reduce using rule 71 (factor_var -> ID .)
    WRITE           reduce using rule 71 (factor_var -> ID .)
    WHEN            reduce using rule 71 (factor_var -> ID .)
    WHILE           reduce using rule 71 (factor_var -> ID .)
    CLBRACE         reduce using rule 71 (factor_var -> ID .)
    RETURN          reduce using rule 71 (factor_var -> ID .)
    COMMA           reduce using rule 71 (factor_var -> ID .)
    CLPARENTH       reduce using rule 71 (factor_var -> ID .)
    EQUAL           reduce using rule 71 (factor_var -> ID .)
    UNEQUAL         reduce using rule 71 (factor_var -> ID .)
    LESS            reduce using rule 71 (factor_var -> ID .)
    LESSEQ          reduce using rule 71 (factor_var -> ID .)
    GREATER         reduce using rule 71 (factor_var -> ID .)
    GREATEREQ       reduce using rule 71 (factor_var -> ID .)
    OPBRACKET       shift and go to state 35

    dims                           shift and go to state 82

state 62

    (69) factor_const -> CONST_INT . factortype_const_int
    (67) factortype_const_int -> .

    TIMES           reduce using rule 67 (factortype_const_int -> .)
    DIVIDE          reduce using rule 67 (factortype_const_int -> .)
    PLUS            reduce using rule 67 (factortype_const_int -> .)
    MINUS           reduce using rule 67 (factortype_const_int -> .)
    CLBRACKET       reduce using rule 67 (factortype_const_int -> .)
    ID              reduce using rule 67 (factortype_const_int -> .)
    READ            reduce using rule 67 (factortype_const_int -> .)
    WRITE           reduce using rule 67 (factortype_const_int -> .)
    WHEN            reduce using rule 67 (factortype_const_int -> .)
    WHILE           reduce using rule 67 (factortype_const_int -> .)
    CLBRACE         reduce using rule 67 (factortype_const_int -> .)
    RETURN          reduce using rule 67 (factortype_const_int -> .)
    COMMA           reduce using rule 67 (factortype_const_int -> .)
    CLPARENTH       reduce using rule 67 (factortype_const_int -> .)
    EQUAL           reduce using rule 67 (factortype_const_int -> .)
    UNEQUAL         reduce using rule 67 (factortype_const_int -> .)
    LESS            reduce using rule 67 (factortype_const_int -> .)
    LESSEQ          reduce using rule 67 (factortype_const_int -> .)
    GREATER         reduce using rule 67 (factortype_const_int -> .)
    GREATEREQ       reduce using rule 67 (factortype_const_int -> .)

    factortype_const_int           shift and go to state 83

state 63

    (70) factor_const -> CONST_FLOAT . factortype_const_float
    (68) factortype_const_float -> .

    TIMES           reduce using rule 68 (factortype_const_float -> .)
    DIVIDE          reduce using rule 68 (factortype_const_float -> .)
    PLUS            reduce using rule 68 (factortype_const_float -> .)
    MINUS           reduce using rule 68 (factortype_const_float -> .)
    CLBRACKET       reduce using rule 68 (factortype_const_float -> .)
    ID              reduce using rule 68 (factortype_const_float -> .)
    READ            reduce using rule 68 (factortype_const_float -> .)
    WRITE           reduce using rule 68 (factortype_const_float -> .)
    WHEN            reduce using rule 68 (factortype_const_float -> .)
    WHILE           reduce using rule 68 (factortype_const_float -> .)
    CLBRACE         reduce using rule 68 (factortype_const_float -> .)
    RETURN          reduce using rule 68 (factortype_const_float -> .)
    COMMA           reduce using rule 68 (factortype_const_float -> .)
    CLPARENTH       reduce using rule 68 (factortype_const_float -> .)
    EQUAL           reduce using rule 68 (factortype_const_float -> .)
    UNEQUAL         reduce using rule 68 (factortype_const_float -> .)
    LESS            reduce using rule 68 (factortype_const_float -> .)
    LESSEQ          reduce using rule 68 (factortype_const_float -> .)
    GREATER         reduce using rule 68 (factortype_const_float -> .)
    GREATEREQ       reduce using rule 68 (factortype_const_float -> .)

    factortype_const_float         shift and go to state 84

state 64

    (44) param -> ID COLON . var_typ
    (45) param -> ID COLON . var_typ dims
    (46) var_typ -> . INT
    (47) var_typ -> . FLOAT
    (48) var_typ -> . CHAR
    (49) var_typ -> . BOOL
    (50) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 85

state 65

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (51) func_typ -> . INT
    (52) func_typ -> . FLOAT
    (53) func_typ -> . CHAR
    (54) func_typ -> . BOOL
    (55) func_typ -> . FRAME
    (56) func_typ -> . VOID

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    CHAR            shift and go to state 89
    BOOL            shift and go to state 90
    FRAME           shift and go to state 91
    VOID            shift and go to state 92

    func_typ                       shift and go to state 86

state 66

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 93


state 67

    (17) param_list -> param COMMA . param_list
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (44) param -> . ID COLON var_typ
    (45) param -> . ID COLON var_typ dims

    ID              shift and go to state 36

    param                          shift and go to state 39
    param_list                     shift and go to state 94

state 68

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales . CLBRACE

    CLBRACE         shift and go to state 95


state 69

    (15) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 15 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 15 (estat_list -> estat estat_list .)


state 70

    (93) asign -> ID ASGNMNT . lectura
    (94) asign -> ID ASGNMNT . aritm
    (95) asign -> ID ASGNMNT . CONST_STRING
    (42) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 98
    LOAD            shift and go to state 99
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    lectura                        shift and go to state 96
    aritm                          shift and go to state 97
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 71

    (96) asign -> ID dims . ASGNMNT lectura
    (97) asign -> ID dims . ASGNMNT aritm
    (98) asign -> ID dims . ASGNMNT CONST_STRING

    ASGNMNT         shift and go to state 100


state 72

    (91) llam_void -> ID OPPARENTH . CLPARENTH
    (92) llam_void -> ID OPPARENTH . args CLPARENTH
    (86) args -> . aritm COMMA args
    (87) args -> . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 101
    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    args                           shift and go to state 102
    aritm                          shift and go to state 103
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 73

    (88) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 104


state 74

    (89) escritura -> WRITE OPPARENTH . aritm CLPARENTH
    (90) escritura -> WRITE OPPARENTH . CONST_STRING CLPARENTH
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 106
    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 105
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 75

    (29) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH . relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (80) relac -> . aritm EQUAL aritm
    (81) relac -> . aritm UNEQUAL aritm
    (82) relac -> . aritm LESS aritm
    (83) relac -> . aritm LESSEQ aritm
    (84) relac -> . aritm GREATER aritm
    (85) relac -> . aritm GREATEREQ aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    relac                          shift and go to state 107
    aritm                          shift and go to state 108
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 76

    (25) ciclo -> WHILE OPPARENTH . relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (80) relac -> . aritm EQUAL aritm
    (81) relac -> . aritm UNEQUAL aritm
    (82) relac -> . aritm LESS aritm
    (83) relac -> . aritm LESSEQ aritm
    (84) relac -> . aritm GREATER aritm
    (85) relac -> . aritm GREATEREQ aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    relac                          shift and go to state 109
    aritm                          shift and go to state 108
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 77

    (20) dims -> OPBRACKET aritm save_array_size . CLBRACKET
    (21) dims -> OPBRACKET aritm save_array_size . CLBRACKET OPBRACKET aritm save_array_size CLBRACKET

    CLBRACKET       shift and go to state 110


state 78

    (59) aritm -> term check_aritm . PLUS check_aritm_operation aritm
    (60) aritm -> term check_aritm . MINUS check_aritm_operation aritm
    (61) aritm -> term check_aritm .

    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    CLBRACKET       reduce using rule 61 (aritm -> term check_aritm .)
    ID              reduce using rule 61 (aritm -> term check_aritm .)
    READ            reduce using rule 61 (aritm -> term check_aritm .)
    WRITE           reduce using rule 61 (aritm -> term check_aritm .)
    WHEN            reduce using rule 61 (aritm -> term check_aritm .)
    WHILE           reduce using rule 61 (aritm -> term check_aritm .)
    CLBRACE         reduce using rule 61 (aritm -> term check_aritm .)
    RETURN          reduce using rule 61 (aritm -> term check_aritm .)
    COMMA           reduce using rule 61 (aritm -> term check_aritm .)
    CLPARENTH       reduce using rule 61 (aritm -> term check_aritm .)
    EQUAL           reduce using rule 61 (aritm -> term check_aritm .)
    UNEQUAL         reduce using rule 61 (aritm -> term check_aritm .)
    LESS            reduce using rule 61 (aritm -> term check_aritm .)
    LESSEQ          reduce using rule 61 (aritm -> term check_aritm .)
    GREATER         reduce using rule 61 (aritm -> term check_aritm .)
    GREATEREQ       reduce using rule 61 (aritm -> term check_aritm .)


state 79

    (64) term -> factor check_term . TIMES check_term_operation term
    (65) term -> factor check_term . DIVIDE check_term_operation term
    (66) term -> factor check_term .

    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    PLUS            reduce using rule 66 (term -> factor check_term .)
    MINUS           reduce using rule 66 (term -> factor check_term .)
    CLBRACKET       reduce using rule 66 (term -> factor check_term .)
    ID              reduce using rule 66 (term -> factor check_term .)
    READ            reduce using rule 66 (term -> factor check_term .)
    WRITE           reduce using rule 66 (term -> factor check_term .)
    WHEN            reduce using rule 66 (term -> factor check_term .)
    WHILE           reduce using rule 66 (term -> factor check_term .)
    CLBRACE         reduce using rule 66 (term -> factor check_term .)
    RETURN          reduce using rule 66 (term -> factor check_term .)
    COMMA           reduce using rule 66 (term -> factor check_term .)
    CLPARENTH       reduce using rule 66 (term -> factor check_term .)
    EQUAL           reduce using rule 66 (term -> factor check_term .)
    UNEQUAL         reduce using rule 66 (term -> factor check_term .)
    LESS            reduce using rule 66 (term -> factor check_term .)
    LESSEQ          reduce using rule 66 (term -> factor check_term .)
    GREATER         reduce using rule 66 (term -> factor check_term .)
    GREATEREQ       reduce using rule 66 (term -> factor check_term .)


state 80

    (76) factor -> OPPARENTH check_parenth . aritm CLPARENTH check_parenth
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 115
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 81

    (73) factor_function_call -> ID OPPARENTH . CLPARENTH
    (74) factor_function_call -> ID OPPARENTH . args CLPARENTH
    (86) args -> . aritm COMMA args
    (87) args -> . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    CLPARENTH       shift and go to state 116
    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    args                           shift and go to state 117
    aritm                          shift and go to state 103
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 82

    (72) factor_var -> ID dims .

    TIMES           reduce using rule 72 (factor_var -> ID dims .)
    DIVIDE          reduce using rule 72 (factor_var -> ID dims .)
    PLUS            reduce using rule 72 (factor_var -> ID dims .)
    MINUS           reduce using rule 72 (factor_var -> ID dims .)
    CLBRACKET       reduce using rule 72 (factor_var -> ID dims .)
    ID              reduce using rule 72 (factor_var -> ID dims .)
    READ            reduce using rule 72 (factor_var -> ID dims .)
    WRITE           reduce using rule 72 (factor_var -> ID dims .)
    WHEN            reduce using rule 72 (factor_var -> ID dims .)
    WHILE           reduce using rule 72 (factor_var -> ID dims .)
    CLBRACE         reduce using rule 72 (factor_var -> ID dims .)
    RETURN          reduce using rule 72 (factor_var -> ID dims .)
    COMMA           reduce using rule 72 (factor_var -> ID dims .)
    CLPARENTH       reduce using rule 72 (factor_var -> ID dims .)
    EQUAL           reduce using rule 72 (factor_var -> ID dims .)
    UNEQUAL         reduce using rule 72 (factor_var -> ID dims .)
    LESS            reduce using rule 72 (factor_var -> ID dims .)
    LESSEQ          reduce using rule 72 (factor_var -> ID dims .)
    GREATER         reduce using rule 72 (factor_var -> ID dims .)
    GREATEREQ       reduce using rule 72 (factor_var -> ID dims .)


state 83

    (69) factor_const -> CONST_INT factortype_const_int .

    TIMES           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    DIVIDE          reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    PLUS            reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    MINUS           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACKET       reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    ID              reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    READ            reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    WRITE           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    WHEN            reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    WHILE           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    CLBRACE         reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    RETURN          reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    COMMA           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    CLPARENTH       reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    EQUAL           reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    UNEQUAL         reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    LESS            reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    LESSEQ          reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    GREATER         reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)
    GREATEREQ       reduce using rule 69 (factor_const -> CONST_INT factortype_const_int .)


state 84

    (70) factor_const -> CONST_FLOAT factortype_const_float .

    TIMES           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    DIVIDE          reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    PLUS            reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    MINUS           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACKET       reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    ID              reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    READ            reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    WRITE           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHEN            reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    WHILE           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLBRACE         reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    RETURN          reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    COMMA           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    CLPARENTH       reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    EQUAL           reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    UNEQUAL         reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESS            reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    LESSEQ          reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATER         reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)
    GREATEREQ       reduce using rule 70 (factor_const -> CONST_FLOAT factortype_const_float .)


state 85

    (44) param -> ID COLON var_typ .
    (45) param -> ID COLON var_typ . dims
    (20) dims -> . OPBRACKET aritm save_array_size CLBRACKET
    (21) dims -> . OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET

    COMMA           reduce using rule 44 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 44 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 35

    dims                           shift and go to state 118

state 86

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 119


state 87

    (51) func_typ -> INT .

    OPBRACE         reduce using rule 51 (func_typ -> INT .)


state 88

    (52) func_typ -> FLOAT .

    OPBRACE         reduce using rule 52 (func_typ -> FLOAT .)


state 89

    (53) func_typ -> CHAR .

    OPBRACE         reduce using rule 53 (func_typ -> CHAR .)


state 90

    (54) func_typ -> BOOL .

    OPBRACE         reduce using rule 54 (func_typ -> BOOL .)


state 91

    (55) func_typ -> FRAME .

    OPBRACE         reduce using rule 55 (func_typ -> FRAME .)


state 92

    (56) func_typ -> VOID .

    OPBRACE         reduce using rule 56 (func_typ -> VOID .)


state 93

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (51) func_typ -> . INT
    (52) func_typ -> . FLOAT
    (53) func_typ -> . CHAR
    (54) func_typ -> . BOOL
    (55) func_typ -> . FRAME
    (56) func_typ -> . VOID

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    CHAR            shift and go to state 89
    BOOL            shift and go to state 90
    FRAME           shift and go to state 91
    VOID            shift and go to state 92

    func_typ                       shift and go to state 120

state 94

    (17) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 17 (param_list -> param COMMA param_list .)


state 95

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .

    $end            reduce using rule 8 (cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list calcula_globales CLBRACE .)


state 96

    (93) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 93 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 93 (asign -> ID ASGNMNT lectura .)


state 97

    (94) asign -> ID ASGNMNT aritm .

    ID              reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    READ            reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    WRITE           reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    WHEN            reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    WHILE           reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    CLBRACE         reduce using rule 94 (asign -> ID ASGNMNT aritm .)
    RETURN          reduce using rule 94 (asign -> ID ASGNMNT aritm .)


state 98

    (95) asign -> ID ASGNMNT CONST_STRING .

    ID              reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    READ            reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 95 (asign -> ID ASGNMNT CONST_STRING .)


state 99

    (42) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (43) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 121


state 100

    (96) asign -> ID dims ASGNMNT . lectura
    (97) asign -> ID dims ASGNMNT . aritm
    (98) asign -> ID dims ASGNMNT . CONST_STRING
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    CONST_STRING    shift and go to state 124
    READ            shift and go to state 50
    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    lectura                        shift and go to state 122
    aritm                          shift and go to state 123
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 101

    (91) llam_void -> ID OPPARENTH CLPARENTH .

    ID              reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 91 (llam_void -> ID OPPARENTH CLPARENTH .)


state 102

    (92) llam_void -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 125


state 103

    (86) args -> aritm . COMMA args
    (87) args -> aritm .

    COMMA           shift and go to state 126
    CLPARENTH       reduce using rule 87 (args -> aritm .)


state 104

    (88) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 88 (lectura -> READ OPPARENTH CLPARENTH .)


state 105

    (89) escritura -> WRITE OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 127


state 106

    (90) escritura -> WRITE OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 128


state 107

    (29) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac . conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (26) conditional_q1 -> .

    CLPARENTH       reduce using rule 26 (conditional_q1 -> .)

    conditional_q1                 shift and go to state 129

state 108

    (80) relac -> aritm . EQUAL aritm
    (81) relac -> aritm . UNEQUAL aritm
    (82) relac -> aritm . LESS aritm
    (83) relac -> aritm . LESSEQ aritm
    (84) relac -> aritm . GREATER aritm
    (85) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 130
    UNEQUAL         shift and go to state 131
    LESS            shift and go to state 132
    LESSEQ          shift and go to state 133
    GREATER         shift and go to state 134
    GREATEREQ       shift and go to state 135


state 109

    (25) ciclo -> WHILE OPPARENTH relac . CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 136


state 110

    (20) dims -> OPBRACKET aritm save_array_size CLBRACKET .
    (21) dims -> OPBRACKET aritm save_array_size CLBRACKET . OPBRACKET aritm save_array_size CLBRACKET

    VAR             reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    MAIN            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    FUNC            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    ID              reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    READ            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    WRITE           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    WHEN            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    WHILE           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    ASGNMNT         reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    TIMES           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    DIVIDE          reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    PLUS            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    MINUS           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    CLBRACKET       reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    CLBRACE         reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    RETURN          reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    COMMA           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    CLPARENTH       reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    EQUAL           reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    UNEQUAL         reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    LESS            reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    LESSEQ          reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    GREATER         reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    GREATEREQ       reduce using rule 20 (dims -> OPBRACKET aritm save_array_size CLBRACKET .)
    OPBRACKET       shift and go to state 137


state 111

    (59) aritm -> term check_aritm PLUS . check_aritm_operation aritm
    (57) check_aritm_operation -> .

    OPPARENTH       reduce using rule 57 (check_aritm_operation -> .)
    ID              reduce using rule 57 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 57 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 57 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 138

state 112

    (60) aritm -> term check_aritm MINUS . check_aritm_operation aritm
    (57) check_aritm_operation -> .

    OPPARENTH       reduce using rule 57 (check_aritm_operation -> .)
    ID              reduce using rule 57 (check_aritm_operation -> .)
    CONST_INT       reduce using rule 57 (check_aritm_operation -> .)
    CONST_FLOAT     reduce using rule 57 (check_aritm_operation -> .)

    check_aritm_operation          shift and go to state 139

state 113

    (64) term -> factor check_term TIMES . check_term_operation term
    (62) check_term_operation -> .

    OPPARENTH       reduce using rule 62 (check_term_operation -> .)
    ID              reduce using rule 62 (check_term_operation -> .)
    CONST_INT       reduce using rule 62 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 62 (check_term_operation -> .)

    check_term_operation           shift and go to state 140

state 114

    (65) term -> factor check_term DIVIDE . check_term_operation term
    (62) check_term_operation -> .

    OPPARENTH       reduce using rule 62 (check_term_operation -> .)
    ID              reduce using rule 62 (check_term_operation -> .)
    CONST_INT       reduce using rule 62 (check_term_operation -> .)
    CONST_FLOAT     reduce using rule 62 (check_term_operation -> .)

    check_term_operation           shift and go to state 141

state 115

    (76) factor -> OPPARENTH check_parenth aritm . CLPARENTH check_parenth

    CLPARENTH       shift and go to state 142


state 116

    (73) factor_function_call -> ID OPPARENTH CLPARENTH .

    TIMES           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    DIVIDE          reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    PLUS            reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    MINUS           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    CLBRACKET       reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    ID              reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    COMMA           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    CLPARENTH       reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    EQUAL           reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    UNEQUAL         reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    LESS            reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    LESSEQ          reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    GREATER         reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)
    GREATEREQ       reduce using rule 73 (factor_function_call -> ID OPPARENTH CLPARENTH .)


state 117

    (74) factor_function_call -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 143


state 118

    (45) param -> ID COLON var_typ dims .

    COMMA           reduce using rule 45 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 45 (param -> ID COLON var_typ dims .)


state 119

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (31) func_cont -> . var_list estat_list RETURN aritm
    (32) func_cont -> . estat_list RETURN aritm
    (33) func_cont -> . var_list estat_list
    (34) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 144
    var_list                       shift and go to state 145
    estat_list                     shift and go to state 146
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 120

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 147


state 121

    (42) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (43) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 148
    CONST_STRING    shift and go to state 149


state 122

    (96) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 96 (asign -> ID dims ASGNMNT lectura .)


state 123

    (97) asign -> ID dims ASGNMNT aritm .

    ID              reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    READ            reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    WRITE           reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    WHEN            reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    WHILE           reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    CLBRACE         reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)
    RETURN          reduce using rule 97 (asign -> ID dims ASGNMNT aritm .)


state 124

    (98) asign -> ID dims ASGNMNT CONST_STRING .

    ID              reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    READ            reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 98 (asign -> ID dims ASGNMNT CONST_STRING .)


state 125

    (92) llam_void -> ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 92 (llam_void -> ID OPPARENTH args CLPARENTH .)


state 126

    (86) args -> aritm COMMA . args
    (86) args -> . aritm COMMA args
    (87) args -> . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 103
    args                           shift and go to state 150
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 127

    (89) escritura -> WRITE OPPARENTH aritm CLPARENTH .

    ID              reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 89 (escritura -> WRITE OPPARENTH aritm CLPARENTH .)


state 128

    (90) escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 90 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)


state 129

    (29) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLPARENTH       shift and go to state 151


state 130

    (80) relac -> aritm EQUAL . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 152
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 131

    (81) relac -> aritm UNEQUAL . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 153
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 132

    (82) relac -> aritm LESS . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 154
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 133

    (83) relac -> aritm LESSEQ . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 155
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 134

    (84) relac -> aritm GREATER . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 156
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 135

    (85) relac -> aritm GREATEREQ . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 157
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 136

    (25) ciclo -> WHILE OPPARENTH relac CLPARENTH . THEN OPBRACE estat_list CLBRACE

    THEN            shift and go to state 158


state 137

    (21) dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET . aritm save_array_size CLBRACKET
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 159
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 138

    (59) aritm -> term check_aritm PLUS check_aritm_operation . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    term                           shift and go to state 55
    aritm                          shift and go to state 160
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 139

    (60) aritm -> term check_aritm MINUS check_aritm_operation . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    term                           shift and go to state 55
    aritm                          shift and go to state 161
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 140

    (64) term -> factor check_term TIMES check_term_operation . term
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    factor                         shift and go to state 56
    term                           shift and go to state 162
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 141

    (65) term -> factor check_term DIVIDE check_term_operation . term
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    factor                         shift and go to state 56
    term                           shift and go to state 163
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 142

    (76) factor -> OPPARENTH check_parenth aritm CLPARENTH . check_parenth
    (75) check_parenth -> .

    TIMES           reduce using rule 75 (check_parenth -> .)
    DIVIDE          reduce using rule 75 (check_parenth -> .)
    PLUS            reduce using rule 75 (check_parenth -> .)
    MINUS           reduce using rule 75 (check_parenth -> .)
    CLBRACKET       reduce using rule 75 (check_parenth -> .)
    ID              reduce using rule 75 (check_parenth -> .)
    READ            reduce using rule 75 (check_parenth -> .)
    WRITE           reduce using rule 75 (check_parenth -> .)
    WHEN            reduce using rule 75 (check_parenth -> .)
    WHILE           reduce using rule 75 (check_parenth -> .)
    CLBRACE         reduce using rule 75 (check_parenth -> .)
    RETURN          reduce using rule 75 (check_parenth -> .)
    COMMA           reduce using rule 75 (check_parenth -> .)
    CLPARENTH       reduce using rule 75 (check_parenth -> .)
    EQUAL           reduce using rule 75 (check_parenth -> .)
    UNEQUAL         reduce using rule 75 (check_parenth -> .)
    LESS            reduce using rule 75 (check_parenth -> .)
    LESSEQ          reduce using rule 75 (check_parenth -> .)
    GREATER         reduce using rule 75 (check_parenth -> .)
    GREATEREQ       reduce using rule 75 (check_parenth -> .)

    check_parenth                  shift and go to state 164

state 143

    (74) factor_function_call -> ID OPPARENTH args CLPARENTH .

    TIMES           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    DIVIDE          reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    PLUS            reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    MINUS           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    CLBRACKET       reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    ID              reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    COMMA           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    CLPARENTH       reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    EQUAL           reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    UNEQUAL         reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    LESS            reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    LESSEQ          reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    GREATER         reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)
    GREATEREQ       reduce using rule 74 (factor_function_call -> ID OPPARENTH args CLPARENTH .)


state 144

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 165


state 145

    (31) func_cont -> var_list . estat_list RETURN aritm
    (33) func_cont -> var_list . estat_list
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 166
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 146

    (32) func_cont -> estat_list . RETURN aritm
    (34) func_cont -> estat_list .

    RETURN          shift and go to state 167
    CLBRACE         reduce using rule 34 (func_cont -> estat_list .)


state 147

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (31) func_cont -> . var_list estat_list RETURN aritm
    (32) func_cont -> . estat_list RETURN aritm
    (33) func_cont -> . var_list estat_list
    (34) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    func_cont                      shift and go to state 168
    var_list                       shift and go to state 145
    estat_list                     shift and go to state 146
    variable                       shift and go to state 7
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 148

    (42) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 169


state 149

    (43) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 170


state 150

    (86) args -> aritm COMMA args .

    CLPARENTH       reduce using rule 86 (args -> aritm COMMA args .)


state 151

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    THEN            shift and go to state 171


state 152

    (80) relac -> aritm EQUAL aritm .

    CLPARENTH       reduce using rule 80 (relac -> aritm EQUAL aritm .)


state 153

    (81) relac -> aritm UNEQUAL aritm .

    CLPARENTH       reduce using rule 81 (relac -> aritm UNEQUAL aritm .)


state 154

    (82) relac -> aritm LESS aritm .

    CLPARENTH       reduce using rule 82 (relac -> aritm LESS aritm .)


state 155

    (83) relac -> aritm LESSEQ aritm .

    CLPARENTH       reduce using rule 83 (relac -> aritm LESSEQ aritm .)


state 156

    (84) relac -> aritm GREATER aritm .

    CLPARENTH       reduce using rule 84 (relac -> aritm GREATER aritm .)


state 157

    (85) relac -> aritm GREATEREQ aritm .

    CLPARENTH       reduce using rule 85 (relac -> aritm GREATEREQ aritm .)


state 158

    (25) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 172


state 159

    (21) dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm . save_array_size CLBRACKET
    (19) save_array_size -> .

    CLBRACKET       reduce using rule 19 (save_array_size -> .)

    save_array_size                shift and go to state 173

state 160

    (59) aritm -> term check_aritm PLUS check_aritm_operation aritm .

    CLBRACKET       reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    ID              reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    READ            reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WRITE           reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHEN            reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    WHILE           reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    RETURN          reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    COMMA           reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESS            reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATER         reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 59 (aritm -> term check_aritm PLUS check_aritm_operation aritm .)


state 161

    (60) aritm -> term check_aritm MINUS check_aritm_operation aritm .

    CLBRACKET       reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    ID              reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    READ            reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WRITE           reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHEN            reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    WHILE           reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLBRACE         reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    RETURN          reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    COMMA           reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    CLPARENTH       reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    EQUAL           reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    UNEQUAL         reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESS            reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    LESSEQ          reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATER         reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)
    GREATEREQ       reduce using rule 60 (aritm -> term check_aritm MINUS check_aritm_operation aritm .)


state 162

    (64) term -> factor check_term TIMES check_term_operation term .

    PLUS            reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    MINUS           reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACKET       reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    ID              reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    READ            reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    WRITE           reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    WHEN            reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    WHILE           reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    CLBRACE         reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    RETURN          reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    COMMA           reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    CLPARENTH       reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    EQUAL           reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    UNEQUAL         reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    LESS            reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    LESSEQ          reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    GREATER         reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)
    GREATEREQ       reduce using rule 64 (term -> factor check_term TIMES check_term_operation term .)


state 163

    (65) term -> factor check_term DIVIDE check_term_operation term .

    PLUS            reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    MINUS           reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACKET       reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    ID              reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    READ            reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    WRITE           reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    WHEN            reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    WHILE           reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    CLBRACE         reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    RETURN          reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    COMMA           reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    CLPARENTH       reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    EQUAL           reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    UNEQUAL         reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    LESS            reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    LESSEQ          reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATER         reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)
    GREATEREQ       reduce using rule 65 (term -> factor check_term DIVIDE check_term_operation term .)


state 164

    (76) factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .

    TIMES           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    DIVIDE          reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    PLUS            reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    MINUS           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACKET       reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    ID              reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    READ            reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WRITE           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHEN            reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    WHILE           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLBRACE         reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    RETURN          reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    COMMA           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    CLPARENTH       reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    EQUAL           reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    UNEQUAL         reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESS            reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    LESSEQ          reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATER         reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)
    GREATEREQ       reduce using rule 76 (factor -> OPPARENTH check_parenth aritm CLPARENTH check_parenth .)


state 165

    (22) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 166

    (31) func_cont -> var_list estat_list . RETURN aritm
    (33) func_cont -> var_list estat_list .

    RETURN          shift and go to state 174
    CLBRACE         reduce using rule 33 (func_cont -> var_list estat_list .)


state 167

    (32) func_cont -> estat_list RETURN . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 175
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 168

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 176


state 169

    (42) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 42 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 170

    (43) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 43 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)


state 171

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 177


state 172

    (25) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 178
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 173

    (21) dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size . CLBRACKET

    CLBRACKET       shift and go to state 179


state 174

    (31) func_cont -> var_list estat_list RETURN . aritm
    (59) aritm -> . term check_aritm PLUS check_aritm_operation aritm
    (60) aritm -> . term check_aritm MINUS check_aritm_operation aritm
    (61) aritm -> . term check_aritm
    (64) term -> . factor check_term TIMES check_term_operation term
    (65) term -> . factor check_term DIVIDE check_term_operation term
    (66) term -> . factor check_term
    (76) factor -> . OPPARENTH check_parenth aritm CLPARENTH check_parenth
    (77) factor -> . factor_function_call
    (78) factor -> . factor_var
    (79) factor -> . factor_const
    (73) factor_function_call -> . ID OPPARENTH CLPARENTH
    (74) factor_function_call -> . ID OPPARENTH args CLPARENTH
    (71) factor_var -> . ID
    (72) factor_var -> . ID dims
    (69) factor_const -> . CONST_INT factortype_const_int
    (70) factor_const -> . CONST_FLOAT factortype_const_float

    OPPARENTH       shift and go to state 57
    ID              shift and go to state 61
    CONST_INT       shift and go to state 62
    CONST_FLOAT     shift and go to state 63

    aritm                          shift and go to state 180
    term                           shift and go to state 55
    factor                         shift and go to state 56
    factor_function_call           shift and go to state 58
    factor_var                     shift and go to state 59
    factor_const                   shift and go to state 60

state 175

    (32) func_cont -> estat_list RETURN aritm .

    CLBRACE         reduce using rule 32 (func_cont -> estat_list RETURN aritm .)


state 176

    (23) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 23 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 23 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 177

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 181
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 178

    (25) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 182


state 179

    (21) dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .

    VAR             reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    MAIN            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    FUNC            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    ID              reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    READ            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    WRITE           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    WHEN            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    WHILE           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    ASGNMNT         reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    TIMES           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    DIVIDE          reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    PLUS            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    MINUS           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    CLBRACKET       reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    CLBRACE         reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    RETURN          reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    COMMA           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    CLPARENTH       reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    EQUAL           reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    UNEQUAL         reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    LESS            reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    LESSEQ          reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    GREATER         reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)
    GREATEREQ       reduce using rule 21 (dims -> OPBRACKET aritm save_array_size CLBRACKET OPBRACKET aritm save_array_size CLBRACKET .)


state 180

    (31) func_cont -> var_list estat_list RETURN aritm .

    CLBRACE         reduce using rule 31 (func_cont -> var_list estat_list RETURN aritm .)


state 181

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2

    CLBRACE         shift and go to state 183


state 182

    (25) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .

    ID              reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 25 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)


state 183

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . conditional_q2
    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (27) conditional_q2 -> .

    ELSE            shift and go to state 185
    ID              reduce using rule 27 (conditional_q2 -> .)
    READ            reduce using rule 27 (conditional_q2 -> .)
    WRITE           reduce using rule 27 (conditional_q2 -> .)
    WHEN            reduce using rule 27 (conditional_q2 -> .)
    WHILE           reduce using rule 27 (conditional_q2 -> .)
    CLBRACE         reduce using rule 27 (conditional_q2 -> .)
    RETURN          reduce using rule 27 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 184

state 184

    (29) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 29 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2 .)


state 185

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (28) conditional_q3 -> .

    OPBRACE         reduce using rule 28 (conditional_q3 -> .)

    conditional_q3                 shift and go to state 186

state 186

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 . OPBRACE estat_list CLBRACE conditional_q2

    OPBRACE         shift and go to state 187


state 187

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE . estat_list CLBRACE conditional_q2
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (35) estat -> . asign
    (36) estat -> . llam_void
    (37) estat -> . lectura
    (38) estat -> . escritura
    (39) estat -> . carga_dt
    (40) estat -> . decision
    (41) estat -> . ciclo
    (93) asign -> . ID ASGNMNT lectura
    (94) asign -> . ID ASGNMNT aritm
    (95) asign -> . ID ASGNMNT CONST_STRING
    (96) asign -> . ID dims ASGNMNT lectura
    (97) asign -> . ID dims ASGNMNT aritm
    (98) asign -> . ID dims ASGNMNT CONST_STRING
    (91) llam_void -> . ID OPPARENTH CLPARENTH
    (92) llam_void -> . ID OPPARENTH args CLPARENTH
    (88) lectura -> . READ OPPARENTH CLPARENTH
    (89) escritura -> . WRITE OPPARENTH aritm CLPARENTH
    (90) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (42) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (43) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (29) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE conditional_q2
    (30) decision -> . WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2
    (25) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 49
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    WHEN            shift and go to state 52
    WHILE           shift and go to state 53

    estat_list                     shift and go to state 188
    estat                          shift and go to state 41
    asign                          shift and go to state 42
    llam_void                      shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    carga_dt                       shift and go to state 46
    decision                       shift and go to state 47
    ciclo                          shift and go to state 48

state 188

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list . CLBRACE conditional_q2

    CLBRACE         shift and go to state 189


state 189

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE . conditional_q2
    (27) conditional_q2 -> .

    ID              reduce using rule 27 (conditional_q2 -> .)
    READ            reduce using rule 27 (conditional_q2 -> .)
    WRITE           reduce using rule 27 (conditional_q2 -> .)
    WHEN            reduce using rule 27 (conditional_q2 -> .)
    WHILE           reduce using rule 27 (conditional_q2 -> .)
    CLBRACE         reduce using rule 27 (conditional_q2 -> .)
    RETURN          reduce using rule 27 (conditional_q2 -> .)

    conditional_q2                 shift and go to state 190

state 190

    (30) decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .

    ID              reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    READ            reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WRITE           reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHEN            reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    WHILE           reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    CLBRACE         reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)
    RETURN          reduce using rule 30 (decision -> WHEN OPPARENTH relac conditional_q1 CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE conditional_q3 OPBRACE estat_list CLBRACE conditional_q2 .)

