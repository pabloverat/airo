Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    FALSE
    NOT
    OR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list calcula_globales func_list cuerpo
Rule 2     program -> encabezamiento var_list calcula_globales cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     calcula_globales -> <empty>
Rule 6     encabezamiento -> PROGRAM ID
Rule 7     context_to_global -> <empty>
Rule 8     cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
Rule 9     variable -> VAR ID COLON var_typ
Rule 10    variable -> VAR ID COLON var_typ dims
Rule 11    var_list -> variable var_list
Rule 12    var_list -> variable
Rule 13    func_list -> func func_list
Rule 14    func_list -> func
Rule 15    estat_list -> estat estat_list
Rule 16    estat_list -> estat
Rule 17    param_list -> param COMMA param_list
Rule 18    param_list -> param
Rule 19    dims -> OPBRACKET aritm CLBRACKET
Rule 20    dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
Rule 21    func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 22    func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 23    context_to_local -> <empty>
Rule 24    ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 25    decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 26    decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
Rule 27    func_cont -> var_list estat_list RETURN aritm
Rule 28    func_cont -> estat_list RETURN aritm
Rule 29    func_cont -> var_list estat_list
Rule 30    func_cont -> estat_list
Rule 31    estat -> asign
Rule 32    estat -> llam_void
Rule 33    estat -> lectura
Rule 34    estat -> escritura
Rule 35    estat -> carga_dt
Rule 36    estat -> decision
Rule 37    estat -> ciclo
Rule 38    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 39    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
Rule 40    param -> ID COLON var_typ
Rule 41    param -> ID COLON var_typ dims
Rule 42    var_typ -> INT
Rule 43    var_typ -> FLOAT
Rule 44    var_typ -> CHAR
Rule 45    var_typ -> BOOL
Rule 46    var_typ -> FRAME
Rule 47    func_typ -> INT
Rule 48    func_typ -> FLOAT
Rule 49    func_typ -> CHAR
Rule 50    func_typ -> BOOL
Rule 51    func_typ -> FRAME
Rule 52    func_typ -> VOID
Rule 53    aritm -> term PLUS aritm
Rule 54    aritm -> term MINUS aritm
Rule 55    aritm -> term
Rule 56    term -> factor TIMES term
Rule 57    term -> factor DIVIDE term
Rule 58    term -> factor
Rule 59    factor -> OPPARENTH aritm CLPARENTH
Rule 60    factor -> ID
Rule 61    factor -> ID dims
Rule 62    factor -> CONST_INT
Rule 63    factor -> CONST_FLOAT
Rule 64    factor -> ID OPPARENTH CLPARENTH
Rule 65    factor -> ID OPPARENTH args CLPARENTH
Rule 66    relac -> aritm EQUAL aritm
Rule 67    relac -> aritm UNEQUAL aritm
Rule 68    relac -> aritm LESS aritm
Rule 69    relac -> aritm LESSEQ aritm
Rule 70    relac -> aritm GREATER aritm
Rule 71    relac -> aritm GREATEREQ aritm
Rule 72    args -> aritm COMMA args
Rule 73    args -> aritm
Rule 74    lectura -> READ OPPARENTH CLPARENTH
Rule 75    escritura -> WRITE OPPARENTH ID CLPARENTH
Rule 76    escritura -> WRITE OPPARENTH ID dims CLPARENTH
Rule 77    escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH
Rule 78    llam_void -> ID OPPARENTH CLPARENTH
Rule 79    llam_void -> ID OPPARENTH args CLPARENTH
Rule 80    asign -> ID ASGNMNT lectura
Rule 81    asign -> ID ASGNMNT aritm
Rule 82    asign -> ID ASGNMNT CONST_STRING
Rule 83    asign -> ID dims ASGNMNT lectura
Rule 84    asign -> ID dims ASGNMNT aritm
Rule 85    asign -> ID dims ASGNMNT CONST_STRING

Terminals, with rules where they appear

AND                  : 
ASGNMNT              : 38 39 80 81 82 83 84 85
BOOL                 : 45 50
CHAR                 : 44 49
CLBRACE              : 8 21 22 24 25 26 26
CLBRACKET            : 19 20 20
CLPARENTH            : 8 21 22 24 25 26 38 39 59 64 65 74 75 76 77 78 79
COLON                : 9 10 21 22 40 41
COMMA                : 17 72
CONST_FLOAT          : 63
CONST_INT            : 20 62
CONST_STRING         : 39 77 82 85
DIVIDE               : 57
ELSE                 : 26
EQUAL                : 66
FALSE                : 
FLOAT                : 43 48
FRAME                : 46 51
FUNC                 : 21 22
GREATER              : 70
GREATEREQ            : 71
ID                   : 6 9 10 21 22 38 38 39 40 41 60 61 64 65 75 76 78 79 80 81 82 83 84 85
INT                  : 42 47
LESS                 : 68
LESSEQ               : 69
LOAD                 : 38 39
MAIN                 : 8
MINUS                : 54
NOT                  : 
OPBRACE              : 8 21 22 24 25 26 26
OPBRACKET            : 19 20 20
OPPARENTH            : 8 21 22 24 25 26 38 39 59 64 65 74 75 76 77 78 79
OR                   : 
PLUS                 : 53
PROGRAM              : 6
READ                 : 74
RETURN               : 27 28
THEN                 : 24 25 26
TIMES                : 56
TRUE                 : 
UNEQUAL              : 67
VAR                  : 9 10
VOID                 : 52
WHEN                 : 25 26
WHILE                : 24
WRITE                : 75 76 77
error                : 

Nonterminals, with rules where they appear

args                 : 65 72 79
aritm                : 19 20 27 28 53 54 59 66 66 67 67 68 68 69 69 70 70 71 71 72 73 81 84
asign                : 31
calcula_globales     : 1 2
carga_dt             : 35
ciclo                : 37
context_to_global    : 8
context_to_local     : 21 22
cuerpo               : 1 2 3 4
decision             : 36
dims                 : 10 41 61 76 83 84 85
encabezamiento       : 1 2 3 4
escritura            : 34
estat                : 15 16
estat_list           : 8 15 24 25 26 26 27 28 29 30
factor               : 56 57 58
func                 : 13 14
func_cont            : 21 22
func_list            : 1 3 13
func_typ             : 21 22
lectura              : 33 80 83
llam_void            : 32
param                : 17 18
param_list           : 17 22
program              : 0
relac                : 24 25 26
term                 : 53 54 55 56 57
var_list             : 1 2 11 27 29
var_typ              : 9 10 40 41
variable             : 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list calcula_globales func_list cuerpo
    (2) program -> . encabezamiento var_list calcula_globales cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (6) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list calcula_globales func_list cuerpo
    (2) program -> encabezamiento . var_list calcula_globales cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (6) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . calcula_globales func_list cuerpo
    (2) program -> encabezamiento var_list . calcula_globales cuerpo
    (5) calcula_globales -> .

    MAIN            reduce using rule 5 (calcula_globales -> .)
    FUNC            reduce using rule 5 (calcula_globales -> .)

    calcula_globales               shift and go to state 13

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 14

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (11) var_list -> variable . var_list
    (12) var_list -> variable .
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims

    MAIN            reduce using rule 12 (var_list -> variable .)
    FUNC            reduce using rule 12 (var_list -> variable .)
    ID              reduce using rule 12 (var_list -> variable .)
    READ            reduce using rule 12 (var_list -> variable .)
    WRITE           reduce using rule 12 (var_list -> variable .)
    WHEN            reduce using rule 12 (var_list -> variable .)
    WHILE           reduce using rule 12 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 15

state 8

    (13) func_list -> func . func_list
    (14) func_list -> func .
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 14 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 16

state 9

    (8) cuerpo -> MAIN . context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (7) context_to_global -> .

    OPPARENTH       reduce using rule 7 (context_to_global -> .)

    context_to_global              shift and go to state 17

state 10

    (9) variable -> VAR . ID COLON var_typ
    (10) variable -> VAR . ID COLON var_typ dims

    ID              shift and go to state 18


state 11

    (21) func -> FUNC . context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC . context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (23) context_to_local -> .

    ID              reduce using rule 23 (context_to_local -> .)

    context_to_local               shift and go to state 19

state 12

    (6) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 6 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 6 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list calcula_globales . func_list cuerpo
    (2) program -> encabezamiento var_list calcula_globales . cuerpo
    (13) func_list -> . func func_list
    (14) func_list -> . func
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (21) func -> . FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> . FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 20
    cuerpo                         shift and go to state 21
    func                           shift and go to state 8

state 14

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 15

    (11) var_list -> variable var_list .

    MAIN            reduce using rule 11 (var_list -> variable var_list .)
    FUNC            reduce using rule 11 (var_list -> variable var_list .)
    ID              reduce using rule 11 (var_list -> variable var_list .)
    READ            reduce using rule 11 (var_list -> variable var_list .)
    WRITE           reduce using rule 11 (var_list -> variable var_list .)
    WHEN            reduce using rule 11 (var_list -> variable var_list .)
    WHILE           reduce using rule 11 (var_list -> variable var_list .)


state 16

    (13) func_list -> func func_list .

    MAIN            reduce using rule 13 (func_list -> func func_list .)


state 17

    (8) cuerpo -> MAIN context_to_global . OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 22


state 18

    (9) variable -> VAR ID . COLON var_typ
    (10) variable -> VAR ID . COLON var_typ dims

    COLON           shift and go to state 23


state 19

    (21) func -> FUNC context_to_local . ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local . ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    ID              shift and go to state 24


state 20

    (1) program -> encabezamiento var_list calcula_globales func_list . cuerpo
    (8) cuerpo -> . MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 25

state 21

    (2) program -> encabezamiento var_list calcula_globales cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list calcula_globales cuerpo .)


state 22

    (8) cuerpo -> MAIN context_to_global OPPARENTH . CLPARENTH OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 26


state 23

    (9) variable -> VAR ID COLON . var_typ
    (10) variable -> VAR ID COLON . var_typ dims
    (42) var_typ -> . INT
    (43) var_typ -> . FLOAT
    (44) var_typ -> . CHAR
    (45) var_typ -> . BOOL
    (46) var_typ -> . FRAME

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31
    FRAME           shift and go to state 32

    var_typ                        shift and go to state 27

state 24

    (21) func -> FUNC context_to_local ID . OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local ID . OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 33


state 25

    (1) program -> encabezamiento var_list calcula_globales func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list calcula_globales func_list cuerpo .)


state 26

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 34


state 27

    (9) variable -> VAR ID COLON var_typ .
    (10) variable -> VAR ID COLON var_typ . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 9 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 35

state 28

    (42) var_typ -> INT .

    OPBRACKET       reduce using rule 42 (var_typ -> INT .)
    VAR             reduce using rule 42 (var_typ -> INT .)
    MAIN            reduce using rule 42 (var_typ -> INT .)
    FUNC            reduce using rule 42 (var_typ -> INT .)
    ID              reduce using rule 42 (var_typ -> INT .)
    READ            reduce using rule 42 (var_typ -> INT .)
    WRITE           reduce using rule 42 (var_typ -> INT .)
    WHEN            reduce using rule 42 (var_typ -> INT .)
    WHILE           reduce using rule 42 (var_typ -> INT .)
    COMMA           reduce using rule 42 (var_typ -> INT .)
    CLPARENTH       reduce using rule 42 (var_typ -> INT .)


state 29

    (43) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 43 (var_typ -> FLOAT .)
    VAR             reduce using rule 43 (var_typ -> FLOAT .)
    MAIN            reduce using rule 43 (var_typ -> FLOAT .)
    FUNC            reduce using rule 43 (var_typ -> FLOAT .)
    ID              reduce using rule 43 (var_typ -> FLOAT .)
    READ            reduce using rule 43 (var_typ -> FLOAT .)
    WRITE           reduce using rule 43 (var_typ -> FLOAT .)
    WHEN            reduce using rule 43 (var_typ -> FLOAT .)
    WHILE           reduce using rule 43 (var_typ -> FLOAT .)
    COMMA           reduce using rule 43 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 43 (var_typ -> FLOAT .)


state 30

    (44) var_typ -> CHAR .

    OPBRACKET       reduce using rule 44 (var_typ -> CHAR .)
    VAR             reduce using rule 44 (var_typ -> CHAR .)
    MAIN            reduce using rule 44 (var_typ -> CHAR .)
    FUNC            reduce using rule 44 (var_typ -> CHAR .)
    ID              reduce using rule 44 (var_typ -> CHAR .)
    READ            reduce using rule 44 (var_typ -> CHAR .)
    WRITE           reduce using rule 44 (var_typ -> CHAR .)
    WHEN            reduce using rule 44 (var_typ -> CHAR .)
    WHILE           reduce using rule 44 (var_typ -> CHAR .)
    COMMA           reduce using rule 44 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 44 (var_typ -> CHAR .)


state 31

    (45) var_typ -> BOOL .

    OPBRACKET       reduce using rule 45 (var_typ -> BOOL .)
    VAR             reduce using rule 45 (var_typ -> BOOL .)
    MAIN            reduce using rule 45 (var_typ -> BOOL .)
    FUNC            reduce using rule 45 (var_typ -> BOOL .)
    ID              reduce using rule 45 (var_typ -> BOOL .)
    READ            reduce using rule 45 (var_typ -> BOOL .)
    WRITE           reduce using rule 45 (var_typ -> BOOL .)
    WHEN            reduce using rule 45 (var_typ -> BOOL .)
    WHILE           reduce using rule 45 (var_typ -> BOOL .)
    COMMA           reduce using rule 45 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 45 (var_typ -> BOOL .)


state 32

    (46) var_typ -> FRAME .

    OPBRACKET       reduce using rule 46 (var_typ -> FRAME .)
    VAR             reduce using rule 46 (var_typ -> FRAME .)
    MAIN            reduce using rule 46 (var_typ -> FRAME .)
    FUNC            reduce using rule 46 (var_typ -> FRAME .)
    ID              reduce using rule 46 (var_typ -> FRAME .)
    READ            reduce using rule 46 (var_typ -> FRAME .)
    WRITE           reduce using rule 46 (var_typ -> FRAME .)
    WHEN            reduce using rule 46 (var_typ -> FRAME .)
    WHILE           reduce using rule 46 (var_typ -> FRAME .)
    COMMA           reduce using rule 46 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 46 (var_typ -> FRAME .)


state 33

    (21) func -> FUNC context_to_local ID OPPARENTH . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (22) func -> FUNC context_to_local ID OPPARENTH . param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (40) param -> . ID COLON var_typ
    (41) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 38
    ID              shift and go to state 37

    param_list                     shift and go to state 39
    param                          shift and go to state 40

state 34

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 41
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 35

    (10) variable -> VAR ID COLON var_typ dims .

    VAR             reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    MAIN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    FUNC            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    ID              reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    READ            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WRITE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHEN            reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)
    WHILE           reduce using rule 10 (variable -> VAR ID COLON var_typ dims .)


state 36

    (19) dims -> OPBRACKET . aritm CLBRACKET
    (20) dims -> OPBRACKET . aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 55
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 37

    (40) param -> ID . COLON var_typ
    (41) param -> ID . COLON var_typ dims

    COLON           shift and go to state 62


state 38

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 63


state 39

    (22) func -> FUNC context_to_local ID OPPARENTH param_list . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 64


state 40

    (17) param_list -> param . COMMA param_list
    (18) param_list -> param .

    COMMA           shift and go to state 65
    CLPARENTH       reduce using rule 18 (param_list -> param .)


state 41

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 66


state 42

    (15) estat_list -> estat . estat_list
    (16) estat_list -> estat .
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLBRACE         reduce using rule 16 (estat_list -> estat .)
    RETURN          reduce using rule 16 (estat_list -> estat .)
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat                          shift and go to state 42
    estat_list                     shift and go to state 67
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 43

    (31) estat -> asign .

    ID              reduce using rule 31 (estat -> asign .)
    READ            reduce using rule 31 (estat -> asign .)
    WRITE           reduce using rule 31 (estat -> asign .)
    WHEN            reduce using rule 31 (estat -> asign .)
    WHILE           reduce using rule 31 (estat -> asign .)
    CLBRACE         reduce using rule 31 (estat -> asign .)
    RETURN          reduce using rule 31 (estat -> asign .)


state 44

    (32) estat -> llam_void .

    ID              reduce using rule 32 (estat -> llam_void .)
    READ            reduce using rule 32 (estat -> llam_void .)
    WRITE           reduce using rule 32 (estat -> llam_void .)
    WHEN            reduce using rule 32 (estat -> llam_void .)
    WHILE           reduce using rule 32 (estat -> llam_void .)
    CLBRACE         reduce using rule 32 (estat -> llam_void .)
    RETURN          reduce using rule 32 (estat -> llam_void .)


state 45

    (33) estat -> lectura .

    ID              reduce using rule 33 (estat -> lectura .)
    READ            reduce using rule 33 (estat -> lectura .)
    WRITE           reduce using rule 33 (estat -> lectura .)
    WHEN            reduce using rule 33 (estat -> lectura .)
    WHILE           reduce using rule 33 (estat -> lectura .)
    CLBRACE         reduce using rule 33 (estat -> lectura .)
    RETURN          reduce using rule 33 (estat -> lectura .)


state 46

    (34) estat -> escritura .

    ID              reduce using rule 34 (estat -> escritura .)
    READ            reduce using rule 34 (estat -> escritura .)
    WRITE           reduce using rule 34 (estat -> escritura .)
    WHEN            reduce using rule 34 (estat -> escritura .)
    WHILE           reduce using rule 34 (estat -> escritura .)
    CLBRACE         reduce using rule 34 (estat -> escritura .)
    RETURN          reduce using rule 34 (estat -> escritura .)


state 47

    (35) estat -> carga_dt .

    ID              reduce using rule 35 (estat -> carga_dt .)
    READ            reduce using rule 35 (estat -> carga_dt .)
    WRITE           reduce using rule 35 (estat -> carga_dt .)
    WHEN            reduce using rule 35 (estat -> carga_dt .)
    WHILE           reduce using rule 35 (estat -> carga_dt .)
    CLBRACE         reduce using rule 35 (estat -> carga_dt .)
    RETURN          reduce using rule 35 (estat -> carga_dt .)


state 48

    (36) estat -> decision .

    ID              reduce using rule 36 (estat -> decision .)
    READ            reduce using rule 36 (estat -> decision .)
    WRITE           reduce using rule 36 (estat -> decision .)
    WHEN            reduce using rule 36 (estat -> decision .)
    WHILE           reduce using rule 36 (estat -> decision .)
    CLBRACE         reduce using rule 36 (estat -> decision .)
    RETURN          reduce using rule 36 (estat -> decision .)


state 49

    (37) estat -> ciclo .

    ID              reduce using rule 37 (estat -> ciclo .)
    READ            reduce using rule 37 (estat -> ciclo .)
    WRITE           reduce using rule 37 (estat -> ciclo .)
    WHEN            reduce using rule 37 (estat -> ciclo .)
    WHILE           reduce using rule 37 (estat -> ciclo .)
    CLBRACE         reduce using rule 37 (estat -> ciclo .)
    RETURN          reduce using rule 37 (estat -> ciclo .)


state 50

    (80) asign -> ID . ASGNMNT lectura
    (81) asign -> ID . ASGNMNT aritm
    (82) asign -> ID . ASGNMNT CONST_STRING
    (83) asign -> ID . dims ASGNMNT lectura
    (84) asign -> ID . dims ASGNMNT aritm
    (85) asign -> ID . dims ASGNMNT CONST_STRING
    (78) llam_void -> ID . OPPARENTH CLPARENTH
    (79) llam_void -> ID . OPPARENTH args CLPARENTH
    (38) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    ASGNMNT         shift and go to state 68
    OPPARENTH       shift and go to state 70
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 69

state 51

    (74) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 71


state 52

    (75) escritura -> WRITE . OPPARENTH ID CLPARENTH
    (76) escritura -> WRITE . OPPARENTH ID dims CLPARENTH
    (77) escritura -> WRITE . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 72


state 53

    (25) decision -> WHEN . OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN . OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 73


state 54

    (24) ciclo -> WHILE . OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 74


state 55

    (19) dims -> OPBRACKET aritm . CLBRACKET
    (20) dims -> OPBRACKET aritm . CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACKET       shift and go to state 75


state 56

    (62) factor -> CONST_INT .

    TIMES           reduce using rule 62 (factor -> CONST_INT .)
    DIVIDE          reduce using rule 62 (factor -> CONST_INT .)
    PLUS            reduce using rule 62 (factor -> CONST_INT .)
    MINUS           reduce using rule 62 (factor -> CONST_INT .)
    CLBRACKET       reduce using rule 62 (factor -> CONST_INT .)
    CLPARENTH       reduce using rule 62 (factor -> CONST_INT .)
    ID              reduce using rule 62 (factor -> CONST_INT .)
    READ            reduce using rule 62 (factor -> CONST_INT .)
    WRITE           reduce using rule 62 (factor -> CONST_INT .)
    WHEN            reduce using rule 62 (factor -> CONST_INT .)
    WHILE           reduce using rule 62 (factor -> CONST_INT .)
    CLBRACE         reduce using rule 62 (factor -> CONST_INT .)
    RETURN          reduce using rule 62 (factor -> CONST_INT .)
    COMMA           reduce using rule 62 (factor -> CONST_INT .)
    EQUAL           reduce using rule 62 (factor -> CONST_INT .)
    UNEQUAL         reduce using rule 62 (factor -> CONST_INT .)
    LESS            reduce using rule 62 (factor -> CONST_INT .)
    LESSEQ          reduce using rule 62 (factor -> CONST_INT .)
    GREATER         reduce using rule 62 (factor -> CONST_INT .)
    GREATEREQ       reduce using rule 62 (factor -> CONST_INT .)


state 57

    (53) aritm -> term . PLUS aritm
    (54) aritm -> term . MINUS aritm
    (55) aritm -> term .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    CLBRACKET       reduce using rule 55 (aritm -> term .)
    CLPARENTH       reduce using rule 55 (aritm -> term .)
    ID              reduce using rule 55 (aritm -> term .)
    READ            reduce using rule 55 (aritm -> term .)
    WRITE           reduce using rule 55 (aritm -> term .)
    WHEN            reduce using rule 55 (aritm -> term .)
    WHILE           reduce using rule 55 (aritm -> term .)
    CLBRACE         reduce using rule 55 (aritm -> term .)
    RETURN          reduce using rule 55 (aritm -> term .)
    COMMA           reduce using rule 55 (aritm -> term .)
    EQUAL           reduce using rule 55 (aritm -> term .)
    UNEQUAL         reduce using rule 55 (aritm -> term .)
    LESS            reduce using rule 55 (aritm -> term .)
    LESSEQ          reduce using rule 55 (aritm -> term .)
    GREATER         reduce using rule 55 (aritm -> term .)
    GREATEREQ       reduce using rule 55 (aritm -> term .)


state 58

    (56) term -> factor . TIMES term
    (57) term -> factor . DIVIDE term
    (58) term -> factor .

    TIMES           shift and go to state 78
    DIVIDE          shift and go to state 79
    PLUS            reduce using rule 58 (term -> factor .)
    MINUS           reduce using rule 58 (term -> factor .)
    CLBRACKET       reduce using rule 58 (term -> factor .)
    CLPARENTH       reduce using rule 58 (term -> factor .)
    ID              reduce using rule 58 (term -> factor .)
    READ            reduce using rule 58 (term -> factor .)
    WRITE           reduce using rule 58 (term -> factor .)
    WHEN            reduce using rule 58 (term -> factor .)
    WHILE           reduce using rule 58 (term -> factor .)
    CLBRACE         reduce using rule 58 (term -> factor .)
    RETURN          reduce using rule 58 (term -> factor .)
    COMMA           reduce using rule 58 (term -> factor .)
    EQUAL           reduce using rule 58 (term -> factor .)
    UNEQUAL         reduce using rule 58 (term -> factor .)
    LESS            reduce using rule 58 (term -> factor .)
    LESSEQ          reduce using rule 58 (term -> factor .)
    GREATER         reduce using rule 58 (term -> factor .)
    GREATEREQ       reduce using rule 58 (term -> factor .)


state 59

    (59) factor -> OPPARENTH . aritm CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 80
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 60

    (60) factor -> ID .
    (61) factor -> ID . dims
    (64) factor -> ID . OPPARENTH CLPARENTH
    (65) factor -> ID . OPPARENTH args CLPARENTH
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    TIMES           reduce using rule 60 (factor -> ID .)
    DIVIDE          reduce using rule 60 (factor -> ID .)
    PLUS            reduce using rule 60 (factor -> ID .)
    MINUS           reduce using rule 60 (factor -> ID .)
    CLBRACKET       reduce using rule 60 (factor -> ID .)
    CLPARENTH       reduce using rule 60 (factor -> ID .)
    ID              reduce using rule 60 (factor -> ID .)
    READ            reduce using rule 60 (factor -> ID .)
    WRITE           reduce using rule 60 (factor -> ID .)
    WHEN            reduce using rule 60 (factor -> ID .)
    WHILE           reduce using rule 60 (factor -> ID .)
    CLBRACE         reduce using rule 60 (factor -> ID .)
    RETURN          reduce using rule 60 (factor -> ID .)
    COMMA           reduce using rule 60 (factor -> ID .)
    EQUAL           reduce using rule 60 (factor -> ID .)
    UNEQUAL         reduce using rule 60 (factor -> ID .)
    LESS            reduce using rule 60 (factor -> ID .)
    LESSEQ          reduce using rule 60 (factor -> ID .)
    GREATER         reduce using rule 60 (factor -> ID .)
    GREATEREQ       reduce using rule 60 (factor -> ID .)
    OPPARENTH       shift and go to state 82
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 81

state 61

    (63) factor -> CONST_FLOAT .

    TIMES           reduce using rule 63 (factor -> CONST_FLOAT .)
    DIVIDE          reduce using rule 63 (factor -> CONST_FLOAT .)
    PLUS            reduce using rule 63 (factor -> CONST_FLOAT .)
    MINUS           reduce using rule 63 (factor -> CONST_FLOAT .)
    CLBRACKET       reduce using rule 63 (factor -> CONST_FLOAT .)
    CLPARENTH       reduce using rule 63 (factor -> CONST_FLOAT .)
    ID              reduce using rule 63 (factor -> CONST_FLOAT .)
    READ            reduce using rule 63 (factor -> CONST_FLOAT .)
    WRITE           reduce using rule 63 (factor -> CONST_FLOAT .)
    WHEN            reduce using rule 63 (factor -> CONST_FLOAT .)
    WHILE           reduce using rule 63 (factor -> CONST_FLOAT .)
    CLBRACE         reduce using rule 63 (factor -> CONST_FLOAT .)
    RETURN          reduce using rule 63 (factor -> CONST_FLOAT .)
    COMMA           reduce using rule 63 (factor -> CONST_FLOAT .)
    EQUAL           reduce using rule 63 (factor -> CONST_FLOAT .)
    UNEQUAL         reduce using rule 63 (factor -> CONST_FLOAT .)
    LESS            reduce using rule 63 (factor -> CONST_FLOAT .)
    LESSEQ          reduce using rule 63 (factor -> CONST_FLOAT .)
    GREATER         reduce using rule 63 (factor -> CONST_FLOAT .)
    GREATEREQ       reduce using rule 63 (factor -> CONST_FLOAT .)


state 62

    (40) param -> ID COLON . var_typ
    (41) param -> ID COLON . var_typ dims
    (42) var_typ -> . INT
    (43) var_typ -> . FLOAT
    (44) var_typ -> . CHAR
    (45) var_typ -> . BOOL
    (46) var_typ -> . FRAME

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    BOOL            shift and go to state 31
    FRAME           shift and go to state 32

    var_typ                        shift and go to state 83

state 63

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (47) func_typ -> . INT
    (48) func_typ -> . FLOAT
    (49) func_typ -> . CHAR
    (50) func_typ -> . BOOL
    (51) func_typ -> . FRAME
    (52) func_typ -> . VOID

    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    CHAR            shift and go to state 87
    BOOL            shift and go to state 88
    FRAME           shift and go to state 89
    VOID            shift and go to state 90

    func_typ                       shift and go to state 84

state 64

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 91


state 65

    (17) param_list -> param COMMA . param_list
    (17) param_list -> . param COMMA param_list
    (18) param_list -> . param
    (40) param -> . ID COLON var_typ
    (41) param -> . ID COLON var_typ dims

    ID              shift and go to state 37

    param                          shift and go to state 40
    param_list                     shift and go to state 92

state 66

    (8) cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .

    $end            reduce using rule 8 (cuerpo -> MAIN context_to_global OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .)


state 67

    (15) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 15 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 15 (estat_list -> estat estat_list .)


state 68

    (80) asign -> ID ASGNMNT . lectura
    (81) asign -> ID ASGNMNT . aritm
    (82) asign -> ID ASGNMNT . CONST_STRING
    (38) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    CONST_STRING    shift and go to state 95
    LOAD            shift and go to state 96
    READ            shift and go to state 51
    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    lectura                        shift and go to state 93
    aritm                          shift and go to state 94
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 69

    (83) asign -> ID dims . ASGNMNT lectura
    (84) asign -> ID dims . ASGNMNT aritm
    (85) asign -> ID dims . ASGNMNT CONST_STRING

    ASGNMNT         shift and go to state 97


state 70

    (78) llam_void -> ID OPPARENTH . CLPARENTH
    (79) llam_void -> ID OPPARENTH . args CLPARENTH
    (72) args -> . aritm COMMA args
    (73) args -> . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    CLPARENTH       shift and go to state 98
    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    args                           shift and go to state 99
    aritm                          shift and go to state 100
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 71

    (74) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 101


state 72

    (75) escritura -> WRITE OPPARENTH . ID CLPARENTH
    (76) escritura -> WRITE OPPARENTH . ID dims CLPARENTH
    (77) escritura -> WRITE OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 102
    CONST_STRING    shift and go to state 103


state 73

    (25) decision -> WHEN OPPARENTH . relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH . relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (66) relac -> . aritm EQUAL aritm
    (67) relac -> . aritm UNEQUAL aritm
    (68) relac -> . aritm LESS aritm
    (69) relac -> . aritm LESSEQ aritm
    (70) relac -> . aritm GREATER aritm
    (71) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    relac                          shift and go to state 104
    aritm                          shift and go to state 105
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 74

    (24) ciclo -> WHILE OPPARENTH . relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (66) relac -> . aritm EQUAL aritm
    (67) relac -> . aritm UNEQUAL aritm
    (68) relac -> . aritm LESS aritm
    (69) relac -> . aritm LESSEQ aritm
    (70) relac -> . aritm GREATER aritm
    (71) relac -> . aritm GREATEREQ aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    relac                          shift and go to state 106
    aritm                          shift and go to state 105
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 75

    (19) dims -> OPBRACKET aritm CLBRACKET .
    (20) dims -> OPBRACKET aritm CLBRACKET . OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    MAIN            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    FUNC            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    ID              reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    READ            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WRITE           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WHEN            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    WHILE           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    ASGNMNT         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    TIMES           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    DIVIDE          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    PLUS            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    MINUS           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACKET       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLPARENTH       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACE         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    RETURN          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    COMMA           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    EQUAL           reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    UNEQUAL         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    LESS            reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    LESSEQ          reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATER         reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATEREQ       reduce using rule 19 (dims -> OPBRACKET aritm CLBRACKET .)
    OPBRACKET       shift and go to state 107


state 76

    (53) aritm -> term PLUS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    term                           shift and go to state 57
    aritm                          shift and go to state 108
    factor                         shift and go to state 58

state 77

    (54) aritm -> term MINUS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    term                           shift and go to state 57
    aritm                          shift and go to state 109
    factor                         shift and go to state 58

state 78

    (56) term -> factor TIMES . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    factor                         shift and go to state 58
    term                           shift and go to state 110

state 79

    (57) term -> factor DIVIDE . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    factor                         shift and go to state 58
    term                           shift and go to state 111

state 80

    (59) factor -> OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 112


state 81

    (61) factor -> ID dims .

    TIMES           reduce using rule 61 (factor -> ID dims .)
    DIVIDE          reduce using rule 61 (factor -> ID dims .)
    PLUS            reduce using rule 61 (factor -> ID dims .)
    MINUS           reduce using rule 61 (factor -> ID dims .)
    CLBRACKET       reduce using rule 61 (factor -> ID dims .)
    CLPARENTH       reduce using rule 61 (factor -> ID dims .)
    ID              reduce using rule 61 (factor -> ID dims .)
    READ            reduce using rule 61 (factor -> ID dims .)
    WRITE           reduce using rule 61 (factor -> ID dims .)
    WHEN            reduce using rule 61 (factor -> ID dims .)
    WHILE           reduce using rule 61 (factor -> ID dims .)
    CLBRACE         reduce using rule 61 (factor -> ID dims .)
    RETURN          reduce using rule 61 (factor -> ID dims .)
    COMMA           reduce using rule 61 (factor -> ID dims .)
    EQUAL           reduce using rule 61 (factor -> ID dims .)
    UNEQUAL         reduce using rule 61 (factor -> ID dims .)
    LESS            reduce using rule 61 (factor -> ID dims .)
    LESSEQ          reduce using rule 61 (factor -> ID dims .)
    GREATER         reduce using rule 61 (factor -> ID dims .)
    GREATEREQ       reduce using rule 61 (factor -> ID dims .)


state 82

    (64) factor -> ID OPPARENTH . CLPARENTH
    (65) factor -> ID OPPARENTH . args CLPARENTH
    (72) args -> . aritm COMMA args
    (73) args -> . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    CLPARENTH       shift and go to state 113
    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    args                           shift and go to state 114
    aritm                          shift and go to state 100
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 83

    (40) param -> ID COLON var_typ .
    (41) param -> ID COLON var_typ . dims
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    COMMA           reduce using rule 40 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 40 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 115

state 84

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 116


state 85

    (47) func_typ -> INT .

    OPBRACE         reduce using rule 47 (func_typ -> INT .)


state 86

    (48) func_typ -> FLOAT .

    OPBRACE         reduce using rule 48 (func_typ -> FLOAT .)


state 87

    (49) func_typ -> CHAR .

    OPBRACE         reduce using rule 49 (func_typ -> CHAR .)


state 88

    (50) func_typ -> BOOL .

    OPBRACE         reduce using rule 50 (func_typ -> BOOL .)


state 89

    (51) func_typ -> FRAME .

    OPBRACE         reduce using rule 51 (func_typ -> FRAME .)


state 90

    (52) func_typ -> VOID .

    OPBRACE         reduce using rule 52 (func_typ -> VOID .)


state 91

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (47) func_typ -> . INT
    (48) func_typ -> . FLOAT
    (49) func_typ -> . CHAR
    (50) func_typ -> . BOOL
    (51) func_typ -> . FRAME
    (52) func_typ -> . VOID

    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    CHAR            shift and go to state 87
    BOOL            shift and go to state 88
    FRAME           shift and go to state 89
    VOID            shift and go to state 90

    func_typ                       shift and go to state 117

state 92

    (17) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 17 (param_list -> param COMMA param_list .)


state 93

    (80) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 80 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 80 (asign -> ID ASGNMNT lectura .)


state 94

    (81) asign -> ID ASGNMNT aritm .

    ID              reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    READ            reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    WRITE           reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    WHEN            reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    WHILE           reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    CLBRACE         reduce using rule 81 (asign -> ID ASGNMNT aritm .)
    RETURN          reduce using rule 81 (asign -> ID ASGNMNT aritm .)


state 95

    (82) asign -> ID ASGNMNT CONST_STRING .

    ID              reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    READ            reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 82 (asign -> ID ASGNMNT CONST_STRING .)


state 96

    (38) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 118


state 97

    (83) asign -> ID dims ASGNMNT . lectura
    (84) asign -> ID dims ASGNMNT . aritm
    (85) asign -> ID dims ASGNMNT . CONST_STRING
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    CONST_STRING    shift and go to state 121
    READ            shift and go to state 51
    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    lectura                        shift and go to state 119
    aritm                          shift and go to state 120
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 98

    (78) llam_void -> ID OPPARENTH CLPARENTH .

    ID              reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 78 (llam_void -> ID OPPARENTH CLPARENTH .)


state 99

    (79) llam_void -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 122


state 100

    (72) args -> aritm . COMMA args
    (73) args -> aritm .

    COMMA           shift and go to state 123
    CLPARENTH       reduce using rule 73 (args -> aritm .)


state 101

    (74) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 74 (lectura -> READ OPPARENTH CLPARENTH .)


state 102

    (75) escritura -> WRITE OPPARENTH ID . CLPARENTH
    (76) escritura -> WRITE OPPARENTH ID . dims CLPARENTH
    (19) dims -> . OPBRACKET aritm CLBRACKET
    (20) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLPARENTH       shift and go to state 124
    OPBRACKET       shift and go to state 36

    dims                           shift and go to state 125

state 103

    (77) escritura -> WRITE OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 126


state 104

    (25) decision -> WHEN OPPARENTH relac . CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH relac . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 127


state 105

    (66) relac -> aritm . EQUAL aritm
    (67) relac -> aritm . UNEQUAL aritm
    (68) relac -> aritm . LESS aritm
    (69) relac -> aritm . LESSEQ aritm
    (70) relac -> aritm . GREATER aritm
    (71) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 128
    UNEQUAL         shift and go to state 129
    LESS            shift and go to state 130
    LESSEQ          shift and go to state 131
    GREATER         shift and go to state 132
    GREATEREQ       shift and go to state 133


state 106

    (24) ciclo -> WHILE OPPARENTH relac . CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 134


state 107

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET . CONST_INT CLBRACKET

    CONST_INT       shift and go to state 135


state 108

    (53) aritm -> term PLUS aritm .

    CLBRACKET       reduce using rule 53 (aritm -> term PLUS aritm .)
    CLPARENTH       reduce using rule 53 (aritm -> term PLUS aritm .)
    ID              reduce using rule 53 (aritm -> term PLUS aritm .)
    READ            reduce using rule 53 (aritm -> term PLUS aritm .)
    WRITE           reduce using rule 53 (aritm -> term PLUS aritm .)
    WHEN            reduce using rule 53 (aritm -> term PLUS aritm .)
    WHILE           reduce using rule 53 (aritm -> term PLUS aritm .)
    CLBRACE         reduce using rule 53 (aritm -> term PLUS aritm .)
    RETURN          reduce using rule 53 (aritm -> term PLUS aritm .)
    COMMA           reduce using rule 53 (aritm -> term PLUS aritm .)
    EQUAL           reduce using rule 53 (aritm -> term PLUS aritm .)
    UNEQUAL         reduce using rule 53 (aritm -> term PLUS aritm .)
    LESS            reduce using rule 53 (aritm -> term PLUS aritm .)
    LESSEQ          reduce using rule 53 (aritm -> term PLUS aritm .)
    GREATER         reduce using rule 53 (aritm -> term PLUS aritm .)
    GREATEREQ       reduce using rule 53 (aritm -> term PLUS aritm .)


state 109

    (54) aritm -> term MINUS aritm .

    CLBRACKET       reduce using rule 54 (aritm -> term MINUS aritm .)
    CLPARENTH       reduce using rule 54 (aritm -> term MINUS aritm .)
    ID              reduce using rule 54 (aritm -> term MINUS aritm .)
    READ            reduce using rule 54 (aritm -> term MINUS aritm .)
    WRITE           reduce using rule 54 (aritm -> term MINUS aritm .)
    WHEN            reduce using rule 54 (aritm -> term MINUS aritm .)
    WHILE           reduce using rule 54 (aritm -> term MINUS aritm .)
    CLBRACE         reduce using rule 54 (aritm -> term MINUS aritm .)
    RETURN          reduce using rule 54 (aritm -> term MINUS aritm .)
    COMMA           reduce using rule 54 (aritm -> term MINUS aritm .)
    EQUAL           reduce using rule 54 (aritm -> term MINUS aritm .)
    UNEQUAL         reduce using rule 54 (aritm -> term MINUS aritm .)
    LESS            reduce using rule 54 (aritm -> term MINUS aritm .)
    LESSEQ          reduce using rule 54 (aritm -> term MINUS aritm .)
    GREATER         reduce using rule 54 (aritm -> term MINUS aritm .)
    GREATEREQ       reduce using rule 54 (aritm -> term MINUS aritm .)


state 110

    (56) term -> factor TIMES term .

    PLUS            reduce using rule 56 (term -> factor TIMES term .)
    MINUS           reduce using rule 56 (term -> factor TIMES term .)
    CLBRACKET       reduce using rule 56 (term -> factor TIMES term .)
    CLPARENTH       reduce using rule 56 (term -> factor TIMES term .)
    ID              reduce using rule 56 (term -> factor TIMES term .)
    READ            reduce using rule 56 (term -> factor TIMES term .)
    WRITE           reduce using rule 56 (term -> factor TIMES term .)
    WHEN            reduce using rule 56 (term -> factor TIMES term .)
    WHILE           reduce using rule 56 (term -> factor TIMES term .)
    CLBRACE         reduce using rule 56 (term -> factor TIMES term .)
    RETURN          reduce using rule 56 (term -> factor TIMES term .)
    COMMA           reduce using rule 56 (term -> factor TIMES term .)
    EQUAL           reduce using rule 56 (term -> factor TIMES term .)
    UNEQUAL         reduce using rule 56 (term -> factor TIMES term .)
    LESS            reduce using rule 56 (term -> factor TIMES term .)
    LESSEQ          reduce using rule 56 (term -> factor TIMES term .)
    GREATER         reduce using rule 56 (term -> factor TIMES term .)
    GREATEREQ       reduce using rule 56 (term -> factor TIMES term .)


state 111

    (57) term -> factor DIVIDE term .

    PLUS            reduce using rule 57 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 57 (term -> factor DIVIDE term .)
    CLBRACKET       reduce using rule 57 (term -> factor DIVIDE term .)
    CLPARENTH       reduce using rule 57 (term -> factor DIVIDE term .)
    ID              reduce using rule 57 (term -> factor DIVIDE term .)
    READ            reduce using rule 57 (term -> factor DIVIDE term .)
    WRITE           reduce using rule 57 (term -> factor DIVIDE term .)
    WHEN            reduce using rule 57 (term -> factor DIVIDE term .)
    WHILE           reduce using rule 57 (term -> factor DIVIDE term .)
    CLBRACE         reduce using rule 57 (term -> factor DIVIDE term .)
    RETURN          reduce using rule 57 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 57 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 57 (term -> factor DIVIDE term .)
    UNEQUAL         reduce using rule 57 (term -> factor DIVIDE term .)
    LESS            reduce using rule 57 (term -> factor DIVIDE term .)
    LESSEQ          reduce using rule 57 (term -> factor DIVIDE term .)
    GREATER         reduce using rule 57 (term -> factor DIVIDE term .)
    GREATEREQ       reduce using rule 57 (term -> factor DIVIDE term .)


state 112

    (59) factor -> OPPARENTH aritm CLPARENTH .

    TIMES           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    DIVIDE          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    PLUS            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    MINUS           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACKET       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLPARENTH       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    ID              reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    COMMA           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    EQUAL           reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    UNEQUAL         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    LESS            reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    LESSEQ          reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATER         reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATEREQ       reduce using rule 59 (factor -> OPPARENTH aritm CLPARENTH .)


state 113

    (64) factor -> ID OPPARENTH CLPARENTH .

    TIMES           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    DIVIDE          reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    PLUS            reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    MINUS           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    CLBRACKET       reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    CLPARENTH       reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    ID              reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    COMMA           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    EQUAL           reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    UNEQUAL         reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    LESS            reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    LESSEQ          reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    GREATER         reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)
    GREATEREQ       reduce using rule 64 (factor -> ID OPPARENTH CLPARENTH .)


state 114

    (65) factor -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 136


state 115

    (41) param -> ID COLON var_typ dims .

    COMMA           reduce using rule 41 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 41 (param -> ID COLON var_typ dims .)


state 116

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (27) func_cont -> . var_list estat_list RETURN aritm
    (28) func_cont -> . estat_list RETURN aritm
    (29) func_cont -> . var_list estat_list
    (30) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    func_cont                      shift and go to state 137
    var_list                       shift and go to state 138
    estat_list                     shift and go to state 139
    variable                       shift and go to state 7
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 117

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 140


state 118

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 141
    CONST_STRING    shift and go to state 142


state 119

    (83) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 83 (asign -> ID dims ASGNMNT lectura .)


state 120

    (84) asign -> ID dims ASGNMNT aritm .

    ID              reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    READ            reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    WRITE           reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    WHEN            reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    WHILE           reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    CLBRACE         reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)
    RETURN          reduce using rule 84 (asign -> ID dims ASGNMNT aritm .)


state 121

    (85) asign -> ID dims ASGNMNT CONST_STRING .

    ID              reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    READ            reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 85 (asign -> ID dims ASGNMNT CONST_STRING .)


state 122

    (79) llam_void -> ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 79 (llam_void -> ID OPPARENTH args CLPARENTH .)


state 123

    (72) args -> aritm COMMA . args
    (72) args -> . aritm COMMA args
    (73) args -> . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 100
    args                           shift and go to state 143
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 124

    (75) escritura -> WRITE OPPARENTH ID CLPARENTH .

    ID              reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 75 (escritura -> WRITE OPPARENTH ID CLPARENTH .)


state 125

    (76) escritura -> WRITE OPPARENTH ID dims . CLPARENTH

    CLPARENTH       shift and go to state 144


state 126

    (77) escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 77 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)


state 127

    (25) decision -> WHEN OPPARENTH relac CLPARENTH . THEN OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH relac CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    THEN            shift and go to state 145


state 128

    (66) relac -> aritm EQUAL . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 146
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 129

    (67) relac -> aritm UNEQUAL . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 147
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 130

    (68) relac -> aritm LESS . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 148
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 131

    (69) relac -> aritm LESSEQ . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 149
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 132

    (70) relac -> aritm GREATER . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 150
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 133

    (71) relac -> aritm GREATEREQ . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 151
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 134

    (24) ciclo -> WHILE OPPARENTH relac CLPARENTH . THEN OPBRACE estat_list CLBRACE

    THEN            shift and go to state 152


state 135

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT . CLBRACKET

    CLBRACKET       shift and go to state 153


state 136

    (65) factor -> ID OPPARENTH args CLPARENTH .

    TIMES           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    DIVIDE          reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    PLUS            reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    MINUS           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    CLBRACKET       reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    CLPARENTH       reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    ID              reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    COMMA           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    EQUAL           reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    UNEQUAL         reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    LESS            reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    LESSEQ          reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    GREATER         reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)
    GREATEREQ       reduce using rule 65 (factor -> ID OPPARENTH args CLPARENTH .)


state 137

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 154


state 138

    (27) func_cont -> var_list . estat_list RETURN aritm
    (29) func_cont -> var_list . estat_list
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 155
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 139

    (28) func_cont -> estat_list . RETURN aritm
    (30) func_cont -> estat_list .

    RETURN          shift and go to state 156
    CLBRACE         reduce using rule 30 (func_cont -> estat_list .)


state 140

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (27) func_cont -> . var_list estat_list RETURN aritm
    (28) func_cont -> . estat_list RETURN aritm
    (29) func_cont -> . var_list estat_list
    (30) func_cont -> . estat_list
    (11) var_list -> . variable var_list
    (12) var_list -> . variable
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (9) variable -> . VAR ID COLON var_typ
    (10) variable -> . VAR ID COLON var_typ dims
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    func_cont                      shift and go to state 157
    var_list                       shift and go to state 138
    estat_list                     shift and go to state 139
    variable                       shift and go to state 7
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 141

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 158


state 142

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 159


state 143

    (72) args -> aritm COMMA args .

    CLPARENTH       reduce using rule 72 (args -> aritm COMMA args .)


state 144

    (76) escritura -> WRITE OPPARENTH ID dims CLPARENTH .

    ID              reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    READ            reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WRITE           reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHEN            reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHILE           reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    CLBRACE         reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    RETURN          reduce using rule 76 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)


state 145

    (25) decision -> WHEN OPPARENTH relac CLPARENTH THEN . OPBRACE estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 160


state 146

    (66) relac -> aritm EQUAL aritm .

    CLPARENTH       reduce using rule 66 (relac -> aritm EQUAL aritm .)


state 147

    (67) relac -> aritm UNEQUAL aritm .

    CLPARENTH       reduce using rule 67 (relac -> aritm UNEQUAL aritm .)


state 148

    (68) relac -> aritm LESS aritm .

    CLPARENTH       reduce using rule 68 (relac -> aritm LESS aritm .)


state 149

    (69) relac -> aritm LESSEQ aritm .

    CLPARENTH       reduce using rule 69 (relac -> aritm LESSEQ aritm .)


state 150

    (70) relac -> aritm GREATER aritm .

    CLPARENTH       reduce using rule 70 (relac -> aritm GREATER aritm .)


state 151

    (71) relac -> aritm GREATEREQ aritm .

    CLPARENTH       reduce using rule 71 (relac -> aritm GREATEREQ aritm .)


state 152

    (24) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 161


state 153

    (20) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .

    VAR             reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MAIN            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    FUNC            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ID              reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    READ            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WRITE           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHEN            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHILE           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ASGNMNT         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    TIMES           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    DIVIDE          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    PLUS            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MINUS           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACKET       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLPARENTH       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACE         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    RETURN          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    COMMA           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    EQUAL           reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    UNEQUAL         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESS            reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESSEQ          reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATER         reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATEREQ       reduce using rule 20 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)


state 154

    (21) func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 21 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 21 (func -> FUNC context_to_local ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 155

    (27) func_cont -> var_list estat_list . RETURN aritm
    (29) func_cont -> var_list estat_list .

    RETURN          shift and go to state 162
    CLBRACE         reduce using rule 29 (func_cont -> var_list estat_list .)


state 156

    (28) func_cont -> estat_list RETURN . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 163
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 157

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 164


state 158

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 159

    (39) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 39 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)


state 160

    (25) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 165
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 161

    (24) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 166
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 162

    (27) func_cont -> var_list estat_list RETURN . aritm
    (53) aritm -> . term PLUS aritm
    (54) aritm -> . term MINUS aritm
    (55) aritm -> . term
    (56) term -> . factor TIMES term
    (57) term -> . factor DIVIDE term
    (58) term -> . factor
    (59) factor -> . OPPARENTH aritm CLPARENTH
    (60) factor -> . ID
    (61) factor -> . ID dims
    (62) factor -> . CONST_INT
    (63) factor -> . CONST_FLOAT
    (64) factor -> . ID OPPARENTH CLPARENTH
    (65) factor -> . ID OPPARENTH args CLPARENTH

    OPPARENTH       shift and go to state 59
    ID              shift and go to state 60
    CONST_INT       shift and go to state 56
    CONST_FLOAT     shift and go to state 61

    aritm                          shift and go to state 167
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 163

    (28) func_cont -> estat_list RETURN aritm .

    CLBRACE         reduce using rule 28 (func_cont -> estat_list RETURN aritm .)


state 164

    (22) func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 22 (func -> FUNC context_to_local ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 165

    (25) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list . CLBRACE
    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLBRACE         shift and go to state 168


state 166

    (24) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 169


state 167

    (27) func_cont -> var_list estat_list RETURN aritm .

    CLBRACE         reduce using rule 27 (func_cont -> var_list estat_list RETURN aritm .)


state 168

    (25) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .
    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE OPBRACE estat_list CLBRACE

    ID              reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 25 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    ELSE            shift and go to state 170


state 169

    (24) ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .

    ID              reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 24 (ciclo -> WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE .)


state 170

    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 171


state 171

    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE . estat_list CLBRACE
    (15) estat_list -> . estat estat_list
    (16) estat_list -> . estat
    (31) estat -> . asign
    (32) estat -> . llam_void
    (33) estat -> . lectura
    (34) estat -> . escritura
    (35) estat -> . carga_dt
    (36) estat -> . decision
    (37) estat -> . ciclo
    (80) asign -> . ID ASGNMNT lectura
    (81) asign -> . ID ASGNMNT aritm
    (82) asign -> . ID ASGNMNT CONST_STRING
    (83) asign -> . ID dims ASGNMNT lectura
    (84) asign -> . ID dims ASGNMNT aritm
    (85) asign -> . ID dims ASGNMNT CONST_STRING
    (78) llam_void -> . ID OPPARENTH CLPARENTH
    (79) llam_void -> . ID OPPARENTH args CLPARENTH
    (74) lectura -> . READ OPPARENTH CLPARENTH
    (75) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (76) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (77) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (39) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (25) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE
    (26) decision -> . WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (24) ciclo -> . WHILE OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    WHEN            shift and go to state 53
    WHILE           shift and go to state 54

    estat_list                     shift and go to state 172
    estat                          shift and go to state 42
    asign                          shift and go to state 43
    llam_void                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    carga_dt                       shift and go to state 47
    decision                       shift and go to state 48
    ciclo                          shift and go to state 49

state 172

    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 173


state 173

    (26) decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .

    ID              reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 26 (decision -> WHEN OPPARENTH relac CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)

