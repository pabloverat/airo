Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> encabezamiento var_list func_list cuerpo
Rule 2     program -> encabezamiento var_list cuerpo
Rule 3     program -> encabezamiento func_list cuerpo
Rule 4     program -> encabezamiento cuerpo
Rule 5     encabezamiento -> PROGRAM ID
Rule 6     cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
Rule 7     variable -> VAR ID COLON var_typ
Rule 8     variable -> VAR ID COLON var_typ dims
Rule 9     var_list -> variable var_list
Rule 10    var_list -> variable
Rule 11    func_list -> func func_list
Rule 12    func_list -> func
Rule 13    estat_list -> estat estat_list
Rule 14    estat_list -> estat
Rule 15    param_list -> param COMMA param_list
Rule 16    param_list -> param
Rule 17    dims -> OPBRACKET aritm CLBRACKET
Rule 18    dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
Rule 19    func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 20    func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
Rule 21    ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 22    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
Rule 23    decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
Rule 24    func_cont -> var_list estat_list RETURN ID dims
Rule 25    func_cont -> var_list estat_list RETURN ID
Rule 26    func_cont -> estat_list RETURN ID dims
Rule 27    func_cont -> estat_list RETURN ID
Rule 28    func_cont -> var_list estat_list
Rule 29    func_cont -> estat_list
Rule 30    estat -> asign
Rule 31    estat -> llam_void
Rule 32    estat -> lectura
Rule 33    estat -> escritura
Rule 34    estat -> carga_dt
Rule 35    estat -> decision
Rule 36    estat -> ciclo
Rule 37    carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
Rule 38    carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
Rule 39    param -> ID COLON var_typ
Rule 40    param -> ID COLON var_typ dims
Rule 41    var_typ -> INT
Rule 42    var_typ -> FLOAT
Rule 43    var_typ -> CHAR
Rule 44    var_typ -> BOOL
Rule 45    var_typ -> FRAME
Rule 46    func_typ -> INT
Rule 47    func_typ -> FLOAT
Rule 48    func_typ -> CHAR
Rule 49    func_typ -> BOOL
Rule 50    func_typ -> FRAME
Rule 51    func_typ -> VOID
Rule 52    aritm -> term PLUS aritm
Rule 53    aritm -> term MINUS aritm
Rule 54    aritm -> term
Rule 55    term -> factor TIMES term
Rule 56    term -> factor DIVIDE term
Rule 57    term -> factor
Rule 58    factor -> OPPARENTH aritm CLPARENTH
Rule 59    factor -> ID
Rule 60    factor -> ID dims
Rule 61    factor -> CONST_INT
Rule 62    factor -> CONST_FLOAT
Rule 63    logic -> oprnd AND logic
Rule 64    logic -> oprnd OR logic
Rule 65    logic -> NOT oprnd
Rule 66    logic -> oprnd
Rule 67    expr -> aritm
Rule 68    expr -> logic
Rule 69    oprnd -> FALSE
Rule 70    oprnd -> TRUE
Rule 71    oprnd -> relac
Rule 72    oprnd -> OPPARENTH logic CLPARENTH
Rule 73    relac -> aritm EQUAL aritm
Rule 74    relac -> aritm UNEQUAL aritm
Rule 75    relac -> aritm LESS aritm
Rule 76    relac -> aritm LESSEQ aritm
Rule 77    relac -> aritm GREATER aritm
Rule 78    relac -> aritm GREATEREQ aritm
Rule 79    arg -> ID OPPARENTH CLPARENTH
Rule 80    arg -> ID OPPARENTH args CLPARENTH
Rule 81    arg -> expr
Rule 82    args -> arg COMMA args
Rule 83    args -> arg
Rule 84    lectura -> READ OPPARENTH CLPARENTH
Rule 85    escritura -> WRITE OPPARENTH ID CLPARENTH
Rule 86    escritura -> WRITE OPPARENTH ID dims CLPARENTH
Rule 87    escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH
Rule 88    llam_void -> ID OPPARENTH CLPARENTH
Rule 89    llam_void -> ID OPPARENTH args CLPARENTH
Rule 90    asign -> ID ASGNMNT lectura
Rule 91    asign -> ID ASGNMNT expr
Rule 92    asign -> ID ASGNMNT CONST_STRING
Rule 93    asign -> ID ASGNMNT ID OPPARENTH CLPARENTH
Rule 94    asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH
Rule 95    asign -> ID dims ASGNMNT lectura
Rule 96    asign -> ID dims ASGNMNT expr
Rule 97    asign -> ID dims ASGNMNT CONST_STRING
Rule 98    asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH
Rule 99    asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH

Terminals, with rules where they appear

AND                  : 63
ASGNMNT              : 37 38 90 91 92 93 94 95 96 97 98 99
BOOL                 : 44 49
CHAR                 : 43 48
CLBRACE              : 6 19 20 21 22 23 23
CLBRACKET            : 17 18 18
CLPARENTH            : 6 19 20 21 22 23 37 38 58 72 79 80 84 85 86 87 88 89 93 94 98 99
COLON                : 7 8 19 20 39 40
COMMA                : 15 82
CONST_FLOAT          : 62
CONST_INT            : 18 61
CONST_STRING         : 38 87 92 97
DIVIDE               : 56
ELSE                 : 23
EQUAL                : 73
FALSE                : 69
FLOAT                : 42 47
FRAME                : 45 50
FUNC                 : 19 20
GREATER              : 77
GREATEREQ            : 78
ID                   : 5 7 8 19 20 24 25 26 27 37 37 38 39 40 59 60 79 80 85 86 88 89 90 91 92 93 93 94 94 95 96 97 98 98 99 99
INT                  : 41 46
LESS                 : 75
LESSEQ               : 76
LOAD                 : 37 38
MAIN                 : 6
MINUS                : 53
NOT                  : 65
OPBRACE              : 6 19 20 21 22 23 23
OPBRACKET            : 17 18 18
OPPARENTH            : 6 19 20 21 22 23 37 38 58 72 79 80 84 85 86 87 88 89 93 94 98 99
OR                   : 64
PLUS                 : 52
PROGRAM              : 5
READ                 : 84
RETURN               : 24 25 26 27
THEN                 : 21 22 23
TIMES                : 55
TRUE                 : 70
UNEQUAL              : 74
VAR                  : 7 8
VOID                 : 51
WHEN                 : 22 23
WHILE                : 21
WRITE                : 85 86 87
error                : 

Nonterminals, with rules where they appear

arg                  : 82 83
args                 : 80 82 89 94 99
aritm                : 17 18 52 53 58 67 73 73 74 74 75 75 76 76 77 77 78 78
asign                : 30
carga_dt             : 34
ciclo                : 36
cuerpo               : 1 2 3 4
decision             : 35
dims                 : 8 24 26 40 60 86 95 96 97 98 99
encabezamiento       : 1 2 3 4
escritura            : 33
estat                : 13 14
estat_list           : 6 13 21 22 23 23 24 25 26 27 28 29
expr                 : 81 91 96
factor               : 55 56 57
func                 : 11 12
func_cont            : 19 20
func_list            : 1 3 11
func_typ             : 19 20
lectura              : 32 90 95
llam_void            : 31
logic                : 21 22 23 63 64 68 72
oprnd                : 63 64 65 66
param                : 15 16
param_list           : 15 20
program              : 0
relac                : 71
term                 : 52 53 54 55 56
var_list             : 1 2 9 24 25 28
var_typ              : 7 8 39 40
variable             : 9 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . encabezamiento var_list func_list cuerpo
    (2) program -> . encabezamiento var_list cuerpo
    (3) program -> . encabezamiento func_list cuerpo
    (4) program -> . encabezamiento cuerpo
    (5) encabezamiento -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    encabezamiento                 shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> encabezamiento . var_list func_list cuerpo
    (2) program -> encabezamiento . var_list cuerpo
    (3) program -> encabezamiento . func_list cuerpo
    (4) program -> encabezamiento . cuerpo
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (19) func -> . FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    FUNC            shift and go to state 11

    var_list                       shift and go to state 4
    func_list                      shift and go to state 5
    cuerpo                         shift and go to state 6
    variable                       shift and go to state 7
    func                           shift and go to state 8

state 3

    (5) encabezamiento -> PROGRAM . ID

    ID              shift and go to state 12


state 4

    (1) program -> encabezamiento var_list . func_list cuerpo
    (2) program -> encabezamiento var_list . cuerpo
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE
    (19) func -> . FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            shift and go to state 9
    FUNC            shift and go to state 11

    func_list                      shift and go to state 13
    cuerpo                         shift and go to state 14
    func                           shift and go to state 8

state 5

    (3) program -> encabezamiento func_list . cuerpo
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 15

state 6

    (4) program -> encabezamiento cuerpo .

    $end            reduce using rule 4 (program -> encabezamiento cuerpo .)


state 7

    (9) var_list -> variable . var_list
    (10) var_list -> variable .
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims

    MAIN            reduce using rule 10 (var_list -> variable .)
    FUNC            reduce using rule 10 (var_list -> variable .)
    ID              reduce using rule 10 (var_list -> variable .)
    READ            reduce using rule 10 (var_list -> variable .)
    WRITE           reduce using rule 10 (var_list -> variable .)
    WHEN            reduce using rule 10 (var_list -> variable .)
    WHILE           reduce using rule 10 (var_list -> variable .)
    VAR             shift and go to state 10

    variable                       shift and go to state 7
    var_list                       shift and go to state 16

state 8

    (11) func_list -> func . func_list
    (12) func_list -> func .
    (11) func_list -> . func func_list
    (12) func_list -> . func
    (19) func -> . FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> . FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    MAIN            reduce using rule 12 (func_list -> func .)
    FUNC            shift and go to state 11

    func                           shift and go to state 8
    func_list                      shift and go to state 17

state 9

    (6) cuerpo -> MAIN . OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 18


state 10

    (7) variable -> VAR . ID COLON var_typ
    (8) variable -> VAR . ID COLON var_typ dims

    ID              shift and go to state 19


state 11

    (19) func -> FUNC . ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC . ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    ID              shift and go to state 20


state 12

    (5) encabezamiento -> PROGRAM ID .

    MAIN            reduce using rule 5 (encabezamiento -> PROGRAM ID .)
    VAR             reduce using rule 5 (encabezamiento -> PROGRAM ID .)
    FUNC            reduce using rule 5 (encabezamiento -> PROGRAM ID .)


state 13

    (1) program -> encabezamiento var_list func_list . cuerpo
    (6) cuerpo -> . MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE

    MAIN            shift and go to state 9

    cuerpo                         shift and go to state 21

state 14

    (2) program -> encabezamiento var_list cuerpo .

    $end            reduce using rule 2 (program -> encabezamiento var_list cuerpo .)


state 15

    (3) program -> encabezamiento func_list cuerpo .

    $end            reduce using rule 3 (program -> encabezamiento func_list cuerpo .)


state 16

    (9) var_list -> variable var_list .

    MAIN            reduce using rule 9 (var_list -> variable var_list .)
    FUNC            reduce using rule 9 (var_list -> variable var_list .)
    ID              reduce using rule 9 (var_list -> variable var_list .)
    READ            reduce using rule 9 (var_list -> variable var_list .)
    WRITE           reduce using rule 9 (var_list -> variable var_list .)
    WHEN            reduce using rule 9 (var_list -> variable var_list .)
    WHILE           reduce using rule 9 (var_list -> variable var_list .)


state 17

    (11) func_list -> func func_list .

    MAIN            reduce using rule 11 (func_list -> func func_list .)


state 18

    (6) cuerpo -> MAIN OPPARENTH . CLPARENTH OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 22


state 19

    (7) variable -> VAR ID . COLON var_typ
    (8) variable -> VAR ID . COLON var_typ dims

    COLON           shift and go to state 23


state 20

    (19) func -> FUNC ID . OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC ID . OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    OPPARENTH       shift and go to state 24


state 21

    (1) program -> encabezamiento var_list func_list cuerpo .

    $end            reduce using rule 1 (program -> encabezamiento var_list func_list cuerpo .)


state 22

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 25


state 23

    (7) variable -> VAR ID COLON . var_typ
    (8) variable -> VAR ID COLON . var_typ dims
    (41) var_typ -> . INT
    (42) var_typ -> . FLOAT
    (43) var_typ -> . CHAR
    (44) var_typ -> . BOOL
    (45) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 26

state 24

    (19) func -> FUNC ID OPPARENTH . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (20) func -> FUNC ID OPPARENTH . param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE
    (15) param_list -> . param COMMA param_list
    (16) param_list -> . param
    (39) param -> . ID COLON var_typ
    (40) param -> . ID COLON var_typ dims

    CLPARENTH       shift and go to state 33
    ID              shift and go to state 32

    param_list                     shift and go to state 34
    param                          shift and go to state 35

state 25

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat_list                     shift and go to state 36
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 26

    (7) variable -> VAR ID COLON var_typ .
    (8) variable -> VAR ID COLON var_typ . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    MAIN            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    FUNC            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    ID              reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    READ            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WRITE           reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WHEN            reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    WHILE           reduce using rule 7 (variable -> VAR ID COLON var_typ .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 50

state 27

    (41) var_typ -> INT .

    OPBRACKET       reduce using rule 41 (var_typ -> INT .)
    VAR             reduce using rule 41 (var_typ -> INT .)
    MAIN            reduce using rule 41 (var_typ -> INT .)
    FUNC            reduce using rule 41 (var_typ -> INT .)
    ID              reduce using rule 41 (var_typ -> INT .)
    READ            reduce using rule 41 (var_typ -> INT .)
    WRITE           reduce using rule 41 (var_typ -> INT .)
    WHEN            reduce using rule 41 (var_typ -> INT .)
    WHILE           reduce using rule 41 (var_typ -> INT .)
    COMMA           reduce using rule 41 (var_typ -> INT .)
    CLPARENTH       reduce using rule 41 (var_typ -> INT .)


state 28

    (42) var_typ -> FLOAT .

    OPBRACKET       reduce using rule 42 (var_typ -> FLOAT .)
    VAR             reduce using rule 42 (var_typ -> FLOAT .)
    MAIN            reduce using rule 42 (var_typ -> FLOAT .)
    FUNC            reduce using rule 42 (var_typ -> FLOAT .)
    ID              reduce using rule 42 (var_typ -> FLOAT .)
    READ            reduce using rule 42 (var_typ -> FLOAT .)
    WRITE           reduce using rule 42 (var_typ -> FLOAT .)
    WHEN            reduce using rule 42 (var_typ -> FLOAT .)
    WHILE           reduce using rule 42 (var_typ -> FLOAT .)
    COMMA           reduce using rule 42 (var_typ -> FLOAT .)
    CLPARENTH       reduce using rule 42 (var_typ -> FLOAT .)


state 29

    (43) var_typ -> CHAR .

    OPBRACKET       reduce using rule 43 (var_typ -> CHAR .)
    VAR             reduce using rule 43 (var_typ -> CHAR .)
    MAIN            reduce using rule 43 (var_typ -> CHAR .)
    FUNC            reduce using rule 43 (var_typ -> CHAR .)
    ID              reduce using rule 43 (var_typ -> CHAR .)
    READ            reduce using rule 43 (var_typ -> CHAR .)
    WRITE           reduce using rule 43 (var_typ -> CHAR .)
    WHEN            reduce using rule 43 (var_typ -> CHAR .)
    WHILE           reduce using rule 43 (var_typ -> CHAR .)
    COMMA           reduce using rule 43 (var_typ -> CHAR .)
    CLPARENTH       reduce using rule 43 (var_typ -> CHAR .)


state 30

    (44) var_typ -> BOOL .

    OPBRACKET       reduce using rule 44 (var_typ -> BOOL .)
    VAR             reduce using rule 44 (var_typ -> BOOL .)
    MAIN            reduce using rule 44 (var_typ -> BOOL .)
    FUNC            reduce using rule 44 (var_typ -> BOOL .)
    ID              reduce using rule 44 (var_typ -> BOOL .)
    READ            reduce using rule 44 (var_typ -> BOOL .)
    WRITE           reduce using rule 44 (var_typ -> BOOL .)
    WHEN            reduce using rule 44 (var_typ -> BOOL .)
    WHILE           reduce using rule 44 (var_typ -> BOOL .)
    COMMA           reduce using rule 44 (var_typ -> BOOL .)
    CLPARENTH       reduce using rule 44 (var_typ -> BOOL .)


state 31

    (45) var_typ -> FRAME .

    OPBRACKET       reduce using rule 45 (var_typ -> FRAME .)
    VAR             reduce using rule 45 (var_typ -> FRAME .)
    MAIN            reduce using rule 45 (var_typ -> FRAME .)
    FUNC            reduce using rule 45 (var_typ -> FRAME .)
    ID              reduce using rule 45 (var_typ -> FRAME .)
    READ            reduce using rule 45 (var_typ -> FRAME .)
    WRITE           reduce using rule 45 (var_typ -> FRAME .)
    WHEN            reduce using rule 45 (var_typ -> FRAME .)
    WHILE           reduce using rule 45 (var_typ -> FRAME .)
    COMMA           reduce using rule 45 (var_typ -> FRAME .)
    CLPARENTH       reduce using rule 45 (var_typ -> FRAME .)


state 32

    (39) param -> ID . COLON var_typ
    (40) param -> ID . COLON var_typ dims

    COLON           shift and go to state 52


state 33

    (19) func -> FUNC ID OPPARENTH CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 53


state 34

    (20) func -> FUNC ID OPPARENTH param_list . CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE

    CLPARENTH       shift and go to state 54


state 35

    (15) param_list -> param . COMMA param_list
    (16) param_list -> param .

    COMMA           shift and go to state 55
    CLPARENTH       reduce using rule 16 (param_list -> param .)


state 36

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 56


state 37

    (13) estat_list -> estat . estat_list
    (14) estat_list -> estat .
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLBRACE         reduce using rule 14 (estat_list -> estat .)
    RETURN          reduce using rule 14 (estat_list -> estat .)
    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat                          shift and go to state 37
    estat_list                     shift and go to state 57
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 38

    (30) estat -> asign .

    ID              reduce using rule 30 (estat -> asign .)
    READ            reduce using rule 30 (estat -> asign .)
    WRITE           reduce using rule 30 (estat -> asign .)
    WHEN            reduce using rule 30 (estat -> asign .)
    WHILE           reduce using rule 30 (estat -> asign .)
    CLBRACE         reduce using rule 30 (estat -> asign .)
    RETURN          reduce using rule 30 (estat -> asign .)


state 39

    (31) estat -> llam_void .

    ID              reduce using rule 31 (estat -> llam_void .)
    READ            reduce using rule 31 (estat -> llam_void .)
    WRITE           reduce using rule 31 (estat -> llam_void .)
    WHEN            reduce using rule 31 (estat -> llam_void .)
    WHILE           reduce using rule 31 (estat -> llam_void .)
    CLBRACE         reduce using rule 31 (estat -> llam_void .)
    RETURN          reduce using rule 31 (estat -> llam_void .)


state 40

    (32) estat -> lectura .

    ID              reduce using rule 32 (estat -> lectura .)
    READ            reduce using rule 32 (estat -> lectura .)
    WRITE           reduce using rule 32 (estat -> lectura .)
    WHEN            reduce using rule 32 (estat -> lectura .)
    WHILE           reduce using rule 32 (estat -> lectura .)
    CLBRACE         reduce using rule 32 (estat -> lectura .)
    RETURN          reduce using rule 32 (estat -> lectura .)


state 41

    (33) estat -> escritura .

    ID              reduce using rule 33 (estat -> escritura .)
    READ            reduce using rule 33 (estat -> escritura .)
    WRITE           reduce using rule 33 (estat -> escritura .)
    WHEN            reduce using rule 33 (estat -> escritura .)
    WHILE           reduce using rule 33 (estat -> escritura .)
    CLBRACE         reduce using rule 33 (estat -> escritura .)
    RETURN          reduce using rule 33 (estat -> escritura .)


state 42

    (34) estat -> carga_dt .

    ID              reduce using rule 34 (estat -> carga_dt .)
    READ            reduce using rule 34 (estat -> carga_dt .)
    WRITE           reduce using rule 34 (estat -> carga_dt .)
    WHEN            reduce using rule 34 (estat -> carga_dt .)
    WHILE           reduce using rule 34 (estat -> carga_dt .)
    CLBRACE         reduce using rule 34 (estat -> carga_dt .)
    RETURN          reduce using rule 34 (estat -> carga_dt .)


state 43

    (35) estat -> decision .

    ID              reduce using rule 35 (estat -> decision .)
    READ            reduce using rule 35 (estat -> decision .)
    WRITE           reduce using rule 35 (estat -> decision .)
    WHEN            reduce using rule 35 (estat -> decision .)
    WHILE           reduce using rule 35 (estat -> decision .)
    CLBRACE         reduce using rule 35 (estat -> decision .)
    RETURN          reduce using rule 35 (estat -> decision .)


state 44

    (36) estat -> ciclo .

    ID              reduce using rule 36 (estat -> ciclo .)
    READ            reduce using rule 36 (estat -> ciclo .)
    WRITE           reduce using rule 36 (estat -> ciclo .)
    WHEN            reduce using rule 36 (estat -> ciclo .)
    WHILE           reduce using rule 36 (estat -> ciclo .)
    CLBRACE         reduce using rule 36 (estat -> ciclo .)
    RETURN          reduce using rule 36 (estat -> ciclo .)


state 45

    (90) asign -> ID . ASGNMNT lectura
    (91) asign -> ID . ASGNMNT expr
    (92) asign -> ID . ASGNMNT CONST_STRING
    (93) asign -> ID . ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> ID . ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> ID . dims ASGNMNT lectura
    (96) asign -> ID . dims ASGNMNT expr
    (97) asign -> ID . dims ASGNMNT CONST_STRING
    (98) asign -> ID . dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> ID . dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> ID . OPPARENTH CLPARENTH
    (89) llam_void -> ID . OPPARENTH args CLPARENTH
    (37) carga_dt -> ID . ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> ID . ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    ASGNMNT         shift and go to state 58
    OPPARENTH       shift and go to state 59
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 60

state 46

    (84) lectura -> READ . OPPARENTH CLPARENTH

    OPPARENTH       shift and go to state 61


state 47

    (85) escritura -> WRITE . OPPARENTH ID CLPARENTH
    (86) escritura -> WRITE . OPPARENTH ID dims CLPARENTH
    (87) escritura -> WRITE . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 62


state 48

    (22) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 63


state 49

    (21) ciclo -> WHILE . OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    OPPARENTH       shift and go to state 64


state 50

    (8) variable -> VAR ID COLON var_typ dims .

    VAR             reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    MAIN            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    FUNC            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    ID              reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    READ            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WRITE           reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WHEN            reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)
    WHILE           reduce using rule 8 (variable -> VAR ID COLON var_typ dims .)


state 51

    (17) dims -> OPBRACKET . aritm CLBRACKET
    (18) dims -> OPBRACKET . aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 65
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 52

    (39) param -> ID COLON . var_typ
    (40) param -> ID COLON . var_typ dims
    (41) var_typ -> . INT
    (42) var_typ -> . FLOAT
    (43) var_typ -> . CHAR
    (44) var_typ -> . BOOL
    (45) var_typ -> . FRAME

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    CHAR            shift and go to state 29
    BOOL            shift and go to state 30
    FRAME           shift and go to state 31

    var_typ                        shift and go to state 72

state 53

    (19) func -> FUNC ID OPPARENTH CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (46) func_typ -> . INT
    (47) func_typ -> . FLOAT
    (48) func_typ -> . CHAR
    (49) func_typ -> . BOOL
    (50) func_typ -> . FRAME
    (51) func_typ -> . VOID

    INT             shift and go to state 74
    FLOAT           shift and go to state 75
    CHAR            shift and go to state 76
    BOOL            shift and go to state 77
    FRAME           shift and go to state 78
    VOID            shift and go to state 79

    func_typ                       shift and go to state 73

state 54

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH . COLON func_typ OPBRACE func_cont CLBRACE

    COLON           shift and go to state 80


state 55

    (15) param_list -> param COMMA . param_list
    (15) param_list -> . param COMMA param_list
    (16) param_list -> . param
    (39) param -> . ID COLON var_typ
    (40) param -> . ID COLON var_typ dims

    ID              shift and go to state 32

    param                          shift and go to state 35
    param_list                     shift and go to state 81

state 56

    (6) cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .

    $end            reduce using rule 6 (cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE .)


state 57

    (13) estat_list -> estat estat_list .

    CLBRACE         reduce using rule 13 (estat_list -> estat estat_list .)
    RETURN          reduce using rule 13 (estat_list -> estat estat_list .)


state 58

    (90) asign -> ID ASGNMNT . lectura
    (91) asign -> ID ASGNMNT . expr
    (92) asign -> ID ASGNMNT . CONST_STRING
    (93) asign -> ID ASGNMNT . ID OPPARENTH CLPARENTH
    (94) asign -> ID ASGNMNT . ID OPPARENTH args CLPARENTH
    (37) carga_dt -> ID ASGNMNT . LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> ID ASGNMNT . LOAD OPPARENTH CONST_STRING CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 85
    ID              shift and go to state 82
    LOAD            shift and go to state 87
    READ            shift and go to state 46
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    lectura                        shift and go to state 83
    expr                           shift and go to state 84
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 59

    (88) llam_void -> ID OPPARENTH . CLPARENTH
    (89) llam_void -> ID OPPARENTH . args CLPARENTH
    (82) args -> . arg COMMA args
    (83) args -> . arg
    (79) arg -> . ID OPPARENTH CLPARENTH
    (80) arg -> . ID OPPARENTH args CLPARENTH
    (81) arg -> . expr
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 96
    ID              shift and go to state 95
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    args                           shift and go to state 97
    arg                            shift and go to state 98
    expr                           shift and go to state 99
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 60

    (95) asign -> ID dims . ASGNMNT lectura
    (96) asign -> ID dims . ASGNMNT expr
    (97) asign -> ID dims . ASGNMNT CONST_STRING
    (98) asign -> ID dims . ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> ID dims . ASGNMNT ID OPPARENTH args CLPARENTH

    ASGNMNT         shift and go to state 100


state 61

    (84) lectura -> READ OPPARENTH . CLPARENTH

    CLPARENTH       shift and go to state 101


state 62

    (85) escritura -> WRITE OPPARENTH . ID CLPARENTH
    (86) escritura -> WRITE OPPARENTH . ID dims CLPARENTH
    (87) escritura -> WRITE OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 102
    CONST_STRING    shift and go to state 103


state 63

    (22) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    logic                          shift and go to state 104
    oprnd                          shift and go to state 90
    relac                          shift and go to state 94
    aritm                          shift and go to state 105
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 64

    (21) ciclo -> WHILE OPPARENTH . logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    logic                          shift and go to state 106
    oprnd                          shift and go to state 90
    relac                          shift and go to state 94
    aritm                          shift and go to state 105
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 65

    (17) dims -> OPBRACKET aritm . CLBRACKET
    (18) dims -> OPBRACKET aritm . CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACKET       shift and go to state 107


state 66

    (61) factor -> CONST_INT .

    TIMES           reduce using rule 61 (factor -> CONST_INT .)
    DIVIDE          reduce using rule 61 (factor -> CONST_INT .)
    PLUS            reduce using rule 61 (factor -> CONST_INT .)
    MINUS           reduce using rule 61 (factor -> CONST_INT .)
    CLBRACKET       reduce using rule 61 (factor -> CONST_INT .)
    EQUAL           reduce using rule 61 (factor -> CONST_INT .)
    UNEQUAL         reduce using rule 61 (factor -> CONST_INT .)
    LESS            reduce using rule 61 (factor -> CONST_INT .)
    LESSEQ          reduce using rule 61 (factor -> CONST_INT .)
    GREATER         reduce using rule 61 (factor -> CONST_INT .)
    GREATEREQ       reduce using rule 61 (factor -> CONST_INT .)
    ID              reduce using rule 61 (factor -> CONST_INT .)
    READ            reduce using rule 61 (factor -> CONST_INT .)
    WRITE           reduce using rule 61 (factor -> CONST_INT .)
    WHEN            reduce using rule 61 (factor -> CONST_INT .)
    WHILE           reduce using rule 61 (factor -> CONST_INT .)
    CLBRACE         reduce using rule 61 (factor -> CONST_INT .)
    RETURN          reduce using rule 61 (factor -> CONST_INT .)
    COMMA           reduce using rule 61 (factor -> CONST_INT .)
    CLPARENTH       reduce using rule 61 (factor -> CONST_INT .)
    AND             reduce using rule 61 (factor -> CONST_INT .)
    OR              reduce using rule 61 (factor -> CONST_INT .)


state 67

    (52) aritm -> term . PLUS aritm
    (53) aritm -> term . MINUS aritm
    (54) aritm -> term .

    PLUS            shift and go to state 108
    MINUS           shift and go to state 109
    CLBRACKET       reduce using rule 54 (aritm -> term .)
    EQUAL           reduce using rule 54 (aritm -> term .)
    UNEQUAL         reduce using rule 54 (aritm -> term .)
    LESS            reduce using rule 54 (aritm -> term .)
    LESSEQ          reduce using rule 54 (aritm -> term .)
    GREATER         reduce using rule 54 (aritm -> term .)
    GREATEREQ       reduce using rule 54 (aritm -> term .)
    ID              reduce using rule 54 (aritm -> term .)
    READ            reduce using rule 54 (aritm -> term .)
    WRITE           reduce using rule 54 (aritm -> term .)
    WHEN            reduce using rule 54 (aritm -> term .)
    WHILE           reduce using rule 54 (aritm -> term .)
    CLBRACE         reduce using rule 54 (aritm -> term .)
    RETURN          reduce using rule 54 (aritm -> term .)
    COMMA           reduce using rule 54 (aritm -> term .)
    CLPARENTH       reduce using rule 54 (aritm -> term .)
    AND             reduce using rule 54 (aritm -> term .)
    OR              reduce using rule 54 (aritm -> term .)


state 68

    (55) term -> factor . TIMES term
    (56) term -> factor . DIVIDE term
    (57) term -> factor .

    TIMES           shift and go to state 110
    DIVIDE          shift and go to state 111
    PLUS            reduce using rule 57 (term -> factor .)
    MINUS           reduce using rule 57 (term -> factor .)
    CLBRACKET       reduce using rule 57 (term -> factor .)
    EQUAL           reduce using rule 57 (term -> factor .)
    UNEQUAL         reduce using rule 57 (term -> factor .)
    LESS            reduce using rule 57 (term -> factor .)
    LESSEQ          reduce using rule 57 (term -> factor .)
    GREATER         reduce using rule 57 (term -> factor .)
    GREATEREQ       reduce using rule 57 (term -> factor .)
    ID              reduce using rule 57 (term -> factor .)
    READ            reduce using rule 57 (term -> factor .)
    WRITE           reduce using rule 57 (term -> factor .)
    WHEN            reduce using rule 57 (term -> factor .)
    WHILE           reduce using rule 57 (term -> factor .)
    CLBRACE         reduce using rule 57 (term -> factor .)
    RETURN          reduce using rule 57 (term -> factor .)
    COMMA           reduce using rule 57 (term -> factor .)
    CLPARENTH       reduce using rule 57 (term -> factor .)
    AND             reduce using rule 57 (term -> factor .)
    OR              reduce using rule 57 (term -> factor .)


state 69

    (58) factor -> OPPARENTH . aritm CLPARENTH
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 112
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 70

    (59) factor -> ID .
    (60) factor -> ID . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    TIMES           reduce using rule 59 (factor -> ID .)
    DIVIDE          reduce using rule 59 (factor -> ID .)
    PLUS            reduce using rule 59 (factor -> ID .)
    MINUS           reduce using rule 59 (factor -> ID .)
    CLBRACKET       reduce using rule 59 (factor -> ID .)
    EQUAL           reduce using rule 59 (factor -> ID .)
    UNEQUAL         reduce using rule 59 (factor -> ID .)
    LESS            reduce using rule 59 (factor -> ID .)
    LESSEQ          reduce using rule 59 (factor -> ID .)
    GREATER         reduce using rule 59 (factor -> ID .)
    GREATEREQ       reduce using rule 59 (factor -> ID .)
    CLPARENTH       reduce using rule 59 (factor -> ID .)
    ID              reduce using rule 59 (factor -> ID .)
    READ            reduce using rule 59 (factor -> ID .)
    WRITE           reduce using rule 59 (factor -> ID .)
    WHEN            reduce using rule 59 (factor -> ID .)
    WHILE           reduce using rule 59 (factor -> ID .)
    CLBRACE         reduce using rule 59 (factor -> ID .)
    RETURN          reduce using rule 59 (factor -> ID .)
    COMMA           reduce using rule 59 (factor -> ID .)
    AND             reduce using rule 59 (factor -> ID .)
    OR              reduce using rule 59 (factor -> ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 113

state 71

    (62) factor -> CONST_FLOAT .

    TIMES           reduce using rule 62 (factor -> CONST_FLOAT .)
    DIVIDE          reduce using rule 62 (factor -> CONST_FLOAT .)
    PLUS            reduce using rule 62 (factor -> CONST_FLOAT .)
    MINUS           reduce using rule 62 (factor -> CONST_FLOAT .)
    CLBRACKET       reduce using rule 62 (factor -> CONST_FLOAT .)
    EQUAL           reduce using rule 62 (factor -> CONST_FLOAT .)
    UNEQUAL         reduce using rule 62 (factor -> CONST_FLOAT .)
    LESS            reduce using rule 62 (factor -> CONST_FLOAT .)
    LESSEQ          reduce using rule 62 (factor -> CONST_FLOAT .)
    GREATER         reduce using rule 62 (factor -> CONST_FLOAT .)
    GREATEREQ       reduce using rule 62 (factor -> CONST_FLOAT .)
    ID              reduce using rule 62 (factor -> CONST_FLOAT .)
    READ            reduce using rule 62 (factor -> CONST_FLOAT .)
    WRITE           reduce using rule 62 (factor -> CONST_FLOAT .)
    WHEN            reduce using rule 62 (factor -> CONST_FLOAT .)
    WHILE           reduce using rule 62 (factor -> CONST_FLOAT .)
    CLBRACE         reduce using rule 62 (factor -> CONST_FLOAT .)
    RETURN          reduce using rule 62 (factor -> CONST_FLOAT .)
    COMMA           reduce using rule 62 (factor -> CONST_FLOAT .)
    CLPARENTH       reduce using rule 62 (factor -> CONST_FLOAT .)
    AND             reduce using rule 62 (factor -> CONST_FLOAT .)
    OR              reduce using rule 62 (factor -> CONST_FLOAT .)


state 72

    (39) param -> ID COLON var_typ .
    (40) param -> ID COLON var_typ . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    COMMA           reduce using rule 39 (param -> ID COLON var_typ .)
    CLPARENTH       reduce using rule 39 (param -> ID COLON var_typ .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 114

state 73

    (19) func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 115


state 74

    (46) func_typ -> INT .

    OPBRACE         reduce using rule 46 (func_typ -> INT .)


state 75

    (47) func_typ -> FLOAT .

    OPBRACE         reduce using rule 47 (func_typ -> FLOAT .)


state 76

    (48) func_typ -> CHAR .

    OPBRACE         reduce using rule 48 (func_typ -> CHAR .)


state 77

    (49) func_typ -> BOOL .

    OPBRACE         reduce using rule 49 (func_typ -> BOOL .)


state 78

    (50) func_typ -> FRAME .

    OPBRACE         reduce using rule 50 (func_typ -> FRAME .)


state 79

    (51) func_typ -> VOID .

    OPBRACE         reduce using rule 51 (func_typ -> VOID .)


state 80

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH COLON . func_typ OPBRACE func_cont CLBRACE
    (46) func_typ -> . INT
    (47) func_typ -> . FLOAT
    (48) func_typ -> . CHAR
    (49) func_typ -> . BOOL
    (50) func_typ -> . FRAME
    (51) func_typ -> . VOID

    INT             shift and go to state 74
    FLOAT           shift and go to state 75
    CHAR            shift and go to state 76
    BOOL            shift and go to state 77
    FRAME           shift and go to state 78
    VOID            shift and go to state 79

    func_typ                       shift and go to state 116

state 81

    (15) param_list -> param COMMA param_list .

    CLPARENTH       reduce using rule 15 (param_list -> param COMMA param_list .)


state 82

    (93) asign -> ID ASGNMNT ID . OPPARENTH CLPARENTH
    (94) asign -> ID ASGNMNT ID . OPPARENTH args CLPARENTH
    (59) factor -> ID .
    (60) factor -> ID . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    OPPARENTH       shift and go to state 117
    TIMES           reduce using rule 59 (factor -> ID .)
    DIVIDE          reduce using rule 59 (factor -> ID .)
    PLUS            reduce using rule 59 (factor -> ID .)
    MINUS           reduce using rule 59 (factor -> ID .)
    EQUAL           reduce using rule 59 (factor -> ID .)
    UNEQUAL         reduce using rule 59 (factor -> ID .)
    LESS            reduce using rule 59 (factor -> ID .)
    LESSEQ          reduce using rule 59 (factor -> ID .)
    GREATER         reduce using rule 59 (factor -> ID .)
    GREATEREQ       reduce using rule 59 (factor -> ID .)
    ID              reduce using rule 59 (factor -> ID .)
    READ            reduce using rule 59 (factor -> ID .)
    WRITE           reduce using rule 59 (factor -> ID .)
    WHEN            reduce using rule 59 (factor -> ID .)
    WHILE           reduce using rule 59 (factor -> ID .)
    CLBRACE         reduce using rule 59 (factor -> ID .)
    RETURN          reduce using rule 59 (factor -> ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 113

state 83

    (90) asign -> ID ASGNMNT lectura .

    ID              reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    READ            reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WRITE           reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WHEN            reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    WHILE           reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    CLBRACE         reduce using rule 90 (asign -> ID ASGNMNT lectura .)
    RETURN          reduce using rule 90 (asign -> ID ASGNMNT lectura .)


state 84

    (91) asign -> ID ASGNMNT expr .

    ID              reduce using rule 91 (asign -> ID ASGNMNT expr .)
    READ            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WRITE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHEN            reduce using rule 91 (asign -> ID ASGNMNT expr .)
    WHILE           reduce using rule 91 (asign -> ID ASGNMNT expr .)
    CLBRACE         reduce using rule 91 (asign -> ID ASGNMNT expr .)
    RETURN          reduce using rule 91 (asign -> ID ASGNMNT expr .)


state 85

    (92) asign -> ID ASGNMNT CONST_STRING .

    ID              reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    READ            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 92 (asign -> ID ASGNMNT CONST_STRING .)


state 86

    (72) oprnd -> OPPARENTH . logic CLPARENTH
    (58) factor -> OPPARENTH . aritm CLPARENTH
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    logic                          shift and go to state 118
    aritm                          shift and go to state 119
    oprnd                          shift and go to state 90
    term                           shift and go to state 67
    relac                          shift and go to state 94
    factor                         shift and go to state 68

state 87

    (37) carga_dt -> ID ASGNMNT LOAD . OPPARENTH ID CLPARENTH
    (38) carga_dt -> ID ASGNMNT LOAD . OPPARENTH CONST_STRING CLPARENTH

    OPPARENTH       shift and go to state 120


state 88

    (67) expr -> aritm .
    (73) relac -> aritm . EQUAL aritm
    (74) relac -> aritm . UNEQUAL aritm
    (75) relac -> aritm . LESS aritm
    (76) relac -> aritm . LESSEQ aritm
    (77) relac -> aritm . GREATER aritm
    (78) relac -> aritm . GREATEREQ aritm

    ID              reduce using rule 67 (expr -> aritm .)
    READ            reduce using rule 67 (expr -> aritm .)
    WRITE           reduce using rule 67 (expr -> aritm .)
    WHEN            reduce using rule 67 (expr -> aritm .)
    WHILE           reduce using rule 67 (expr -> aritm .)
    CLBRACE         reduce using rule 67 (expr -> aritm .)
    RETURN          reduce using rule 67 (expr -> aritm .)
    COMMA           reduce using rule 67 (expr -> aritm .)
    CLPARENTH       reduce using rule 67 (expr -> aritm .)
    EQUAL           shift and go to state 121
    UNEQUAL         shift and go to state 122
    LESS            shift and go to state 123
    LESSEQ          shift and go to state 124
    GREATER         shift and go to state 125
    GREATEREQ       shift and go to state 126


state 89

    (68) expr -> logic .

    ID              reduce using rule 68 (expr -> logic .)
    READ            reduce using rule 68 (expr -> logic .)
    WRITE           reduce using rule 68 (expr -> logic .)
    WHEN            reduce using rule 68 (expr -> logic .)
    WHILE           reduce using rule 68 (expr -> logic .)
    CLBRACE         reduce using rule 68 (expr -> logic .)
    RETURN          reduce using rule 68 (expr -> logic .)
    COMMA           reduce using rule 68 (expr -> logic .)
    CLPARENTH       reduce using rule 68 (expr -> logic .)


state 90

    (63) logic -> oprnd . AND logic
    (64) logic -> oprnd . OR logic
    (66) logic -> oprnd .

    AND             shift and go to state 127
    OR              shift and go to state 128
    ID              reduce using rule 66 (logic -> oprnd .)
    READ            reduce using rule 66 (logic -> oprnd .)
    WRITE           reduce using rule 66 (logic -> oprnd .)
    WHEN            reduce using rule 66 (logic -> oprnd .)
    WHILE           reduce using rule 66 (logic -> oprnd .)
    CLBRACE         reduce using rule 66 (logic -> oprnd .)
    RETURN          reduce using rule 66 (logic -> oprnd .)
    COMMA           reduce using rule 66 (logic -> oprnd .)
    CLPARENTH       reduce using rule 66 (logic -> oprnd .)


state 91

    (65) logic -> NOT . oprnd
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    oprnd                          shift and go to state 129
    relac                          shift and go to state 94
    aritm                          shift and go to state 105
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 92

    (69) oprnd -> FALSE .

    AND             reduce using rule 69 (oprnd -> FALSE .)
    OR              reduce using rule 69 (oprnd -> FALSE .)
    ID              reduce using rule 69 (oprnd -> FALSE .)
    READ            reduce using rule 69 (oprnd -> FALSE .)
    WRITE           reduce using rule 69 (oprnd -> FALSE .)
    WHEN            reduce using rule 69 (oprnd -> FALSE .)
    WHILE           reduce using rule 69 (oprnd -> FALSE .)
    CLBRACE         reduce using rule 69 (oprnd -> FALSE .)
    RETURN          reduce using rule 69 (oprnd -> FALSE .)
    COMMA           reduce using rule 69 (oprnd -> FALSE .)
    CLPARENTH       reduce using rule 69 (oprnd -> FALSE .)


state 93

    (70) oprnd -> TRUE .

    AND             reduce using rule 70 (oprnd -> TRUE .)
    OR              reduce using rule 70 (oprnd -> TRUE .)
    ID              reduce using rule 70 (oprnd -> TRUE .)
    READ            reduce using rule 70 (oprnd -> TRUE .)
    WRITE           reduce using rule 70 (oprnd -> TRUE .)
    WHEN            reduce using rule 70 (oprnd -> TRUE .)
    WHILE           reduce using rule 70 (oprnd -> TRUE .)
    CLBRACE         reduce using rule 70 (oprnd -> TRUE .)
    RETURN          reduce using rule 70 (oprnd -> TRUE .)
    COMMA           reduce using rule 70 (oprnd -> TRUE .)
    CLPARENTH       reduce using rule 70 (oprnd -> TRUE .)


state 94

    (71) oprnd -> relac .

    AND             reduce using rule 71 (oprnd -> relac .)
    OR              reduce using rule 71 (oprnd -> relac .)
    ID              reduce using rule 71 (oprnd -> relac .)
    READ            reduce using rule 71 (oprnd -> relac .)
    WRITE           reduce using rule 71 (oprnd -> relac .)
    WHEN            reduce using rule 71 (oprnd -> relac .)
    WHILE           reduce using rule 71 (oprnd -> relac .)
    CLBRACE         reduce using rule 71 (oprnd -> relac .)
    RETURN          reduce using rule 71 (oprnd -> relac .)
    COMMA           reduce using rule 71 (oprnd -> relac .)
    CLPARENTH       reduce using rule 71 (oprnd -> relac .)


state 95

    (79) arg -> ID . OPPARENTH CLPARENTH
    (80) arg -> ID . OPPARENTH args CLPARENTH
    (59) factor -> ID .
    (60) factor -> ID . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    OPPARENTH       shift and go to state 130
    TIMES           reduce using rule 59 (factor -> ID .)
    DIVIDE          reduce using rule 59 (factor -> ID .)
    PLUS            reduce using rule 59 (factor -> ID .)
    MINUS           reduce using rule 59 (factor -> ID .)
    EQUAL           reduce using rule 59 (factor -> ID .)
    UNEQUAL         reduce using rule 59 (factor -> ID .)
    LESS            reduce using rule 59 (factor -> ID .)
    LESSEQ          reduce using rule 59 (factor -> ID .)
    GREATER         reduce using rule 59 (factor -> ID .)
    GREATEREQ       reduce using rule 59 (factor -> ID .)
    COMMA           reduce using rule 59 (factor -> ID .)
    CLPARENTH       reduce using rule 59 (factor -> ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 113

state 96

    (88) llam_void -> ID OPPARENTH CLPARENTH .

    ID              reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 88 (llam_void -> ID OPPARENTH CLPARENTH .)


state 97

    (89) llam_void -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 131


state 98

    (82) args -> arg . COMMA args
    (83) args -> arg .

    COMMA           shift and go to state 132
    CLPARENTH       reduce using rule 83 (args -> arg .)


state 99

    (81) arg -> expr .

    COMMA           reduce using rule 81 (arg -> expr .)
    CLPARENTH       reduce using rule 81 (arg -> expr .)


state 100

    (95) asign -> ID dims ASGNMNT . lectura
    (96) asign -> ID dims ASGNMNT . expr
    (97) asign -> ID dims ASGNMNT . CONST_STRING
    (98) asign -> ID dims ASGNMNT . ID OPPARENTH CLPARENTH
    (99) asign -> ID dims ASGNMNT . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CONST_STRING    shift and go to state 136
    ID              shift and go to state 133
    READ            shift and go to state 46
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    lectura                        shift and go to state 134
    expr                           shift and go to state 135
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 101

    (84) lectura -> READ OPPARENTH CLPARENTH .

    ID              reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    READ            reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 84 (lectura -> READ OPPARENTH CLPARENTH .)


state 102

    (85) escritura -> WRITE OPPARENTH ID . CLPARENTH
    (86) escritura -> WRITE OPPARENTH ID . dims CLPARENTH
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLPARENTH       shift and go to state 137
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 138

state 103

    (87) escritura -> WRITE OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 139


state 104

    (22) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 140


state 105

    (73) relac -> aritm . EQUAL aritm
    (74) relac -> aritm . UNEQUAL aritm
    (75) relac -> aritm . LESS aritm
    (76) relac -> aritm . LESSEQ aritm
    (77) relac -> aritm . GREATER aritm
    (78) relac -> aritm . GREATEREQ aritm

    EQUAL           shift and go to state 121
    UNEQUAL         shift and go to state 122
    LESS            shift and go to state 123
    LESSEQ          shift and go to state 124
    GREATER         shift and go to state 125
    GREATEREQ       shift and go to state 126


state 106

    (21) ciclo -> WHILE OPPARENTH logic . CLPARENTH THEN OPBRACE estat_list CLBRACE

    CLPARENTH       shift and go to state 141


state 107

    (17) dims -> OPBRACKET aritm CLBRACKET .
    (18) dims -> OPBRACKET aritm CLBRACKET . OPBRACKET CONST_INT CLBRACKET

    VAR             reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    MAIN            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    FUNC            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    ID              reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    READ            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    WRITE           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    WHEN            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    WHILE           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    ASGNMNT         reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    TIMES           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    DIVIDE          reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    PLUS            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    MINUS           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACKET       reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    EQUAL           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    UNEQUAL         reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    LESS            reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    LESSEQ          reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATER         reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    GREATEREQ       reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    CLPARENTH       reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    CLBRACE         reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    RETURN          reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    COMMA           reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    AND             reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    OR              reduce using rule 17 (dims -> OPBRACKET aritm CLBRACKET .)
    OPBRACKET       shift and go to state 142


state 108

    (52) aritm -> term PLUS . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    term                           shift and go to state 67
    aritm                          shift and go to state 143
    factor                         shift and go to state 68

state 109

    (53) aritm -> term MINUS . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    term                           shift and go to state 67
    aritm                          shift and go to state 144
    factor                         shift and go to state 68

state 110

    (55) term -> factor TIMES . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    factor                         shift and go to state 68
    term                           shift and go to state 145

state 111

    (56) term -> factor DIVIDE . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    factor                         shift and go to state 68
    term                           shift and go to state 146

state 112

    (58) factor -> OPPARENTH aritm . CLPARENTH

    CLPARENTH       shift and go to state 147


state 113

    (60) factor -> ID dims .

    TIMES           reduce using rule 60 (factor -> ID dims .)
    DIVIDE          reduce using rule 60 (factor -> ID dims .)
    PLUS            reduce using rule 60 (factor -> ID dims .)
    MINUS           reduce using rule 60 (factor -> ID dims .)
    CLBRACKET       reduce using rule 60 (factor -> ID dims .)
    EQUAL           reduce using rule 60 (factor -> ID dims .)
    UNEQUAL         reduce using rule 60 (factor -> ID dims .)
    LESS            reduce using rule 60 (factor -> ID dims .)
    LESSEQ          reduce using rule 60 (factor -> ID dims .)
    GREATER         reduce using rule 60 (factor -> ID dims .)
    GREATEREQ       reduce using rule 60 (factor -> ID dims .)
    ID              reduce using rule 60 (factor -> ID dims .)
    READ            reduce using rule 60 (factor -> ID dims .)
    WRITE           reduce using rule 60 (factor -> ID dims .)
    WHEN            reduce using rule 60 (factor -> ID dims .)
    WHILE           reduce using rule 60 (factor -> ID dims .)
    CLBRACE         reduce using rule 60 (factor -> ID dims .)
    RETURN          reduce using rule 60 (factor -> ID dims .)
    COMMA           reduce using rule 60 (factor -> ID dims .)
    CLPARENTH       reduce using rule 60 (factor -> ID dims .)
    AND             reduce using rule 60 (factor -> ID dims .)
    OR              reduce using rule 60 (factor -> ID dims .)


state 114

    (40) param -> ID COLON var_typ dims .

    COMMA           reduce using rule 40 (param -> ID COLON var_typ dims .)
    CLPARENTH       reduce using rule 40 (param -> ID COLON var_typ dims .)


state 115

    (19) func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (24) func_cont -> . var_list estat_list RETURN ID dims
    (25) func_cont -> . var_list estat_list RETURN ID
    (26) func_cont -> . estat_list RETURN ID dims
    (27) func_cont -> . estat_list RETURN ID
    (28) func_cont -> . var_list estat_list
    (29) func_cont -> . estat_list
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    func_cont                      shift and go to state 148
    var_list                       shift and go to state 149
    estat_list                     shift and go to state 150
    variable                       shift and go to state 7
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 116

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ . OPBRACE func_cont CLBRACE

    OPBRACE         shift and go to state 151


state 117

    (93) asign -> ID ASGNMNT ID OPPARENTH . CLPARENTH
    (94) asign -> ID ASGNMNT ID OPPARENTH . args CLPARENTH
    (82) args -> . arg COMMA args
    (83) args -> . arg
    (79) arg -> . ID OPPARENTH CLPARENTH
    (80) arg -> . ID OPPARENTH args CLPARENTH
    (81) arg -> . expr
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 152
    ID              shift and go to state 95
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    args                           shift and go to state 153
    arg                            shift and go to state 98
    expr                           shift and go to state 99
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 118

    (72) oprnd -> OPPARENTH logic . CLPARENTH

    CLPARENTH       shift and go to state 154


state 119

    (58) factor -> OPPARENTH aritm . CLPARENTH
    (73) relac -> aritm . EQUAL aritm
    (74) relac -> aritm . UNEQUAL aritm
    (75) relac -> aritm . LESS aritm
    (76) relac -> aritm . LESSEQ aritm
    (77) relac -> aritm . GREATER aritm
    (78) relac -> aritm . GREATEREQ aritm

    CLPARENTH       shift and go to state 147
    EQUAL           shift and go to state 121
    UNEQUAL         shift and go to state 122
    LESS            shift and go to state 123
    LESSEQ          shift and go to state 124
    GREATER         shift and go to state 125
    GREATEREQ       shift and go to state 126


state 120

    (37) carga_dt -> ID ASGNMNT LOAD OPPARENTH . ID CLPARENTH
    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH . CONST_STRING CLPARENTH

    ID              shift and go to state 155
    CONST_STRING    shift and go to state 156


state 121

    (73) relac -> aritm EQUAL . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 157
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 122

    (74) relac -> aritm UNEQUAL . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 158
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 123

    (75) relac -> aritm LESS . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 159
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 124

    (76) relac -> aritm LESSEQ . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 160
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 125

    (77) relac -> aritm GREATER . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 161
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 126

    (78) relac -> aritm GREATEREQ . aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    OPPARENTH       shift and go to state 69
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    aritm                          shift and go to state 162
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 127

    (63) logic -> oprnd AND . logic
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    oprnd                          shift and go to state 90
    logic                          shift and go to state 163
    relac                          shift and go to state 94
    aritm                          shift and go to state 105
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 128

    (64) logic -> oprnd OR . logic
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT

    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    ID              shift and go to state 70
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    oprnd                          shift and go to state 90
    logic                          shift and go to state 164
    relac                          shift and go to state 94
    aritm                          shift and go to state 105
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 129

    (65) logic -> NOT oprnd .

    ID              reduce using rule 65 (logic -> NOT oprnd .)
    READ            reduce using rule 65 (logic -> NOT oprnd .)
    WRITE           reduce using rule 65 (logic -> NOT oprnd .)
    WHEN            reduce using rule 65 (logic -> NOT oprnd .)
    WHILE           reduce using rule 65 (logic -> NOT oprnd .)
    CLBRACE         reduce using rule 65 (logic -> NOT oprnd .)
    RETURN          reduce using rule 65 (logic -> NOT oprnd .)
    COMMA           reduce using rule 65 (logic -> NOT oprnd .)
    CLPARENTH       reduce using rule 65 (logic -> NOT oprnd .)


state 130

    (79) arg -> ID OPPARENTH . CLPARENTH
    (80) arg -> ID OPPARENTH . args CLPARENTH
    (82) args -> . arg COMMA args
    (83) args -> . arg
    (79) arg -> . ID OPPARENTH CLPARENTH
    (80) arg -> . ID OPPARENTH args CLPARENTH
    (81) arg -> . expr
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 165
    ID              shift and go to state 95
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    args                           shift and go to state 166
    arg                            shift and go to state 98
    expr                           shift and go to state 99
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 131

    (89) llam_void -> ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 89 (llam_void -> ID OPPARENTH args CLPARENTH .)


state 132

    (82) args -> arg COMMA . args
    (82) args -> . arg COMMA args
    (83) args -> . arg
    (79) arg -> . ID OPPARENTH CLPARENTH
    (80) arg -> . ID OPPARENTH args CLPARENTH
    (81) arg -> . expr
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    ID              shift and go to state 95
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    arg                            shift and go to state 98
    args                           shift and go to state 167
    expr                           shift and go to state 99
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 133

    (98) asign -> ID dims ASGNMNT ID . OPPARENTH CLPARENTH
    (99) asign -> ID dims ASGNMNT ID . OPPARENTH args CLPARENTH
    (59) factor -> ID .
    (60) factor -> ID . dims
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    OPPARENTH       shift and go to state 168
    TIMES           reduce using rule 59 (factor -> ID .)
    DIVIDE          reduce using rule 59 (factor -> ID .)
    PLUS            reduce using rule 59 (factor -> ID .)
    MINUS           reduce using rule 59 (factor -> ID .)
    EQUAL           reduce using rule 59 (factor -> ID .)
    UNEQUAL         reduce using rule 59 (factor -> ID .)
    LESS            reduce using rule 59 (factor -> ID .)
    LESSEQ          reduce using rule 59 (factor -> ID .)
    GREATER         reduce using rule 59 (factor -> ID .)
    GREATEREQ       reduce using rule 59 (factor -> ID .)
    ID              reduce using rule 59 (factor -> ID .)
    READ            reduce using rule 59 (factor -> ID .)
    WRITE           reduce using rule 59 (factor -> ID .)
    WHEN            reduce using rule 59 (factor -> ID .)
    WHILE           reduce using rule 59 (factor -> ID .)
    CLBRACE         reduce using rule 59 (factor -> ID .)
    RETURN          reduce using rule 59 (factor -> ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 113

state 134

    (95) asign -> ID dims ASGNMNT lectura .

    ID              reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    READ            reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    WRITE           reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    WHEN            reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    WHILE           reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    CLBRACE         reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)
    RETURN          reduce using rule 95 (asign -> ID dims ASGNMNT lectura .)


state 135

    (96) asign -> ID dims ASGNMNT expr .

    ID              reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    READ            reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WRITE           reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WHEN            reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    WHILE           reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    CLBRACE         reduce using rule 96 (asign -> ID dims ASGNMNT expr .)
    RETURN          reduce using rule 96 (asign -> ID dims ASGNMNT expr .)


state 136

    (97) asign -> ID dims ASGNMNT CONST_STRING .

    ID              reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    READ            reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WRITE           reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHEN            reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    WHILE           reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    CLBRACE         reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)
    RETURN          reduce using rule 97 (asign -> ID dims ASGNMNT CONST_STRING .)


state 137

    (85) escritura -> WRITE OPPARENTH ID CLPARENTH .

    ID              reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 85 (escritura -> WRITE OPPARENTH ID CLPARENTH .)


state 138

    (86) escritura -> WRITE OPPARENTH ID dims . CLPARENTH

    CLPARENTH       shift and go to state 169


state 139

    (87) escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 87 (escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH .)


state 140

    (22) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    THEN            shift and go to state 170


state 141

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH . THEN OPBRACE estat_list CLBRACE

    THEN            shift and go to state 171


state 142

    (18) dims -> OPBRACKET aritm CLBRACKET OPBRACKET . CONST_INT CLBRACKET

    CONST_INT       shift and go to state 172


state 143

    (52) aritm -> term PLUS aritm .

    CLBRACKET       reduce using rule 52 (aritm -> term PLUS aritm .)
    EQUAL           reduce using rule 52 (aritm -> term PLUS aritm .)
    UNEQUAL         reduce using rule 52 (aritm -> term PLUS aritm .)
    LESS            reduce using rule 52 (aritm -> term PLUS aritm .)
    LESSEQ          reduce using rule 52 (aritm -> term PLUS aritm .)
    GREATER         reduce using rule 52 (aritm -> term PLUS aritm .)
    GREATEREQ       reduce using rule 52 (aritm -> term PLUS aritm .)
    ID              reduce using rule 52 (aritm -> term PLUS aritm .)
    READ            reduce using rule 52 (aritm -> term PLUS aritm .)
    WRITE           reduce using rule 52 (aritm -> term PLUS aritm .)
    WHEN            reduce using rule 52 (aritm -> term PLUS aritm .)
    WHILE           reduce using rule 52 (aritm -> term PLUS aritm .)
    CLBRACE         reduce using rule 52 (aritm -> term PLUS aritm .)
    RETURN          reduce using rule 52 (aritm -> term PLUS aritm .)
    COMMA           reduce using rule 52 (aritm -> term PLUS aritm .)
    CLPARENTH       reduce using rule 52 (aritm -> term PLUS aritm .)
    AND             reduce using rule 52 (aritm -> term PLUS aritm .)
    OR              reduce using rule 52 (aritm -> term PLUS aritm .)


state 144

    (53) aritm -> term MINUS aritm .

    CLBRACKET       reduce using rule 53 (aritm -> term MINUS aritm .)
    EQUAL           reduce using rule 53 (aritm -> term MINUS aritm .)
    UNEQUAL         reduce using rule 53 (aritm -> term MINUS aritm .)
    LESS            reduce using rule 53 (aritm -> term MINUS aritm .)
    LESSEQ          reduce using rule 53 (aritm -> term MINUS aritm .)
    GREATER         reduce using rule 53 (aritm -> term MINUS aritm .)
    GREATEREQ       reduce using rule 53 (aritm -> term MINUS aritm .)
    ID              reduce using rule 53 (aritm -> term MINUS aritm .)
    READ            reduce using rule 53 (aritm -> term MINUS aritm .)
    WRITE           reduce using rule 53 (aritm -> term MINUS aritm .)
    WHEN            reduce using rule 53 (aritm -> term MINUS aritm .)
    WHILE           reduce using rule 53 (aritm -> term MINUS aritm .)
    CLBRACE         reduce using rule 53 (aritm -> term MINUS aritm .)
    RETURN          reduce using rule 53 (aritm -> term MINUS aritm .)
    COMMA           reduce using rule 53 (aritm -> term MINUS aritm .)
    CLPARENTH       reduce using rule 53 (aritm -> term MINUS aritm .)
    AND             reduce using rule 53 (aritm -> term MINUS aritm .)
    OR              reduce using rule 53 (aritm -> term MINUS aritm .)


state 145

    (55) term -> factor TIMES term .

    PLUS            reduce using rule 55 (term -> factor TIMES term .)
    MINUS           reduce using rule 55 (term -> factor TIMES term .)
    CLBRACKET       reduce using rule 55 (term -> factor TIMES term .)
    EQUAL           reduce using rule 55 (term -> factor TIMES term .)
    UNEQUAL         reduce using rule 55 (term -> factor TIMES term .)
    LESS            reduce using rule 55 (term -> factor TIMES term .)
    LESSEQ          reduce using rule 55 (term -> factor TIMES term .)
    GREATER         reduce using rule 55 (term -> factor TIMES term .)
    GREATEREQ       reduce using rule 55 (term -> factor TIMES term .)
    ID              reduce using rule 55 (term -> factor TIMES term .)
    READ            reduce using rule 55 (term -> factor TIMES term .)
    WRITE           reduce using rule 55 (term -> factor TIMES term .)
    WHEN            reduce using rule 55 (term -> factor TIMES term .)
    WHILE           reduce using rule 55 (term -> factor TIMES term .)
    CLBRACE         reduce using rule 55 (term -> factor TIMES term .)
    RETURN          reduce using rule 55 (term -> factor TIMES term .)
    COMMA           reduce using rule 55 (term -> factor TIMES term .)
    CLPARENTH       reduce using rule 55 (term -> factor TIMES term .)
    AND             reduce using rule 55 (term -> factor TIMES term .)
    OR              reduce using rule 55 (term -> factor TIMES term .)


state 146

    (56) term -> factor DIVIDE term .

    PLUS            reduce using rule 56 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 56 (term -> factor DIVIDE term .)
    CLBRACKET       reduce using rule 56 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 56 (term -> factor DIVIDE term .)
    UNEQUAL         reduce using rule 56 (term -> factor DIVIDE term .)
    LESS            reduce using rule 56 (term -> factor DIVIDE term .)
    LESSEQ          reduce using rule 56 (term -> factor DIVIDE term .)
    GREATER         reduce using rule 56 (term -> factor DIVIDE term .)
    GREATEREQ       reduce using rule 56 (term -> factor DIVIDE term .)
    ID              reduce using rule 56 (term -> factor DIVIDE term .)
    READ            reduce using rule 56 (term -> factor DIVIDE term .)
    WRITE           reduce using rule 56 (term -> factor DIVIDE term .)
    WHEN            reduce using rule 56 (term -> factor DIVIDE term .)
    WHILE           reduce using rule 56 (term -> factor DIVIDE term .)
    CLBRACE         reduce using rule 56 (term -> factor DIVIDE term .)
    RETURN          reduce using rule 56 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 56 (term -> factor DIVIDE term .)
    CLPARENTH       reduce using rule 56 (term -> factor DIVIDE term .)
    AND             reduce using rule 56 (term -> factor DIVIDE term .)
    OR              reduce using rule 56 (term -> factor DIVIDE term .)


state 147

    (58) factor -> OPPARENTH aritm CLPARENTH .

    TIMES           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    DIVIDE          reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    PLUS            reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    MINUS           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACKET       reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    EQUAL           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    UNEQUAL         reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    LESS            reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    LESSEQ          reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATER         reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    GREATEREQ       reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    ID              reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    READ            reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    WRITE           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    WHEN            reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    WHILE           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    CLBRACE         reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    RETURN          reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    COMMA           reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    CLPARENTH       reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    AND             reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)
    OR              reduce using rule 58 (factor -> OPPARENTH aritm CLPARENTH .)


state 148

    (19) func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 173


state 149

    (24) func_cont -> var_list . estat_list RETURN ID dims
    (25) func_cont -> var_list . estat_list RETURN ID
    (28) func_cont -> var_list . estat_list
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat_list                     shift and go to state 174
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 150

    (26) func_cont -> estat_list . RETURN ID dims
    (27) func_cont -> estat_list . RETURN ID
    (29) func_cont -> estat_list .

    RETURN          shift and go to state 175
    CLBRACE         reduce using rule 29 (func_cont -> estat_list .)


state 151

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE . func_cont CLBRACE
    (24) func_cont -> . var_list estat_list RETURN ID dims
    (25) func_cont -> . var_list estat_list RETURN ID
    (26) func_cont -> . estat_list RETURN ID dims
    (27) func_cont -> . estat_list RETURN ID
    (28) func_cont -> . var_list estat_list
    (29) func_cont -> . estat_list
    (9) var_list -> . variable var_list
    (10) var_list -> . variable
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (7) variable -> . VAR ID COLON var_typ
    (8) variable -> . VAR ID COLON var_typ dims
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    VAR             shift and go to state 10
    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    func_cont                      shift and go to state 176
    var_list                       shift and go to state 149
    estat_list                     shift and go to state 150
    variable                       shift and go to state 7
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 152

    (93) asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .

    ID              reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 93 (asign -> ID ASGNMNT ID OPPARENTH CLPARENTH .)


state 153

    (94) asign -> ID ASGNMNT ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 177


state 154

    (72) oprnd -> OPPARENTH logic CLPARENTH .

    AND             reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    OR              reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    ID              reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    READ            reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    WRITE           reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHEN            reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    WHILE           reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLBRACE         reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    RETURN          reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    COMMA           reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)
    CLPARENTH       reduce using rule 72 (oprnd -> OPPARENTH logic CLPARENTH .)


state 155

    (37) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID . CLPARENTH

    CLPARENTH       shift and go to state 178


state 156

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING . CLPARENTH

    CLPARENTH       shift and go to state 179


state 157

    (73) relac -> aritm EQUAL aritm .

    AND             reduce using rule 73 (relac -> aritm EQUAL aritm .)
    OR              reduce using rule 73 (relac -> aritm EQUAL aritm .)
    ID              reduce using rule 73 (relac -> aritm EQUAL aritm .)
    READ            reduce using rule 73 (relac -> aritm EQUAL aritm .)
    WRITE           reduce using rule 73 (relac -> aritm EQUAL aritm .)
    WHEN            reduce using rule 73 (relac -> aritm EQUAL aritm .)
    WHILE           reduce using rule 73 (relac -> aritm EQUAL aritm .)
    CLBRACE         reduce using rule 73 (relac -> aritm EQUAL aritm .)
    RETURN          reduce using rule 73 (relac -> aritm EQUAL aritm .)
    COMMA           reduce using rule 73 (relac -> aritm EQUAL aritm .)
    CLPARENTH       reduce using rule 73 (relac -> aritm EQUAL aritm .)


state 158

    (74) relac -> aritm UNEQUAL aritm .

    AND             reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    OR              reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    ID              reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    READ            reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    WRITE           reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    WHEN            reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    WHILE           reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    CLBRACE         reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    RETURN          reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    COMMA           reduce using rule 74 (relac -> aritm UNEQUAL aritm .)
    CLPARENTH       reduce using rule 74 (relac -> aritm UNEQUAL aritm .)


state 159

    (75) relac -> aritm LESS aritm .

    AND             reduce using rule 75 (relac -> aritm LESS aritm .)
    OR              reduce using rule 75 (relac -> aritm LESS aritm .)
    ID              reduce using rule 75 (relac -> aritm LESS aritm .)
    READ            reduce using rule 75 (relac -> aritm LESS aritm .)
    WRITE           reduce using rule 75 (relac -> aritm LESS aritm .)
    WHEN            reduce using rule 75 (relac -> aritm LESS aritm .)
    WHILE           reduce using rule 75 (relac -> aritm LESS aritm .)
    CLBRACE         reduce using rule 75 (relac -> aritm LESS aritm .)
    RETURN          reduce using rule 75 (relac -> aritm LESS aritm .)
    COMMA           reduce using rule 75 (relac -> aritm LESS aritm .)
    CLPARENTH       reduce using rule 75 (relac -> aritm LESS aritm .)


state 160

    (76) relac -> aritm LESSEQ aritm .

    AND             reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    OR              reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    ID              reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    READ            reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    WRITE           reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    WHEN            reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    WHILE           reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    CLBRACE         reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    RETURN          reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    COMMA           reduce using rule 76 (relac -> aritm LESSEQ aritm .)
    CLPARENTH       reduce using rule 76 (relac -> aritm LESSEQ aritm .)


state 161

    (77) relac -> aritm GREATER aritm .

    AND             reduce using rule 77 (relac -> aritm GREATER aritm .)
    OR              reduce using rule 77 (relac -> aritm GREATER aritm .)
    ID              reduce using rule 77 (relac -> aritm GREATER aritm .)
    READ            reduce using rule 77 (relac -> aritm GREATER aritm .)
    WRITE           reduce using rule 77 (relac -> aritm GREATER aritm .)
    WHEN            reduce using rule 77 (relac -> aritm GREATER aritm .)
    WHILE           reduce using rule 77 (relac -> aritm GREATER aritm .)
    CLBRACE         reduce using rule 77 (relac -> aritm GREATER aritm .)
    RETURN          reduce using rule 77 (relac -> aritm GREATER aritm .)
    COMMA           reduce using rule 77 (relac -> aritm GREATER aritm .)
    CLPARENTH       reduce using rule 77 (relac -> aritm GREATER aritm .)


state 162

    (78) relac -> aritm GREATEREQ aritm .

    AND             reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    OR              reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    ID              reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    READ            reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    WRITE           reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    WHEN            reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    WHILE           reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    CLBRACE         reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    RETURN          reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    COMMA           reduce using rule 78 (relac -> aritm GREATEREQ aritm .)
    CLPARENTH       reduce using rule 78 (relac -> aritm GREATEREQ aritm .)


state 163

    (63) logic -> oprnd AND logic .

    ID              reduce using rule 63 (logic -> oprnd AND logic .)
    READ            reduce using rule 63 (logic -> oprnd AND logic .)
    WRITE           reduce using rule 63 (logic -> oprnd AND logic .)
    WHEN            reduce using rule 63 (logic -> oprnd AND logic .)
    WHILE           reduce using rule 63 (logic -> oprnd AND logic .)
    CLBRACE         reduce using rule 63 (logic -> oprnd AND logic .)
    RETURN          reduce using rule 63 (logic -> oprnd AND logic .)
    COMMA           reduce using rule 63 (logic -> oprnd AND logic .)
    CLPARENTH       reduce using rule 63 (logic -> oprnd AND logic .)


state 164

    (64) logic -> oprnd OR logic .

    ID              reduce using rule 64 (logic -> oprnd OR logic .)
    READ            reduce using rule 64 (logic -> oprnd OR logic .)
    WRITE           reduce using rule 64 (logic -> oprnd OR logic .)
    WHEN            reduce using rule 64 (logic -> oprnd OR logic .)
    WHILE           reduce using rule 64 (logic -> oprnd OR logic .)
    CLBRACE         reduce using rule 64 (logic -> oprnd OR logic .)
    RETURN          reduce using rule 64 (logic -> oprnd OR logic .)
    COMMA           reduce using rule 64 (logic -> oprnd OR logic .)
    CLPARENTH       reduce using rule 64 (logic -> oprnd OR logic .)


state 165

    (79) arg -> ID OPPARENTH CLPARENTH .

    COMMA           reduce using rule 79 (arg -> ID OPPARENTH CLPARENTH .)
    CLPARENTH       reduce using rule 79 (arg -> ID OPPARENTH CLPARENTH .)


state 166

    (80) arg -> ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 180


state 167

    (82) args -> arg COMMA args .

    CLPARENTH       reduce using rule 82 (args -> arg COMMA args .)


state 168

    (98) asign -> ID dims ASGNMNT ID OPPARENTH . CLPARENTH
    (99) asign -> ID dims ASGNMNT ID OPPARENTH . args CLPARENTH
    (82) args -> . arg COMMA args
    (83) args -> . arg
    (79) arg -> . ID OPPARENTH CLPARENTH
    (80) arg -> . ID OPPARENTH args CLPARENTH
    (81) arg -> . expr
    (67) expr -> . aritm
    (68) expr -> . logic
    (52) aritm -> . term PLUS aritm
    (53) aritm -> . term MINUS aritm
    (54) aritm -> . term
    (63) logic -> . oprnd AND logic
    (64) logic -> . oprnd OR logic
    (65) logic -> . NOT oprnd
    (66) logic -> . oprnd
    (55) term -> . factor TIMES term
    (56) term -> . factor DIVIDE term
    (57) term -> . factor
    (69) oprnd -> . FALSE
    (70) oprnd -> . TRUE
    (71) oprnd -> . relac
    (72) oprnd -> . OPPARENTH logic CLPARENTH
    (58) factor -> . OPPARENTH aritm CLPARENTH
    (59) factor -> . ID
    (60) factor -> . ID dims
    (61) factor -> . CONST_INT
    (62) factor -> . CONST_FLOAT
    (73) relac -> . aritm EQUAL aritm
    (74) relac -> . aritm UNEQUAL aritm
    (75) relac -> . aritm LESS aritm
    (76) relac -> . aritm LESSEQ aritm
    (77) relac -> . aritm GREATER aritm
    (78) relac -> . aritm GREATEREQ aritm

    CLPARENTH       shift and go to state 181
    ID              shift and go to state 95
    NOT             shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    OPPARENTH       shift and go to state 86
    CONST_INT       shift and go to state 66
    CONST_FLOAT     shift and go to state 71

    args                           shift and go to state 182
    arg                            shift and go to state 98
    expr                           shift and go to state 99
    aritm                          shift and go to state 88
    logic                          shift and go to state 89
    term                           shift and go to state 67
    oprnd                          shift and go to state 90
    factor                         shift and go to state 68
    relac                          shift and go to state 94

state 169

    (86) escritura -> WRITE OPPARENTH ID dims CLPARENTH .

    ID              reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    READ            reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WRITE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHEN            reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    WHILE           reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    CLBRACE         reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)
    RETURN          reduce using rule 86 (escritura -> WRITE OPPARENTH ID dims CLPARENTH .)


state 170

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 183


state 171

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 184


state 172

    (18) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT . CLBRACKET

    CLBRACKET       shift and go to state 185


state 173

    (19) func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 19 (func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 19 (func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 174

    (24) func_cont -> var_list estat_list . RETURN ID dims
    (25) func_cont -> var_list estat_list . RETURN ID
    (28) func_cont -> var_list estat_list .

    RETURN          shift and go to state 186
    CLBRACE         reduce using rule 28 (func_cont -> var_list estat_list .)


state 175

    (26) func_cont -> estat_list RETURN . ID dims
    (27) func_cont -> estat_list RETURN . ID

    ID              shift and go to state 187


state 176

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont . CLBRACE

    CLBRACE         shift and go to state 188


state 177

    (94) asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 94 (asign -> ID ASGNMNT ID OPPARENTH args CLPARENTH .)


state 178

    (37) carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .

    ID              reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    READ            reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WRITE           reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHEN            reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    WHILE           reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    CLBRACE         reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)
    RETURN          reduce using rule 37 (carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH .)


state 179

    (38) carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .

    ID              reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    READ            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WRITE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHEN            reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    WHILE           reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    CLBRACE         reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)
    RETURN          reduce using rule 38 (carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH .)


state 180

    (80) arg -> ID OPPARENTH args CLPARENTH .

    COMMA           reduce using rule 80 (arg -> ID OPPARENTH args CLPARENTH .)
    CLPARENTH       reduce using rule 80 (arg -> ID OPPARENTH args CLPARENTH .)


state 181

    (98) asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .

    ID              reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    READ            reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WRITE           reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WHEN            reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    WHILE           reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    CLBRACE         reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)
    RETURN          reduce using rule 98 (asign -> ID dims ASGNMNT ID OPPARENTH CLPARENTH .)


state 182

    (99) asign -> ID dims ASGNMNT ID OPPARENTH args . CLPARENTH

    CLPARENTH       shift and go to state 189


state 183

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat_list                     shift and go to state 190
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 184

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat_list                     shift and go to state 191
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 185

    (18) dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .

    VAR             reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MAIN            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    FUNC            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ID              reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    READ            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WRITE           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHEN            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    WHILE           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    ASGNMNT         reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    TIMES           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    DIVIDE          reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    PLUS            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    MINUS           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACKET       reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    EQUAL           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    UNEQUAL         reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESS            reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    LESSEQ          reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATER         reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    GREATEREQ       reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLPARENTH       reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    CLBRACE         reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    RETURN          reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    COMMA           reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    AND             reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)
    OR              reduce using rule 18 (dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET .)


state 186

    (24) func_cont -> var_list estat_list RETURN . ID dims
    (25) func_cont -> var_list estat_list RETURN . ID

    ID              shift and go to state 192


state 187

    (26) func_cont -> estat_list RETURN ID . dims
    (27) func_cont -> estat_list RETURN ID .
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 27 (func_cont -> estat_list RETURN ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 193

state 188

    (20) func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .

    FUNC            reduce using rule 20 (func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)
    MAIN            reduce using rule 20 (func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE .)


state 189

    (99) asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .

    ID              reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    READ            reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WRITE           reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHEN            reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    WHILE           reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    CLBRACE         reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)
    RETURN          reduce using rule 99 (asign -> ID dims ASGNMNT ID OPPARENTH args CLPARENTH .)


state 190

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE ELSE OPBRACE estat_list CLBRACE

    CLBRACE         shift and go to state 194


state 191

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 195


state 192

    (24) func_cont -> var_list estat_list RETURN ID . dims
    (25) func_cont -> var_list estat_list RETURN ID .
    (17) dims -> . OPBRACKET aritm CLBRACKET
    (18) dims -> . OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET

    CLBRACE         reduce using rule 25 (func_cont -> var_list estat_list RETURN ID .)
    OPBRACKET       shift and go to state 51

    dims                           shift and go to state 196

state 193

    (26) func_cont -> estat_list RETURN ID dims .

    CLBRACE         reduce using rule 26 (func_cont -> estat_list RETURN ID dims .)


state 194

    (22) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .
    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE . ELSE OPBRACE estat_list CLBRACE

    ID              reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 22 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    ELSE            shift and go to state 197


state 195

    (21) ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .

    ID              reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 21 (ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE .)


state 196

    (24) func_cont -> var_list estat_list RETURN ID dims .

    CLBRACE         reduce using rule 24 (func_cont -> var_list estat_list RETURN ID dims .)


state 197

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE . OPBRACE estat_list CLBRACE

    OPBRACE         shift and go to state 198


state 198

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE . estat_list CLBRACE
    (13) estat_list -> . estat estat_list
    (14) estat_list -> . estat
    (30) estat -> . asign
    (31) estat -> . llam_void
    (32) estat -> . lectura
    (33) estat -> . escritura
    (34) estat -> . carga_dt
    (35) estat -> . decision
    (36) estat -> . ciclo
    (90) asign -> . ID ASGNMNT lectura
    (91) asign -> . ID ASGNMNT expr
    (92) asign -> . ID ASGNMNT CONST_STRING
    (93) asign -> . ID ASGNMNT ID OPPARENTH CLPARENTH
    (94) asign -> . ID ASGNMNT ID OPPARENTH args CLPARENTH
    (95) asign -> . ID dims ASGNMNT lectura
    (96) asign -> . ID dims ASGNMNT expr
    (97) asign -> . ID dims ASGNMNT CONST_STRING
    (98) asign -> . ID dims ASGNMNT ID OPPARENTH CLPARENTH
    (99) asign -> . ID dims ASGNMNT ID OPPARENTH args CLPARENTH
    (88) llam_void -> . ID OPPARENTH CLPARENTH
    (89) llam_void -> . ID OPPARENTH args CLPARENTH
    (84) lectura -> . READ OPPARENTH CLPARENTH
    (85) escritura -> . WRITE OPPARENTH ID CLPARENTH
    (86) escritura -> . WRITE OPPARENTH ID dims CLPARENTH
    (87) escritura -> . WRITE OPPARENTH CONST_STRING CLPARENTH
    (37) carga_dt -> . ID ASGNMNT LOAD OPPARENTH ID CLPARENTH
    (38) carga_dt -> . ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH
    (22) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE
    (23) decision -> . WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE
    (21) ciclo -> . WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE

    ID              shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 47
    WHEN            shift and go to state 48
    WHILE           shift and go to state 49

    estat_list                     shift and go to state 199
    estat                          shift and go to state 37
    asign                          shift and go to state 38
    llam_void                      shift and go to state 39
    lectura                        shift and go to state 40
    escritura                      shift and go to state 41
    carga_dt                       shift and go to state 42
    decision                       shift and go to state 43
    ciclo                          shift and go to state 44

state 199

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list . CLBRACE

    CLBRACE         shift and go to state 200


state 200

    (23) decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .

    ID              reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    READ            reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WRITE           reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHEN            reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    WHILE           reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    CLBRACE         reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)
    RETURN          reduce using rule 23 (decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE .)

