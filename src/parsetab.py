
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGNMNT BOOL CHAR CLBRACE CLBRACKET CLPARENTH COLON COMMA CONST_FLOAT CONST_INT CONST_STRING DIVIDE ELSE EQUAL FALSE FLOAT FRAME FUNC GREATER GREATEREQ ID INT LESS LESSEQ LOAD MAIN MINUS NOT OPBRACE OPBRACKET OPPARENTH OR PLUS PROGRAM READ RETURN THEN TIMES TRUE UNEQUAL VAR VOID WHEN WHILE WRITEprogram : encabezamiento var_list func_list cuerpo\n               | encabezamiento var_list cuerpo\n               | encabezamiento func_list cuerpo\n               | encabezamiento cuerpo\n    encabezamiento : PROGRAM ID\n    cuerpo : MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE\n    variable : VAR ID COLON var_typ\n                | VAR ID COLON var_typ dims\n    var_list : variable var_list\n                | variable\n    func_list : func func_list\n                 | func\n    estat_list : estat estat_list\n                  | estat\n    param_list : param COMMA param_list \n                  | param\n    dims : OPBRACKET aritm CLBRACKET\n            | OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET\n    func : FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE\n            | FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE\n    ciclo : WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE\n    decision : WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE\n               | WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE\n    func_cont : var_list estat_list RETURN expr\n                 | estat_list RETURN expr\n                 | var_list estat_list\n                 | estat_list\n    estat : asign\n             | llam_void\n             | lectura\n             | escritura\n             | carga_dt\n             | decision\n             | ciclo\n    carga_dt : ID ASGNMNT LOAD OPPARENTH ID CLPARENTH\n                | ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH \n    param : ID COLON var_typ\n             | ID COLON var_typ dims\n    var_typ : INT\n               | FLOAT\n               | CHAR\n               | BOOL\n               | FRAME\n    func_typ : INT\n                | FLOAT\n                | CHAR\n                | BOOL\n                | FRAME\n                | VOID\n    aritm : term PLUS aritm\n             | term MINUS aritm\n             | term\n    term : factor TIMES term\n            | factor DIVIDE term\n            | factor\n    factor : OPPARENTH aritm CLPARENTH\n              | ID\n              | ID dims\n              | CONST_INT\n              | CONST_FLOAT\n    logic : oprnd AND logic\n             | oprnd OR logic\n             | NOT oprnd\n             | oprnd\n    expr : aritm\n            | logic\n            | ID OPPARENTH CLPARENTH\n            | ID OPPARENTH args CLPARENTH\n    oprnd : FALSE\n             | TRUE\n             | relac\n             | OPPARENTH logic CLPARENTH\n    relac : aritm EQUAL aritm\n             | aritm UNEQUAL aritm\n             | aritm LESS aritm\n             | aritm LESSEQ aritm\n             | aritm GREATER aritm\n             | aritm GREATEREQ aritm\n    args : expr COMMA args\n            | expr\n    lectura : READ OPPARENTH CLPARENTH\n    escritura : WRITE OPPARENTH ID CLPARENTH\n                 | WRITE OPPARENTH ID dims CLPARENTH\n                 | WRITE OPPARENTH CONST_STRING CLPARENTH\n    llam_void : ID OPPARENTH CLPARENTH\n                 | ID OPPARENTH args CLPARENTH\n    asign : ID ASGNMNT lectura\n             | ID ASGNMNT expr\n             | ID ASGNMNT CONST_STRING\n             | ID dims ASGNMNT lectura\n             | ID dims ASGNMNT expr\n             | ID dims ASGNMNT CONST_STRING\n    '
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,6,14,15,21,56,],[0,-4,-2,-3,-1,-6,]),'MAIN':([2,4,5,7,8,12,13,16,17,26,27,28,29,30,31,50,105,166,175,178,],[9,9,9,-10,-12,-5,9,-9,-11,-7,-39,-40,-41,-42,-43,-8,-17,-19,-18,-20,]),'VAR':([2,7,12,26,27,28,29,30,31,50,105,113,147,175,],[10,10,-5,-7,-39,-40,-41,-42,-43,-8,-17,10,10,-18,]),'FUNC':([2,4,7,8,12,16,26,27,28,29,30,31,50,105,166,175,178,],[11,11,-10,11,-5,-9,-7,-39,-40,-41,-42,-43,-8,-17,-19,-18,-20,]),'ID':([3,7,10,11,16,24,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,50,51,55,58,60,62,63,64,66,67,68,69,70,71,82,83,84,85,87,88,89,90,91,92,93,94,95,96,99,105,106,107,108,109,111,113,115,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,139,140,141,142,143,145,147,148,152,153,154,155,156,157,158,159,160,162,168,170,171,172,173,174,175,176,182,183,185,187,],[12,-10,19,20,-9,32,45,-7,-39,-40,-41,-42,-43,45,-28,-29,-30,-31,-32,-33,-34,-8,70,32,82,82,100,70,70,-59,-52,-55,70,-57,-60,-57,-87,-88,-89,70,-65,-66,-64,70,-69,-70,-71,82,-85,-81,-17,70,70,70,70,-58,45,82,150,70,70,70,70,70,70,70,70,-63,-90,-91,-92,-86,82,-82,-84,-50,-51,-53,-54,-56,45,45,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,82,-68,-35,-36,45,45,-18,82,-22,-21,45,-23,]),'READ':([7,16,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,50,58,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,95,96,99,105,111,113,127,128,129,130,131,133,135,139,140,141,142,143,145,147,148,152,153,154,155,156,157,158,159,160,162,170,171,172,173,174,175,182,183,185,187,],[-10,-9,46,-7,-39,-40,-41,-42,-43,46,-28,-29,-30,-31,-32,-33,-34,-8,46,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,46,-85,-81,-17,-58,46,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,46,46,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,-68,-35,-36,46,46,-18,-22,-21,46,-23,]),'WRITE':([7,16,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,50,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,96,99,105,111,113,127,128,129,130,131,133,135,139,140,141,142,143,145,147,148,152,153,154,155,156,157,158,159,160,162,170,171,172,173,174,175,182,183,185,187,],[-10,-9,47,-7,-39,-40,-41,-42,-43,47,-28,-29,-30,-31,-32,-33,-34,-8,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,-85,-81,-17,-58,47,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,47,47,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,-68,-35,-36,47,47,-18,-22,-21,47,-23,]),'WHEN':([7,16,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,50,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,96,99,105,111,113,127,128,129,130,131,133,135,139,140,141,142,143,145,147,148,152,153,154,155,156,157,158,159,160,162,170,171,172,173,174,175,182,183,185,187,],[-10,-9,48,-7,-39,-40,-41,-42,-43,48,-28,-29,-30,-31,-32,-33,-34,-8,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,-85,-81,-17,-58,48,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,48,48,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,-68,-35,-36,48,48,-18,-22,-21,48,-23,]),'WHILE':([7,16,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,50,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,96,99,105,111,113,127,128,129,130,131,133,135,139,140,141,142,143,145,147,148,152,153,154,155,156,157,158,159,160,162,170,171,172,173,174,175,182,183,185,187,],[-10,-9,49,-7,-39,-40,-41,-42,-43,49,-28,-29,-30,-31,-32,-33,-34,-8,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,-85,-81,-17,-58,49,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,49,49,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,-68,-35,-36,49,49,-18,-22,-21,49,-23,]),'OPPARENTH':([9,20,45,46,47,48,49,51,58,60,63,64,69,82,86,87,91,95,106,107,108,109,115,119,120,121,122,123,124,125,126,132,168,176,],[18,24,60,61,62,63,64,69,87,87,87,87,69,115,116,87,87,87,69,69,69,69,87,69,69,69,69,69,69,87,87,87,87,87,]),'CLPARENTH':([18,24,27,28,29,30,31,34,35,60,61,66,67,68,70,71,72,81,82,88,89,90,92,93,94,97,98,100,101,102,104,105,110,111,112,115,117,118,127,134,139,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,170,175,],[22,33,-39,-40,-41,-42,-43,54,-16,96,99,-59,-52,-55,-57,-60,-37,-15,-57,-65,-66,-64,-69,-70,-71,131,-80,133,135,136,137,-17,143,-58,-38,148,152,143,-63,162,-50,-51,-53,-54,-56,-67,170,171,172,-72,-73,-74,-75,-76,-77,-78,-61,-62,-79,-68,-18,]),'COLON':([19,32,33,54,],[23,52,53,80,]),'OPBRACE':([22,73,74,75,76,77,78,79,114,163,164,184,],[25,113,-44,-45,-46,-47,-48,-49,147,173,174,185,]),'INT':([23,52,53,80,],[27,27,74,74,]),'FLOAT':([23,52,53,80,],[28,28,75,75,]),'CHAR':([23,52,53,80,],[29,29,76,76,]),'BOOL':([23,52,53,80,],[30,30,77,77,]),'FRAME':([23,52,53,80,],[31,31,78,78,]),'OPBRACKET':([26,27,28,29,30,31,45,70,72,82,100,105,],[51,-39,-40,-41,-42,-43,51,51,51,51,51,138,]),'COMMA':([27,28,29,30,31,35,66,67,68,70,71,72,82,88,89,90,92,93,94,98,105,111,112,127,139,140,141,142,143,148,152,153,154,155,156,157,158,159,160,170,175,],[-39,-40,-41,-42,-43,55,-59,-52,-55,-57,-60,-37,-57,-65,-66,-64,-69,-70,-71,132,-17,-58,-38,-63,-50,-51,-53,-54,-56,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-68,-18,]),'CLBRACE':([36,37,38,39,40,41,42,43,44,57,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,96,99,105,111,127,128,129,130,131,133,135,139,140,141,142,143,144,146,148,152,153,154,155,156,157,158,159,160,162,167,169,170,171,172,175,177,179,180,181,182,183,186,187,],[56,-14,-28,-29,-30,-31,-32,-33,-34,-13,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,-85,-81,-17,-58,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,166,-27,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,-26,178,-68,-35,-36,-18,-25,182,183,-24,-22,-21,187,-23,]),'RETURN':([37,38,39,40,41,42,43,44,57,66,67,68,70,71,82,83,84,85,88,89,90,92,93,94,96,99,105,111,127,128,129,130,131,133,135,139,140,141,142,143,146,148,152,153,154,155,156,157,158,159,160,162,167,170,171,172,175,182,183,187,],[-14,-28,-29,-30,-31,-32,-33,-34,-13,-59,-52,-55,-57,-60,-57,-87,-88,-89,-65,-66,-64,-69,-70,-71,-85,-81,-17,-58,-63,-90,-91,-92,-86,-82,-84,-50,-51,-53,-54,-56,168,-67,-72,-73,-74,-75,-76,-77,-78,-61,-62,-83,176,-68,-35,-36,-18,-22,-21,-23,]),'ASGNMNT':([45,59,105,175,],[58,95,-17,-18,]),'CONST_INT':([51,58,60,63,64,69,87,91,95,106,107,108,109,115,119,120,121,122,123,124,125,126,132,138,168,176,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,165,66,66,]),'CONST_FLOAT':([51,58,60,63,64,69,87,91,95,106,107,108,109,115,119,120,121,122,123,124,125,126,132,168,176,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'VOID':([53,80,],[79,79,]),'CONST_STRING':([58,62,95,116,],[85,101,130,151,]),'LOAD':([58,],[86,]),'NOT':([58,60,63,64,87,95,115,125,126,132,168,176,],[91,91,91,91,91,91,91,91,91,91,91,91,]),'FALSE':([58,60,63,64,87,91,95,115,125,126,132,168,176,],[92,92,92,92,92,92,92,92,92,92,92,92,92,]),'TRUE':([58,60,63,64,87,91,95,115,125,126,132,168,176,],[93,93,93,93,93,93,93,93,93,93,93,93,93,]),'CLBRACKET':([65,66,67,68,70,71,105,111,139,140,141,142,143,165,175,],[105,-59,-52,-55,-57,-60,-17,-58,-50,-51,-53,-54,-56,175,-18,]),'TIMES':([66,68,70,71,82,105,111,143,175,],[-59,108,-57,-60,-57,-17,-58,-56,-18,]),'DIVIDE':([66,68,70,71,82,105,111,143,175,],[-59,109,-57,-60,-57,-17,-58,-56,-18,]),'PLUS':([66,67,68,70,71,82,105,111,141,142,143,175,],[-59,106,-55,-57,-60,-57,-17,-58,-53,-54,-56,-18,]),'MINUS':([66,67,68,70,71,82,105,111,141,142,143,175,],[-59,107,-55,-57,-60,-57,-17,-58,-53,-54,-56,-18,]),'EQUAL':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,119,119,-17,-58,119,-50,-51,-53,-54,-56,-18,]),'UNEQUAL':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,120,120,-17,-58,120,-50,-51,-53,-54,-56,-18,]),'LESS':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,121,121,-17,-58,121,-50,-51,-53,-54,-56,-18,]),'LESSEQ':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,122,122,-17,-58,122,-50,-51,-53,-54,-56,-18,]),'GREATER':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,123,123,-17,-58,123,-50,-51,-53,-54,-56,-18,]),'GREATEREQ':([66,67,68,70,71,82,88,103,105,111,118,139,140,141,142,143,175,],[-59,-52,-55,-57,-60,-57,124,124,-17,-58,124,-50,-51,-53,-54,-56,-18,]),'AND':([66,67,68,70,71,90,92,93,94,105,111,139,140,141,142,143,152,153,154,155,156,157,158,175,],[-59,-52,-55,-57,-60,125,-69,-70,-71,-17,-58,-50,-51,-53,-54,-56,-72,-73,-74,-75,-76,-77,-78,-18,]),'OR':([66,67,68,70,71,90,92,93,94,105,111,139,140,141,142,143,152,153,154,155,156,157,158,175,],[-59,-52,-55,-57,-60,126,-69,-70,-71,-17,-58,-50,-51,-53,-54,-56,-72,-73,-74,-75,-76,-77,-78,-18,]),'THEN':([136,137,],[163,164,]),'ELSE':([182,],[184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'encabezamiento':([0,],[2,]),'var_list':([2,7,113,147,],[4,16,145,145,]),'func_list':([2,4,8,],[5,13,17,]),'cuerpo':([2,4,5,13,],[6,14,15,21,]),'variable':([2,7,113,147,],[7,7,7,7,]),'func':([2,4,8,],[8,8,8,]),'var_typ':([23,52,],[26,72,]),'param_list':([24,55,],[34,81,]),'param':([24,55,],[35,35,]),'estat_list':([25,37,113,145,147,173,174,185,],[36,57,146,167,146,179,180,186,]),'estat':([25,37,113,145,147,173,174,185,],[37,37,37,37,37,37,37,37,]),'asign':([25,37,113,145,147,173,174,185,],[38,38,38,38,38,38,38,38,]),'llam_void':([25,37,113,145,147,173,174,185,],[39,39,39,39,39,39,39,39,]),'lectura':([25,37,58,95,113,145,147,173,174,185,],[40,40,83,128,40,40,40,40,40,40,]),'escritura':([25,37,113,145,147,173,174,185,],[41,41,41,41,41,41,41,41,]),'carga_dt':([25,37,113,145,147,173,174,185,],[42,42,42,42,42,42,42,42,]),'decision':([25,37,113,145,147,173,174,185,],[43,43,43,43,43,43,43,43,]),'ciclo':([25,37,113,145,147,173,174,185,],[44,44,44,44,44,44,44,44,]),'dims':([26,45,70,72,82,100,],[50,59,111,112,111,134,]),'aritm':([51,58,60,63,64,69,87,91,95,106,107,115,119,120,121,122,123,124,125,126,132,168,176,],[65,88,88,103,103,110,118,103,88,139,140,88,153,154,155,156,157,158,103,103,88,88,88,]),'term':([51,58,60,63,64,69,87,91,95,106,107,108,109,115,119,120,121,122,123,124,125,126,132,168,176,],[67,67,67,67,67,67,67,67,67,67,67,141,142,67,67,67,67,67,67,67,67,67,67,67,67,]),'factor':([51,58,60,63,64,69,87,91,95,106,107,108,109,115,119,120,121,122,123,124,125,126,132,168,176,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'func_typ':([53,80,],[73,114,]),'expr':([58,60,95,115,132,168,176,],[84,98,129,98,98,177,181,]),'logic':([58,60,63,64,87,95,115,125,126,132,168,176,],[89,89,102,104,117,89,89,159,160,89,89,89,]),'oprnd':([58,60,63,64,87,91,95,115,125,126,132,168,176,],[90,90,90,90,90,127,90,90,90,90,90,90,90,]),'relac':([58,60,63,64,87,91,95,115,125,126,132,168,176,],[94,94,94,94,94,94,94,94,94,94,94,94,94,]),'args':([60,115,132,],[97,149,161,]),'func_cont':([113,147,],[144,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> encabezamiento var_list func_list cuerpo','program',4,'p_start','grammar.py',8),
  ('program -> encabezamiento var_list cuerpo','program',3,'p_start','grammar.py',9),
  ('program -> encabezamiento func_list cuerpo','program',3,'p_start','grammar.py',10),
  ('program -> encabezamiento cuerpo','program',2,'p_start','grammar.py',11),
  ('encabezamiento -> PROGRAM ID','encabezamiento',2,'p_encabezamiento','grammar.py',16),
  ('cuerpo -> MAIN OPPARENTH CLPARENTH OPBRACE estat_list CLBRACE','cuerpo',6,'p_cuerpo','grammar.py',21),
  ('variable -> VAR ID COLON var_typ','variable',4,'p_variable','grammar.py',26),
  ('variable -> VAR ID COLON var_typ dims','variable',5,'p_variable','grammar.py',27),
  ('var_list -> variable var_list','var_list',2,'p_var_list','grammar.py',32),
  ('var_list -> variable','var_list',1,'p_var_list','grammar.py',33),
  ('func_list -> func func_list','func_list',2,'p_func_list','grammar.py',38),
  ('func_list -> func','func_list',1,'p_func_list','grammar.py',39),
  ('estat_list -> estat estat_list','estat_list',2,'p_estat_list','grammar.py',44),
  ('estat_list -> estat','estat_list',1,'p_estat_list','grammar.py',45),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','grammar.py',50),
  ('param_list -> param','param_list',1,'p_param_list','grammar.py',51),
  ('dims -> OPBRACKET aritm CLBRACKET','dims',3,'p_dims','grammar.py',56),
  ('dims -> OPBRACKET aritm CLBRACKET OPBRACKET CONST_INT CLBRACKET','dims',6,'p_dims','grammar.py',57),
  ('func -> FUNC ID OPPARENTH CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE','func',9,'p_func','grammar.py',62),
  ('func -> FUNC ID OPPARENTH param_list CLPARENTH COLON func_typ OPBRACE func_cont CLBRACE','func',10,'p_func','grammar.py',63),
  ('ciclo -> WHILE OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE','ciclo',8,'p_ciclo','grammar.py',68),
  ('decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE','decision',8,'p_decision','grammar.py',73),
  ('decision -> WHEN OPPARENTH logic CLPARENTH THEN OPBRACE estat_list CLBRACE ELSE OPBRACE estat_list CLBRACE','decision',12,'p_decision','grammar.py',74),
  ('func_cont -> var_list estat_list RETURN expr','func_cont',4,'p_func_cont','grammar.py',79),
  ('func_cont -> estat_list RETURN expr','func_cont',3,'p_func_cont','grammar.py',80),
  ('func_cont -> var_list estat_list','func_cont',2,'p_func_cont','grammar.py',81),
  ('func_cont -> estat_list','func_cont',1,'p_func_cont','grammar.py',82),
  ('estat -> asign','estat',1,'p_estat','grammar.py',87),
  ('estat -> llam_void','estat',1,'p_estat','grammar.py',88),
  ('estat -> lectura','estat',1,'p_estat','grammar.py',89),
  ('estat -> escritura','estat',1,'p_estat','grammar.py',90),
  ('estat -> carga_dt','estat',1,'p_estat','grammar.py',91),
  ('estat -> decision','estat',1,'p_estat','grammar.py',92),
  ('estat -> ciclo','estat',1,'p_estat','grammar.py',93),
  ('carga_dt -> ID ASGNMNT LOAD OPPARENTH ID CLPARENTH','carga_dt',6,'p_carga_dt','grammar.py',98),
  ('carga_dt -> ID ASGNMNT LOAD OPPARENTH CONST_STRING CLPARENTH','carga_dt',6,'p_carga_dt','grammar.py',99),
  ('param -> ID COLON var_typ','param',3,'p_param','grammar.py',104),
  ('param -> ID COLON var_typ dims','param',4,'p_param','grammar.py',105),
  ('var_typ -> INT','var_typ',1,'p_var_typ','grammar.py',110),
  ('var_typ -> FLOAT','var_typ',1,'p_var_typ','grammar.py',111),
  ('var_typ -> CHAR','var_typ',1,'p_var_typ','grammar.py',112),
  ('var_typ -> BOOL','var_typ',1,'p_var_typ','grammar.py',113),
  ('var_typ -> FRAME','var_typ',1,'p_var_typ','grammar.py',114),
  ('func_typ -> INT','func_typ',1,'p_func_typ','grammar.py',119),
  ('func_typ -> FLOAT','func_typ',1,'p_func_typ','grammar.py',120),
  ('func_typ -> CHAR','func_typ',1,'p_func_typ','grammar.py',121),
  ('func_typ -> BOOL','func_typ',1,'p_func_typ','grammar.py',122),
  ('func_typ -> FRAME','func_typ',1,'p_func_typ','grammar.py',123),
  ('func_typ -> VOID','func_typ',1,'p_func_typ','grammar.py',124),
  ('aritm -> term PLUS aritm','aritm',3,'p_aritm','grammar.py',129),
  ('aritm -> term MINUS aritm','aritm',3,'p_aritm','grammar.py',130),
  ('aritm -> term','aritm',1,'p_aritm','grammar.py',131),
  ('term -> factor TIMES term','term',3,'p_term','grammar.py',136),
  ('term -> factor DIVIDE term','term',3,'p_term','grammar.py',137),
  ('term -> factor','term',1,'p_term','grammar.py',138),
  ('factor -> OPPARENTH aritm CLPARENTH','factor',3,'p_factor','grammar.py',143),
  ('factor -> ID','factor',1,'p_factor','grammar.py',144),
  ('factor -> ID dims','factor',2,'p_factor','grammar.py',145),
  ('factor -> CONST_INT','factor',1,'p_factor','grammar.py',146),
  ('factor -> CONST_FLOAT','factor',1,'p_factor','grammar.py',147),
  ('logic -> oprnd AND logic','logic',3,'p_logic','grammar.py',152),
  ('logic -> oprnd OR logic','logic',3,'p_logic','grammar.py',153),
  ('logic -> NOT oprnd','logic',2,'p_logic','grammar.py',154),
  ('logic -> oprnd','logic',1,'p_logic','grammar.py',155),
  ('expr -> aritm','expr',1,'p_expr','grammar.py',160),
  ('expr -> logic','expr',1,'p_expr','grammar.py',161),
  ('expr -> ID OPPARENTH CLPARENTH','expr',3,'p_expr','grammar.py',162),
  ('expr -> ID OPPARENTH args CLPARENTH','expr',4,'p_expr','grammar.py',163),
  ('oprnd -> FALSE','oprnd',1,'p_oprnd','grammar.py',168),
  ('oprnd -> TRUE','oprnd',1,'p_oprnd','grammar.py',169),
  ('oprnd -> relac','oprnd',1,'p_oprnd','grammar.py',170),
  ('oprnd -> OPPARENTH logic CLPARENTH','oprnd',3,'p_oprnd','grammar.py',171),
  ('relac -> aritm EQUAL aritm','relac',3,'p_relac','grammar.py',176),
  ('relac -> aritm UNEQUAL aritm','relac',3,'p_relac','grammar.py',177),
  ('relac -> aritm LESS aritm','relac',3,'p_relac','grammar.py',178),
  ('relac -> aritm LESSEQ aritm','relac',3,'p_relac','grammar.py',179),
  ('relac -> aritm GREATER aritm','relac',3,'p_relac','grammar.py',180),
  ('relac -> aritm GREATEREQ aritm','relac',3,'p_relac','grammar.py',181),
  ('args -> expr COMMA args','args',3,'p_args','grammar.py',193),
  ('args -> expr','args',1,'p_args','grammar.py',194),
  ('lectura -> READ OPPARENTH CLPARENTH','lectura',3,'p_lectura','grammar.py',199),
  ('escritura -> WRITE OPPARENTH ID CLPARENTH','escritura',4,'p_escritura','grammar.py',204),
  ('escritura -> WRITE OPPARENTH ID dims CLPARENTH','escritura',5,'p_escritura','grammar.py',205),
  ('escritura -> WRITE OPPARENTH CONST_STRING CLPARENTH','escritura',4,'p_escritura','grammar.py',206),
  ('llam_void -> ID OPPARENTH CLPARENTH','llam_void',3,'p_llam_void','grammar.py',211),
  ('llam_void -> ID OPPARENTH args CLPARENTH','llam_void',4,'p_llam_void','grammar.py',212),
  ('asign -> ID ASGNMNT lectura','asign',3,'p_asign','grammar.py',217),
  ('asign -> ID ASGNMNT expr','asign',3,'p_asign','grammar.py',218),
  ('asign -> ID ASGNMNT CONST_STRING','asign',3,'p_asign','grammar.py',219),
  ('asign -> ID dims ASGNMNT lectura','asign',4,'p_asign','grammar.py',220),
  ('asign -> ID dims ASGNMNT expr','asign',4,'p_asign','grammar.py',221),
  ('asign -> ID dims ASGNMNT CONST_STRING','asign',4,'p_asign','grammar.py',222),
]
